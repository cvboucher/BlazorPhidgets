/*!
 * Phidget22 JavaScript Library v3.19.1 (https://phidgets.com)
 *  phidget22 release 1.19.20240304
 * Copyright 2017-2024 Phidgets Inc.
 * Licensed under ISC
 */
var commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},check=function(e){return e&&e.Math==Math&&e},global$D=check("object"==typeof globalThis&&globalThis)||check("object"==typeof window&&window)||check("object"==typeof self&&self)||check("object"==typeof commonjsGlobal&&commonjsGlobal)||function(){return this}()||Function("return this")(),fails$f=function(e){try{return!!e()}catch(e){return!0}},fails$e=fails$f,functionBindNative=!fails$e((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")})),NATIVE_BIND$3=functionBindNative,FunctionPrototype$2=Function.prototype,apply$2=FunctionPrototype$2.apply,call$c=FunctionPrototype$2.call,functionApply="object"==typeof Reflect&&Reflect.apply||(NATIVE_BIND$3?call$c.bind(apply$2):function(){return call$c.apply(apply$2,arguments)}),NATIVE_BIND$2=functionBindNative,FunctionPrototype$1=Function.prototype,bind$6=FunctionPrototype$1.bind,call$b=FunctionPrototype$1.call,uncurryThis$j=NATIVE_BIND$2&&bind$6.bind(call$b,call$b),functionUncurryThis=NATIVE_BIND$2?function(e){return e&&uncurryThis$j(e)}:function(e){return e&&function(){return call$b.apply(e,arguments)}},isCallable$h=function(e){return"function"==typeof e},objectGetOwnPropertyDescriptor={},fails$d=fails$f,descriptors=!fails$d((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),NATIVE_BIND$1=functionBindNative,call$a=Function.prototype.call,functionCall=NATIVE_BIND$1?call$a.bind(call$a):function(){return call$a.apply(call$a,arguments)},objectPropertyIsEnumerable={},$propertyIsEnumerable={}.propertyIsEnumerable,getOwnPropertyDescriptor$2=Object.getOwnPropertyDescriptor,NASHORN_BUG=getOwnPropertyDescriptor$2&&!$propertyIsEnumerable.call({1:2},1);objectPropertyIsEnumerable.f=NASHORN_BUG?function(e){var t=getOwnPropertyDescriptor$2(this,e);return!!t&&t.enumerable}:$propertyIsEnumerable;var match,version,createPropertyDescriptor$5=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},uncurryThis$i=functionUncurryThis,toString$7=uncurryThis$i({}.toString),stringSlice$1=uncurryThis$i("".slice),classofRaw$1=function(e){return stringSlice$1(toString$7(e),8,-1)},global$C=global$D,uncurryThis$h=functionUncurryThis,fails$c=fails$f,classof$9=classofRaw$1,Object$5=global$C.Object,split=uncurryThis$h("".split),indexedObject=fails$c((function(){return!Object$5("z").propertyIsEnumerable(0)}))?function(e){return"String"==classof$9(e)?split(e,""):Object$5(e)}:Object$5,global$B=global$D,TypeError$f=global$B.TypeError,requireObjectCoercible$4=function(e){if(null==e)throw TypeError$f("Can't call method on "+e);return e},IndexedObject$1=indexedObject,requireObjectCoercible$3=requireObjectCoercible$4,toIndexedObject$5=function(e){return IndexedObject$1(requireObjectCoercible$3(e))},isCallable$g=isCallable$h,isObject$8=function(e){return"object"==typeof e?null!==e:isCallable$g(e)},path$4={},path$3=path$4,global$A=global$D,isCallable$f=isCallable$h,aFunction=function(e){return isCallable$f(e)?e:void 0},getBuiltIn$9=function(e,t){return arguments.length<2?aFunction(path$3[e])||aFunction(global$A[e]):path$3[e]&&path$3[e][t]||global$A[e]&&global$A[e][t]},uncurryThis$g=functionUncurryThis,objectIsPrototypeOf=uncurryThis$g({}.isPrototypeOf),getBuiltIn$8=getBuiltIn$9,engineUserAgent=getBuiltIn$8("navigator","userAgent")||"",global$z=global$D,userAgent$3=engineUserAgent,process$3=global$z.process,Deno=global$z.Deno,versions=process$3&&process$3.versions||Deno&&Deno.version,v8=versions&&versions.v8;v8&&(version=(match=v8.split("."))[0]>0&&match[0]<4?1:+(match[0]+match[1])),!version&&userAgent$3&&(!(match=userAgent$3.match(/Edge\/(\d+)/))||match[1]>=74)&&(match=userAgent$3.match(/Chrome\/(\d+)/))&&(version=+match[1]);var engineV8Version=version,V8_VERSION$1=engineV8Version,fails$b=fails$f,nativeSymbol=!!Object.getOwnPropertySymbols&&!fails$b((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&V8_VERSION$1&&V8_VERSION$1<41})),NATIVE_SYMBOL$1=nativeSymbol,useSymbolAsUid=NATIVE_SYMBOL$1&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,global$y=global$D,getBuiltIn$7=getBuiltIn$9,isCallable$e=isCallable$h,isPrototypeOf$8=objectIsPrototypeOf,USE_SYMBOL_AS_UID$1=useSymbolAsUid,Object$4=global$y.Object,isSymbol$2=USE_SYMBOL_AS_UID$1?function(e){return"symbol"==typeof e}:function(e){var t=getBuiltIn$7("Symbol");return isCallable$e(t)&&isPrototypeOf$8(t.prototype,Object$4(e))},global$x=global$D,String$5=global$x.String,tryToString$4=function(e){try{return String$5(e)}catch(e){return"Object"}},global$w=global$D,isCallable$d=isCallable$h,tryToString$3=tryToString$4,TypeError$e=global$w.TypeError,aCallable$8=function(e){if(isCallable$d(e))return e;throw TypeError$e(tryToString$3(e)+" is not a function")},aCallable$7=aCallable$8,getMethod$3=function(e,t){var r=e[t];return null==r?void 0:aCallable$7(r)},global$v=global$D,call$9=functionCall,isCallable$c=isCallable$h,isObject$7=isObject$8,TypeError$d=global$v.TypeError,ordinaryToPrimitive$1=function(e,t){var r,i;if("string"===t&&isCallable$c(r=e.toString)&&!isObject$7(i=call$9(r,e)))return i;if(isCallable$c(r=e.valueOf)&&!isObject$7(i=call$9(r,e)))return i;if("string"!==t&&isCallable$c(r=e.toString)&&!isObject$7(i=call$9(r,e)))return i;throw TypeError$d("Can't convert object to primitive value")},shared$3={exports:{}},isPure=!0,global$u=global$D,defineProperty$1=Object.defineProperty,setGlobal$1=function(e,t){try{defineProperty$1(global$u,e,{value:t,configurable:!0,writable:!0})}catch(r){global$u[e]=t}return t},global$t=global$D,setGlobal=setGlobal$1,SHARED="__core-js_shared__",store$3=global$t[SHARED]||setGlobal(SHARED,{}),sharedStore=store$3,store$2=sharedStore;(shared$3.exports=function(e,t){return store$2[e]||(store$2[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.21.1",mode:"pure",copyright:"Â© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE",source:"https://github.com/zloirock/core-js"});var global$s=global$D,requireObjectCoercible$2=requireObjectCoercible$4,Object$3=global$s.Object,toObject$3=function(e){return Object$3(requireObjectCoercible$2(e))},uncurryThis$f=functionUncurryThis,toObject$2=toObject$3,hasOwnProperty=uncurryThis$f({}.hasOwnProperty),hasOwnProperty_1=Object.hasOwn||function(e,t){return hasOwnProperty(toObject$2(e),t)},uncurryThis$e=functionUncurryThis,id=0,postfix=Math.random(),toString$6=uncurryThis$e(1..toString),uid$2=function(e){return"Symbol("+(void 0===e?"":e)+")_"+toString$6(++id+postfix,36)},global$r=global$D,shared$2=shared$3.exports,hasOwn$a=hasOwnProperty_1,uid$1=uid$2,NATIVE_SYMBOL=nativeSymbol,USE_SYMBOL_AS_UID=useSymbolAsUid,WellKnownSymbolsStore=shared$2("wks"),Symbol$1=global$r.Symbol,symbolFor=Symbol$1&&Symbol$1.for,createWellKnownSymbol=USE_SYMBOL_AS_UID?Symbol$1:Symbol$1&&Symbol$1.withoutSetter||uid$1,wellKnownSymbol$e=function(e){if(!hasOwn$a(WellKnownSymbolsStore,e)||!NATIVE_SYMBOL&&"string"!=typeof WellKnownSymbolsStore[e]){var t="Symbol."+e;NATIVE_SYMBOL&&hasOwn$a(Symbol$1,e)?WellKnownSymbolsStore[e]=Symbol$1[e]:WellKnownSymbolsStore[e]=USE_SYMBOL_AS_UID&&symbolFor?symbolFor(t):createWellKnownSymbol(t)}return WellKnownSymbolsStore[e]},global$q=global$D,call$8=functionCall,isObject$6=isObject$8,isSymbol$1=isSymbol$2,getMethod$2=getMethod$3,ordinaryToPrimitive=ordinaryToPrimitive$1,wellKnownSymbol$d=wellKnownSymbol$e,TypeError$c=global$q.TypeError,TO_PRIMITIVE=wellKnownSymbol$d("toPrimitive"),toPrimitive$1=function(e,t){if(!isObject$6(e)||isSymbol$1(e))return e;var r,i=getMethod$2(e,TO_PRIMITIVE);if(i){if(void 0===t&&(t="default"),r=call$8(i,e,t),!isObject$6(r)||isSymbol$1(r))return r;throw TypeError$c("Can't convert object to primitive value")}return void 0===t&&(t="number"),ordinaryToPrimitive(e,t)},toPrimitive=toPrimitive$1,isSymbol=isSymbol$2,toPropertyKey$2=function(e){var t=toPrimitive(e,"string");return isSymbol(t)?t:t+""},global$p=global$D,isObject$5=isObject$8,document$3=global$p.document,EXISTS$1=isObject$5(document$3)&&isObject$5(document$3.createElement),documentCreateElement$1=function(e){return EXISTS$1?document$3.createElement(e):{}},DESCRIPTORS$7=descriptors,fails$a=fails$f,createElement$1=documentCreateElement$1,ie8DomDefine=!DESCRIPTORS$7&&!fails$a((function(){return 7!=Object.defineProperty(createElement$1("div"),"a",{get:function(){return 7}}).a})),DESCRIPTORS$6=descriptors,call$7=functionCall,propertyIsEnumerableModule=objectPropertyIsEnumerable,createPropertyDescriptor$4=createPropertyDescriptor$5,toIndexedObject$4=toIndexedObject$5,toPropertyKey$1=toPropertyKey$2,hasOwn$9=hasOwnProperty_1,IE8_DOM_DEFINE$1=ie8DomDefine,$getOwnPropertyDescriptor$1=Object.getOwnPropertyDescriptor;objectGetOwnPropertyDescriptor.f=DESCRIPTORS$6?$getOwnPropertyDescriptor$1:function(e,t){if(e=toIndexedObject$4(e),t=toPropertyKey$1(t),IE8_DOM_DEFINE$1)try{return $getOwnPropertyDescriptor$1(e,t)}catch(e){}if(hasOwn$9(e,t))return createPropertyDescriptor$4(!call$7(propertyIsEnumerableModule.f,e,t),e[t])};var fails$9=fails$f,isCallable$b=isCallable$h,replacement=/#|\.prototype\./,isForced$2=function(e,t){var r=data[normalize(e)];return r==POLYFILL||r!=NATIVE&&(isCallable$b(t)?fails$9(t):!!t)},normalize=isForced$2.normalize=function(e){return String(e).replace(replacement,".").toLowerCase()},data=isForced$2.data={},NATIVE=isForced$2.NATIVE="N",POLYFILL=isForced$2.POLYFILL="P",isForced_1=isForced$2,uncurryThis$d=functionUncurryThis,aCallable$6=aCallable$8,NATIVE_BIND=functionBindNative,bind$5=functionUncurryThis(functionUncurryThis.bind),functionBindContext=function(e,t){return aCallable$6(e),void 0===t?e:NATIVE_BIND?bind$5(e,t):function(){return e.apply(t,arguments)}},objectDefineProperty={},DESCRIPTORS$5=descriptors,fails$8=fails$f,v8PrototypeDefineBug=DESCRIPTORS$5&&fails$8((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype})),global$o=global$D,isObject$4=isObject$8,String$4=global$o.String,TypeError$b=global$o.TypeError,anObject$b=function(e){if(isObject$4(e))return e;throw TypeError$b(String$4(e)+" is not an object")},global$n=global$D,DESCRIPTORS$4=descriptors,IE8_DOM_DEFINE=ie8DomDefine,V8_PROTOTYPE_DEFINE_BUG$1=v8PrototypeDefineBug,anObject$a=anObject$b,toPropertyKey=toPropertyKey$2,TypeError$a=global$n.TypeError,$defineProperty=Object.defineProperty,$getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor,ENUMERABLE="enumerable",CONFIGURABLE$1="configurable",WRITABLE="writable";objectDefineProperty.f=DESCRIPTORS$4?V8_PROTOTYPE_DEFINE_BUG$1?function(e,t,r){if(anObject$a(e),t=toPropertyKey(t),anObject$a(r),"function"==typeof e&&"prototype"===t&&"value"in r&&WRITABLE in r&&!r[WRITABLE]){var i=$getOwnPropertyDescriptor(e,t);i&&i[WRITABLE]&&(e[t]=r.value,r={configurable:CONFIGURABLE$1 in r?r[CONFIGURABLE$1]:i[CONFIGURABLE$1],enumerable:ENUMERABLE in r?r[ENUMERABLE]:i[ENUMERABLE],writable:!1})}return $defineProperty(e,t,r)}:$defineProperty:function(e,t,r){if(anObject$a(e),t=toPropertyKey(t),anObject$a(r),IE8_DOM_DEFINE)try{return $defineProperty(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError$a("Accessors not supported");return"value"in r&&(e[t]=r.value),e};var DESCRIPTORS$3=descriptors,definePropertyModule$3=objectDefineProperty,createPropertyDescriptor$3=createPropertyDescriptor$5,createNonEnumerableProperty$7=DESCRIPTORS$3?function(e,t,r){return definePropertyModule$3.f(e,t,createPropertyDescriptor$3(1,r))}:function(e,t,r){return e[t]=r,e},global$m=global$D,apply$1=functionApply,uncurryThis$c=functionUncurryThis,isCallable$a=isCallable$h,getOwnPropertyDescriptor$1=objectGetOwnPropertyDescriptor.f,isForced$1=isForced_1,path$2=path$4,bind$4=functionBindContext,createNonEnumerableProperty$6=createNonEnumerableProperty$7,hasOwn$8=hasOwnProperty_1,wrapConstructor=function(e){var t=function(r,i,a){if(this instanceof t){switch(arguments.length){case 0:return new e;case 1:return new e(r);case 2:return new e(r,i)}return new e(r,i,a)}return apply$1(e,this,arguments)};return t.prototype=e.prototype,t},_export=function(e,t){var r,i,a,s,n,o,h,c,d=e.target,u=e.global,l=e.stat,g=e.proto,w=u?global$m:l?global$m[d]:(global$m[d]||{}).prototype,p=u?path$2:path$2[d]||createNonEnumerableProperty$6(path$2,d,{})[d],E=p.prototype;for(a in t)r=!isForced$1(u?a:d+(l?".":"#")+a,e.forced)&&w&&hasOwn$8(w,a),n=p[a],r&&(o=e.noTargetGet?(c=getOwnPropertyDescriptor$1(w,a))&&c.value:w[a]),s=r&&o?o:t[a],r&&typeof n==typeof s||(h=e.bind&&r?bind$4(s,global$m):e.wrap&&r?wrapConstructor(s):g&&isCallable$a(s)?uncurryThis$c(s):s,(e.sham||s&&s.sham||n&&n.sham)&&createNonEnumerableProperty$6(h,"sham",!0),createNonEnumerableProperty$6(p,a,h),g&&(hasOwn$8(path$2,i=d+"Prototype")||createNonEnumerableProperty$6(path$2,i,{}),createNonEnumerableProperty$6(path$2[i],a,s),e.real&&E&&!E[a]&&createNonEnumerableProperty$6(E,a,s)))},shared$1=shared$3.exports,uid=uid$2,keys=shared$1("keys"),sharedKey$3=function(e){return keys[e]||(keys[e]=uid(e))},fails$7=fails$f,correctPrototypeGetter=!fails$7((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),global$l=global$D,hasOwn$7=hasOwnProperty_1,isCallable$9=isCallable$h,toObject$1=toObject$3,sharedKey$2=sharedKey$3,CORRECT_PROTOTYPE_GETTER=correctPrototypeGetter,IE_PROTO$1=sharedKey$2("IE_PROTO"),Object$2=global$l.Object,ObjectPrototype=Object$2.prototype,objectGetPrototypeOf=CORRECT_PROTOTYPE_GETTER?Object$2.getPrototypeOf:function(e){var t=toObject$1(e);if(hasOwn$7(t,IE_PROTO$1))return t[IE_PROTO$1];var r=t.constructor;return isCallable$9(r)&&t instanceof r?r.prototype:t instanceof Object$2?ObjectPrototype:null},global$k=global$D,isCallable$8=isCallable$h,String$3=global$k.String,TypeError$9=global$k.TypeError,aPossiblePrototype$1=function(e){if("object"==typeof e||isCallable$8(e))return e;throw TypeError$9("Can't set "+String$3(e)+" as a prototype")},uncurryThis$b=functionUncurryThis,anObject$9=anObject$b,aPossiblePrototype=aPossiblePrototype$1,objectSetPrototypeOf=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=uncurryThis$b(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set))(r,[]),t=r instanceof Array}catch(e){}return function(r,i){return anObject$9(r),aPossiblePrototype(i),t?e(r,i):r.__proto__=i,r}}():void 0),objectGetOwnPropertyNames={},ceil=Math.ceil,floor=Math.floor,toIntegerOrInfinity$3=function(e){var t=+e;return t!=t||0===t?0:(t>0?floor:ceil)(t)},toIntegerOrInfinity$2=toIntegerOrInfinity$3,max=Math.max,min$1=Math.min,toAbsoluteIndex$1=function(e,t){var r=toIntegerOrInfinity$2(e);return r<0?max(r+t,0):min$1(r,t)},toIntegerOrInfinity$1=toIntegerOrInfinity$3,min=Math.min,toLength$1=function(e){return e>0?min(toIntegerOrInfinity$1(e),9007199254740991):0},toLength=toLength$1,lengthOfArrayLike$3=function(e){return toLength(e.length)},toIndexedObject$3=toIndexedObject$5,toAbsoluteIndex=toAbsoluteIndex$1,lengthOfArrayLike$2=lengthOfArrayLike$3,createMethod$3=function(e){return function(t,r,i){var a,s=toIndexedObject$3(t),n=lengthOfArrayLike$2(s),o=toAbsoluteIndex(i,n);if(e&&r!=r){for(;n>o;)if((a=s[o++])!=a)return!0}else for(;n>o;o++)if((e||o in s)&&s[o]===r)return e||o||0;return!e&&-1}},arrayIncludes={includes:createMethod$3(!0),indexOf:createMethod$3(!1)},hiddenKeys$4={},uncurryThis$a=functionUncurryThis,hasOwn$6=hasOwnProperty_1,toIndexedObject$2=toIndexedObject$5,indexOf=arrayIncludes.indexOf,hiddenKeys$3=hiddenKeys$4,push$1=uncurryThis$a([].push),objectKeysInternal=function(e,t){var r,i=toIndexedObject$2(e),a=0,s=[];for(r in i)!hasOwn$6(hiddenKeys$3,r)&&hasOwn$6(i,r)&&push$1(s,r);for(;t.length>a;)hasOwn$6(i,r=t[a++])&&(~indexOf(s,r)||push$1(s,r));return s},enumBugKeys$3=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],internalObjectKeys$1=objectKeysInternal,enumBugKeys$2=enumBugKeys$3,hiddenKeys$2=enumBugKeys$2.concat("length","prototype");objectGetOwnPropertyNames.f=Object.getOwnPropertyNames||function(e){return internalObjectKeys$1(e,hiddenKeys$2)};var objectGetOwnPropertySymbols={};objectGetOwnPropertySymbols.f=Object.getOwnPropertySymbols;var getBuiltIn$6=getBuiltIn$9,uncurryThis$9=functionUncurryThis,getOwnPropertyNamesModule=objectGetOwnPropertyNames,getOwnPropertySymbolsModule=objectGetOwnPropertySymbols,anObject$8=anObject$b,concat=uncurryThis$9([].concat),ownKeys$1=getBuiltIn$6("Reflect","ownKeys")||function(e){var t=getOwnPropertyNamesModule.f(anObject$8(e)),r=getOwnPropertySymbolsModule.f;return r?concat(t,r(e)):t},hasOwn$5=hasOwnProperty_1,ownKeys=ownKeys$1,getOwnPropertyDescriptorModule=objectGetOwnPropertyDescriptor,definePropertyModule$2=objectDefineProperty,copyConstructorProperties$1=function(e,t,r){for(var i=ownKeys(t),a=definePropertyModule$2.f,s=getOwnPropertyDescriptorModule.f,n=0;n<i.length;n++){var o=i[n];hasOwn$5(e,o)||r&&hasOwn$5(r,o)||a(e,o,s(t,o))}},objectDefineProperties={},internalObjectKeys=objectKeysInternal,enumBugKeys$1=enumBugKeys$3,objectKeys$1=Object.keys||function(e){return internalObjectKeys(e,enumBugKeys$1)},DESCRIPTORS$2=descriptors,V8_PROTOTYPE_DEFINE_BUG=v8PrototypeDefineBug,definePropertyModule$1=objectDefineProperty,anObject$7=anObject$b,toIndexedObject$1=toIndexedObject$5,objectKeys=objectKeys$1;objectDefineProperties.f=DESCRIPTORS$2&&!V8_PROTOTYPE_DEFINE_BUG?Object.defineProperties:function(e,t){anObject$7(e);for(var r,i=toIndexedObject$1(t),a=objectKeys(t),s=a.length,n=0;s>n;)definePropertyModule$1.f(e,r=a[n++],i[r]);return e};var activeXDocument,getBuiltIn$5=getBuiltIn$9,html$2=getBuiltIn$5("document","documentElement"),anObject$6=anObject$b,definePropertiesModule=objectDefineProperties,enumBugKeys=enumBugKeys$3,hiddenKeys$1=hiddenKeys$4,html$1=html$2,documentCreateElement=documentCreateElement$1,sharedKey$1=sharedKey$3,GT=">",LT="<",PROTOTYPE="prototype",SCRIPT="script",IE_PROTO=sharedKey$1("IE_PROTO"),EmptyConstructor=function(){},scriptTag=function(e){return LT+SCRIPT+GT+e+LT+"/"+SCRIPT+GT},NullProtoObjectViaActiveX=function(e){e.write(scriptTag("")),e.close();var t=e.parentWindow.Object;return e=null,t},NullProtoObjectViaIFrame=function(){var e,t=documentCreateElement("iframe"),r="java"+SCRIPT+":";return t.style.display="none",html$1.appendChild(t),t.src=String(r),(e=t.contentWindow.document).open(),e.write(scriptTag("document.F=Object")),e.close(),e.F},NullProtoObject=function(){try{activeXDocument=new ActiveXObject("htmlfile")}catch(e){}NullProtoObject="undefined"!=typeof document?document.domain&&activeXDocument?NullProtoObjectViaActiveX(activeXDocument):NullProtoObjectViaIFrame():NullProtoObjectViaActiveX(activeXDocument);for(var e=enumBugKeys.length;e--;)delete NullProtoObject[PROTOTYPE][enumBugKeys[e]];return NullProtoObject()};hiddenKeys$1[IE_PROTO]=!0;var objectCreate=Object.create||function(e,t){var r;return null!==e?(EmptyConstructor[PROTOTYPE]=anObject$6(e),r=new EmptyConstructor,EmptyConstructor[PROTOTYPE]=null,r[IE_PROTO]=e):r=NullProtoObject(),void 0===t?r:definePropertiesModule.f(r,t)},uncurryThis$8=functionUncurryThis,replace$1=uncurryThis$8("".replace),TEST=String(Error("zxcasd").stack),V8_OR_CHAKRA_STACK_ENTRY=/\n\s*at [^:]*:[^\n]*/,IS_V8_OR_CHAKRA_STACK=V8_OR_CHAKRA_STACK_ENTRY.test(TEST),clearErrorStack$1=function(e,t){if(IS_V8_OR_CHAKRA_STACK&&"string"==typeof e)for(;t--;)e=replace$1(e,V8_OR_CHAKRA_STACK_ENTRY,"");return e},isObject$3=isObject$8,createNonEnumerableProperty$5=createNonEnumerableProperty$7,installErrorCause$1=function(e,t){isObject$3(t)&&"cause"in t&&createNonEnumerableProperty$5(e,"cause",t.cause)},iterators={},wellKnownSymbol$c=wellKnownSymbol$e,Iterators$5=iterators,ITERATOR$4=wellKnownSymbol$c("iterator"),ArrayPrototype$3=Array.prototype,isArrayIteratorMethod$1=function(e){return void 0!==e&&(Iterators$5.Array===e||ArrayPrototype$3[ITERATOR$4]===e)},wellKnownSymbol$b=wellKnownSymbol$e,TO_STRING_TAG$4=wellKnownSymbol$b("toStringTag"),test$1={};test$1[TO_STRING_TAG$4]="z";var toStringTagSupport="[object z]"===String(test$1),global$j=global$D,TO_STRING_TAG_SUPPORT$2=toStringTagSupport,isCallable$7=isCallable$h,classofRaw=classofRaw$1,wellKnownSymbol$a=wellKnownSymbol$e,TO_STRING_TAG$3=wellKnownSymbol$a("toStringTag"),Object$1=global$j.Object,CORRECT_ARGUMENTS="Arguments"==classofRaw(function(){return arguments}()),tryGet=function(e,t){try{return e[t]}catch(e){}},classof$8=TO_STRING_TAG_SUPPORT$2?classofRaw:function(e){var t,r,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=tryGet(t=Object$1(e),TO_STRING_TAG$3))?r:CORRECT_ARGUMENTS?classofRaw(t):"Object"==(i=classofRaw(t))&&isCallable$7(t.callee)?"Arguments":i},classof$7=classof$8,getMethod$1=getMethod$3,Iterators$4=iterators,wellKnownSymbol$9=wellKnownSymbol$e,ITERATOR$3=wellKnownSymbol$9("iterator"),getIteratorMethod$2=function(e){if(null!=e)return getMethod$1(e,ITERATOR$3)||getMethod$1(e,"@@iterator")||Iterators$4[classof$7(e)]},global$i=global$D,call$6=functionCall,aCallable$5=aCallable$8,anObject$5=anObject$b,tryToString$2=tryToString$4,getIteratorMethod$1=getIteratorMethod$2,TypeError$8=global$i.TypeError,getIterator$1=function(e,t){var r=arguments.length<2?getIteratorMethod$1(e):t;if(aCallable$5(r))return anObject$5(call$6(r,e));throw TypeError$8(tryToString$2(e)+" is not iterable")},call$5=functionCall,anObject$4=anObject$b,getMethod=getMethod$3,iteratorClose$1=function(e,t,r){var i,a;anObject$4(e);try{if(!(i=getMethod(e,"return"))){if("throw"===t)throw r;return r}i=call$5(i,e)}catch(e){a=!0,i=e}if("throw"===t)throw r;if(a)throw i;return anObject$4(i),r},global$h=global$D,bind$3=functionBindContext,call$4=functionCall,anObject$3=anObject$b,tryToString$1=tryToString$4,isArrayIteratorMethod=isArrayIteratorMethod$1,lengthOfArrayLike$1=lengthOfArrayLike$3,isPrototypeOf$7=objectIsPrototypeOf,getIterator=getIterator$1,getIteratorMethod=getIteratorMethod$2,iteratorClose=iteratorClose$1,TypeError$7=global$h.TypeError,Result=function(e,t){this.stopped=e,this.result=t},ResultPrototype=Result.prototype,iterate$4=function(e,t,r){var i,a,s,n,o,h,c,d=r&&r.that,u=!(!r||!r.AS_ENTRIES),l=!(!r||!r.IS_ITERATOR),g=!(!r||!r.INTERRUPTED),w=bind$3(t,d),p=function(e){return i&&iteratorClose(i,"normal",e),new Result(!0,e)},E=function(e){return u?(anObject$3(e),g?w(e[0],e[1],p):w(e[0],e[1])):g?w(e,p):w(e)};if(l)i=e;else{if(!(a=getIteratorMethod(e)))throw TypeError$7(tryToString$1(e)+" is not iterable");if(isArrayIteratorMethod(a)){for(s=0,n=lengthOfArrayLike$1(e);n>s;s++)if((o=E(e[s]))&&isPrototypeOf$7(ResultPrototype,o))return o;return new Result(!1)}i=getIterator(e,a)}for(h=i.next;!(c=call$4(h,i)).done;){try{o=E(c.value)}catch(e){iteratorClose(i,"throw",e)}if("object"==typeof o&&o&&isPrototypeOf$7(ResultPrototype,o))return o}return new Result(!1)},global$g=global$D,classof$6=classof$8,String$2=global$g.String,toString$5=function(e){if("Symbol"===classof$6(e))throw TypeError("Cannot convert a Symbol value to a string");return String$2(e)},toString$4=toString$5,normalizeStringArgument$1=function(e,t){return void 0===e?arguments.length<2?"":t:toString$4(e)},fails$6=fails$f,createPropertyDescriptor$2=createPropertyDescriptor$5,errorStackInstallable=!fails$6((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",createPropertyDescriptor$2(1,7)),7!==e.stack)})),$$8=_export,global$f=global$D,isPrototypeOf$6=objectIsPrototypeOf,getPrototypeOf$2=objectGetPrototypeOf,setPrototypeOf=objectSetPrototypeOf,copyConstructorProperties=copyConstructorProperties$1,create$2=objectCreate,createNonEnumerableProperty$4=createNonEnumerableProperty$7,createPropertyDescriptor$1=createPropertyDescriptor$5,clearErrorStack=clearErrorStack$1,installErrorCause=installErrorCause$1,iterate$3=iterate$4,normalizeStringArgument=normalizeStringArgument$1,wellKnownSymbol$8=wellKnownSymbol$e,ERROR_STACK_INSTALLABLE=errorStackInstallable,TO_STRING_TAG$2=wellKnownSymbol$8("toStringTag"),Error$1=global$f.Error,push=[].push,$AggregateError=function(e,t){var r,i=arguments.length>2?arguments[2]:void 0,a=isPrototypeOf$6(AggregateErrorPrototype,this);setPrototypeOf?r=setPrototypeOf(new Error$1,a?getPrototypeOf$2(this):AggregateErrorPrototype):(r=a?this:create$2(AggregateErrorPrototype),createNonEnumerableProperty$4(r,TO_STRING_TAG$2,"Error")),void 0!==t&&createNonEnumerableProperty$4(r,"message",normalizeStringArgument(t)),ERROR_STACK_INSTALLABLE&&createNonEnumerableProperty$4(r,"stack",clearErrorStack(r.stack,1)),installErrorCause(r,i);var s=[];return iterate$3(e,push,{that:s}),createNonEnumerableProperty$4(r,"errors",s),r};setPrototypeOf?setPrototypeOf($AggregateError,Error$1):copyConstructorProperties($AggregateError,Error$1,{name:!0});var AggregateErrorPrototype=$AggregateError.prototype=create$2(Error$1.prototype,{constructor:createPropertyDescriptor$1(1,$AggregateError),message:createPropertyDescriptor$1(1,""),name:createPropertyDescriptor$1(1,"AggregateError")});$$8({global:!0},{AggregateError:$AggregateError});var uncurryThis$7=functionUncurryThis,isCallable$6=isCallable$h,store$1=sharedStore,functionToString=uncurryThis$7(Function.toString);isCallable$6(store$1.inspectSource)||(store$1.inspectSource=function(e){return functionToString(e)});var set$1,get,has,inspectSource$3=store$1.inspectSource,global$e=global$D,isCallable$5=isCallable$h,inspectSource$2=inspectSource$3,WeakMap$1=global$e.WeakMap,nativeWeakMap=isCallable$5(WeakMap$1)&&/native code/.test(inspectSource$2(WeakMap$1)),NATIVE_WEAK_MAP=nativeWeakMap,global$d=global$D,uncurryThis$6=functionUncurryThis,isObject$2=isObject$8,createNonEnumerableProperty$3=createNonEnumerableProperty$7,hasOwn$4=hasOwnProperty_1,shared=sharedStore,sharedKey=sharedKey$3,hiddenKeys=hiddenKeys$4,OBJECT_ALREADY_INITIALIZED="Object already initialized",TypeError$6=global$d.TypeError,WeakMap=global$d.WeakMap,enforce=function(e){return has(e)?get(e):set$1(e,{})},getterFor=function(e){return function(t){var r;if(!isObject$2(t)||(r=get(t)).type!==e)throw TypeError$6("Incompatible receiver, "+e+" required");return r}};if(NATIVE_WEAK_MAP||shared.state){var store=shared.state||(shared.state=new WeakMap),wmget=uncurryThis$6(store.get),wmhas=uncurryThis$6(store.has),wmset=uncurryThis$6(store.set);set$1=function(e,t){if(wmhas(store,e))throw new TypeError$6(OBJECT_ALREADY_INITIALIZED);return t.facade=e,wmset(store,e,t),t},get=function(e){return wmget(store,e)||{}},has=function(e){return wmhas(store,e)}}else{var STATE=sharedKey("state");hiddenKeys[STATE]=!0,set$1=function(e,t){if(hasOwn$4(e,STATE))throw new TypeError$6(OBJECT_ALREADY_INITIALIZED);return t.facade=e,createNonEnumerableProperty$3(e,STATE,t),t},get=function(e){return hasOwn$4(e,STATE)?e[STATE]:{}},has=function(e){return hasOwn$4(e,STATE)}}var IteratorPrototype$1,PrototypeOfArrayIteratorPrototype,arrayIterator,internalState={set:set$1,get:get,has:has,enforce:enforce,getterFor:getterFor},DESCRIPTORS$1=descriptors,hasOwn$3=hasOwnProperty_1,FunctionPrototype=Function.prototype,getDescriptor=DESCRIPTORS$1&&Object.getOwnPropertyDescriptor,EXISTS=hasOwn$3(FunctionPrototype,"name"),PROPER=EXISTS&&"something"===function(){}.name,CONFIGURABLE=EXISTS&&(!DESCRIPTORS$1||DESCRIPTORS$1&&getDescriptor(FunctionPrototype,"name").configurable),functionName={EXISTS:EXISTS,PROPER:PROPER,CONFIGURABLE:CONFIGURABLE},createNonEnumerableProperty$2=createNonEnumerableProperty$7,redefine$3=function(e,t,r,i){i&&i.enumerable?e[t]=r:createNonEnumerableProperty$2(e,t,r)},fails$5=fails$f,isCallable$4=isCallable$h,create$1=objectCreate,getPrototypeOf$1=objectGetPrototypeOf,redefine$2=redefine$3,wellKnownSymbol$7=wellKnownSymbol$e,ITERATOR$2=wellKnownSymbol$7("iterator"),BUGGY_SAFARI_ITERATORS$1=!1;[].keys&&("next"in(arrayIterator=[].keys())?(PrototypeOfArrayIteratorPrototype=getPrototypeOf$1(getPrototypeOf$1(arrayIterator)))!==Object.prototype&&(IteratorPrototype$1=PrototypeOfArrayIteratorPrototype):BUGGY_SAFARI_ITERATORS$1=!0);var NEW_ITERATOR_PROTOTYPE=null==IteratorPrototype$1||fails$5((function(){var e={};return IteratorPrototype$1[ITERATOR$2].call(e)!==e}));isCallable$4((IteratorPrototype$1=NEW_ITERATOR_PROTOTYPE?{}:create$1(IteratorPrototype$1))[ITERATOR$2])||redefine$2(IteratorPrototype$1,ITERATOR$2,(function(){return this}));var iteratorsCore={IteratorPrototype:IteratorPrototype$1,BUGGY_SAFARI_ITERATORS:BUGGY_SAFARI_ITERATORS$1},TO_STRING_TAG_SUPPORT$1=toStringTagSupport,classof$5=classof$8,objectToString=TO_STRING_TAG_SUPPORT$1?{}.toString:function(){return"[object "+classof$5(this)+"]"},TO_STRING_TAG_SUPPORT=toStringTagSupport,defineProperty=objectDefineProperty.f,createNonEnumerableProperty$1=createNonEnumerableProperty$7,hasOwn$2=hasOwnProperty_1,toString$3=objectToString,wellKnownSymbol$6=wellKnownSymbol$e,TO_STRING_TAG$1=wellKnownSymbol$6("toStringTag"),setToStringTag$3=function(e,t,r,i){if(e){var a=r?e:e.prototype;hasOwn$2(a,TO_STRING_TAG$1)||defineProperty(a,TO_STRING_TAG$1,{configurable:!0,value:t}),i&&!TO_STRING_TAG_SUPPORT&&createNonEnumerableProperty$1(a,"toString",toString$3)}},IteratorPrototype=iteratorsCore.IteratorPrototype,create=objectCreate,createPropertyDescriptor=createPropertyDescriptor$5,setToStringTag$2=setToStringTag$3,Iterators$3=iterators,returnThis$1=function(){return this},createIteratorConstructor$1=function(e,t,r,i){var a=t+" Iterator";return e.prototype=create(IteratorPrototype,{next:createPropertyDescriptor(+!i,r)}),setToStringTag$2(e,a,!1,!0),Iterators$3[a]=returnThis$1,e},$$7=_export,call$3=functionCall,FunctionName=functionName,createIteratorConstructor=createIteratorConstructor$1,getPrototypeOf=objectGetPrototypeOf,setToStringTag$1=setToStringTag$3,redefine$1=redefine$3,wellKnownSymbol$5=wellKnownSymbol$e,Iterators$2=iterators,IteratorsCore=iteratorsCore,PROPER_FUNCTION_NAME$1=FunctionName.PROPER,BUGGY_SAFARI_ITERATORS=IteratorsCore.BUGGY_SAFARI_ITERATORS,ITERATOR$1=wellKnownSymbol$5("iterator"),KEYS="keys",VALUES="values",ENTRIES="entries",returnThis=function(){return this},defineIterator$2=function(e,t,r,i,a,s,n){createIteratorConstructor(r,t,i);var o,h,c,d=function(e){if(e===a&&p)return p;if(!BUGGY_SAFARI_ITERATORS&&e in g)return g[e];switch(e){case KEYS:case VALUES:case ENTRIES:return function(){return new r(this,e)}}return function(){return new r(this)}},u=t+" Iterator",l=!1,g=e.prototype,w=g[ITERATOR$1]||g["@@iterator"]||a&&g[a],p=!BUGGY_SAFARI_ITERATORS&&w||d(a),E="Array"==t&&g.entries||w;if(E&&(o=getPrototypeOf(E.call(new e)))!==Object.prototype&&o.next&&(setToStringTag$1(o,u,!0,!0),Iterators$2[u]=returnThis),PROPER_FUNCTION_NAME$1&&a==VALUES&&w&&w.name!==VALUES&&(l=!0,p=function(){return call$3(w,this)}),a)if(h={values:d(VALUES),keys:s?p:d(KEYS),entries:d(ENTRIES)},n)for(c in h)(BUGGY_SAFARI_ITERATORS||l||!(c in g))&&redefine$1(g,c,h[c]);else $$7({target:t,proto:!0,forced:BUGGY_SAFARI_ITERATORS||l},h);return n&&g[ITERATOR$1]!==p&&redefine$1(g,ITERATOR$1,p,{name:a}),Iterators$2[t]=p,h},toIndexedObject=toIndexedObject$5,Iterators$1=iterators,InternalStateModule$2=internalState;objectDefineProperty.f;var defineIterator$1=defineIterator$2,ARRAY_ITERATOR="Array Iterator",setInternalState$2=InternalStateModule$2.set,getInternalState$2=InternalStateModule$2.getterFor(ARRAY_ITERATOR);defineIterator$1(Array,"Array",(function(e,t){setInternalState$2(this,{type:ARRAY_ITERATOR,target:toIndexedObject(e),index:0,kind:t})}),(function(){var e=getInternalState$2(this),t=e.target,r=e.kind,i=e.index++;return!t||i>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:i,done:!1}:"values"==r?{value:t[i],done:!1}:{value:[i,t[i]],done:!1}}),"values"),Iterators$1.Arguments=Iterators$1.Array;var global$c=global$D,nativePromiseConstructor=global$c.Promise,redefine=redefine$3,redefineAll$1=function(e,t,r){for(var i in t)r&&r.unsafe&&e[i]?e[i]=t[i]:redefine(e,i,t[i],r);return e},getBuiltIn$4=getBuiltIn$9,definePropertyModule=objectDefineProperty,wellKnownSymbol$4=wellKnownSymbol$e,DESCRIPTORS=descriptors,SPECIES$2=wellKnownSymbol$4("species"),setSpecies$1=function(e){var t=getBuiltIn$4(e),r=definePropertyModule.f;DESCRIPTORS&&t&&!t[SPECIES$2]&&r(t,SPECIES$2,{configurable:!0,get:function(){return this}})},global$b=global$D,isPrototypeOf$5=objectIsPrototypeOf,TypeError$5=global$b.TypeError,anInstance$1=function(e,t){if(isPrototypeOf$5(t,e))return e;throw TypeError$5("Incorrect invocation")},wellKnownSymbol$3=wellKnownSymbol$e,ITERATOR=wellKnownSymbol$3("iterator"),SAFE_CLOSING=!1;try{var called=0,iteratorWithReturn={next:function(){return{done:!!called++}},return:function(){SAFE_CLOSING=!0}};iteratorWithReturn[ITERATOR]=function(){return this},Array.from(iteratorWithReturn,(function(){throw 2}))}catch(e){}var checkCorrectnessOfIteration$1=function(e,t){if(!t&&!SAFE_CLOSING)return!1;var r=!1;try{var i={};i[ITERATOR]=function(){return{next:function(){return{done:r=!0}}}},e(i)}catch(e){}return r},uncurryThis$5=functionUncurryThis,fails$4=fails$f,isCallable$3=isCallable$h,classof$4=classof$8,getBuiltIn$3=getBuiltIn$9,inspectSource$1=inspectSource$3,noop=function(){},empty=[],construct=getBuiltIn$3("Reflect","construct"),constructorRegExp=/^\s*(?:class|function)\b/,exec=uncurryThis$5(constructorRegExp.exec),INCORRECT_TO_STRING=!constructorRegExp.exec(noop),isConstructorModern=function(e){if(!isCallable$3(e))return!1;try{return construct(noop,empty,e),!0}catch(e){return!1}},isConstructorLegacy=function(e){if(!isCallable$3(e))return!1;switch(classof$4(e)){case"AsyncFunction":case"GeneratorFunction":case"AsyncGeneratorFunction":return!1}try{return INCORRECT_TO_STRING||!!exec(constructorRegExp,inspectSource$1(e))}catch(e){return!0}};isConstructorLegacy.sham=!0;var location,defer,channel,port,isConstructor$1=!construct||fails$4((function(){var e;return isConstructorModern(isConstructorModern.call)||!isConstructorModern(Object)||!isConstructorModern((function(){e=!0}))||e}))?isConstructorLegacy:isConstructorModern,global$a=global$D,isConstructor=isConstructor$1,tryToString=tryToString$4,TypeError$4=global$a.TypeError,aConstructor$1=function(e){if(isConstructor(e))return e;throw TypeError$4(tryToString(e)+" is not a constructor")},anObject$2=anObject$b,aConstructor=aConstructor$1,wellKnownSymbol$2=wellKnownSymbol$e,SPECIES$1=wellKnownSymbol$2("species"),speciesConstructor$2=function(e,t){var r,i=anObject$2(e).constructor;return void 0===i||null==(r=anObject$2(i)[SPECIES$1])?t:aConstructor(r)},uncurryThis$4=functionUncurryThis,arraySlice$1=uncurryThis$4([].slice),global$9=global$D,TypeError$3=global$9.TypeError,validateArgumentsLength$1=function(e,t){if(e<t)throw TypeError$3("Not enough arguments");return e},userAgent$2=engineUserAgent,engineIsIos=/(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$2),classof$3=classofRaw$1,global$8=global$D,engineIsNode="process"==classof$3(global$8.process),global$7=global$D,apply=functionApply,bind$2=functionBindContext,isCallable$2=isCallable$h,hasOwn$1=hasOwnProperty_1,fails$3=fails$f,html=html$2,arraySlice=arraySlice$1,createElement=documentCreateElement$1,validateArgumentsLength=validateArgumentsLength$1,IS_IOS$1=engineIsIos,IS_NODE$3=engineIsNode,set=global$7.setImmediate,clear=global$7.clearImmediate,process$2=global$7.process,Dispatch=global$7.Dispatch,Function$1=global$7.Function,MessageChannel=global$7.MessageChannel,String$1=global$7.String,counter=0,queue$1={},ONREADYSTATECHANGE="onreadystatechange";try{location=global$7.location}catch(e){}var run=function(e){if(hasOwn$1(queue$1,e)){var t=queue$1[e];delete queue$1[e],t()}},runner=function(e){return function(){run(e)}},listener=function(e){run(e.data)},post=function(e){global$7.postMessage(String$1(e),location.protocol+"//"+location.host)};set&&clear||(set=function(e){validateArgumentsLength(arguments.length,1);var t=isCallable$2(e)?e:Function$1(e),r=arraySlice(arguments,1);return queue$1[++counter]=function(){apply(t,void 0,r)},defer(counter),counter},clear=function(e){delete queue$1[e]},IS_NODE$3?defer=function(e){process$2.nextTick(runner(e))}:Dispatch&&Dispatch.now?defer=function(e){Dispatch.now(runner(e))}:MessageChannel&&!IS_IOS$1?(port=(channel=new MessageChannel).port2,channel.port1.onmessage=listener,defer=bind$2(port.postMessage,port)):global$7.addEventListener&&isCallable$2(global$7.postMessage)&&!global$7.importScripts&&location&&"file:"!==location.protocol&&!fails$3(post)?(defer=post,global$7.addEventListener("message",listener,!1)):defer=ONREADYSTATECHANGE in createElement("script")?function(e){html.appendChild(createElement("script"))[ONREADYSTATECHANGE]=function(){html.removeChild(this),run(e)}}:function(e){setTimeout(runner(e),0)});var flush,head,last,notify$1,toggle,node,promise$3,then,task$1={set:set,clear:clear},userAgent$1=engineUserAgent,global$6=global$D,engineIsIosPebble=/ipad|iphone|ipod/i.test(userAgent$1)&&void 0!==global$6.Pebble,userAgent=engineUserAgent,engineIsWebosWebkit=/web0s(?!.*chrome)/i.test(userAgent),global$5=global$D,bind$1=functionBindContext,getOwnPropertyDescriptor=objectGetOwnPropertyDescriptor.f,macrotask=task$1.set,IS_IOS=engineIsIos,IS_IOS_PEBBLE=engineIsIosPebble,IS_WEBOS_WEBKIT=engineIsWebosWebkit,IS_NODE$2=engineIsNode,MutationObserver=global$5.MutationObserver||global$5.WebKitMutationObserver,document$2=global$5.document,process$1=global$5.process,Promise$1=global$5.Promise,queueMicrotaskDescriptor=getOwnPropertyDescriptor(global$5,"queueMicrotask"),queueMicrotask=queueMicrotaskDescriptor&&queueMicrotaskDescriptor.value;queueMicrotask||(flush=function(){var e,t;for(IS_NODE$2&&(e=process$1.domain)&&e.exit();head;){t=head.fn,head=head.next;try{t()}catch(e){throw head?notify$1():last=void 0,e}}last=void 0,e&&e.enter()},IS_IOS||IS_NODE$2||IS_WEBOS_WEBKIT||!MutationObserver||!document$2?!IS_IOS_PEBBLE&&Promise$1&&Promise$1.resolve?((promise$3=Promise$1.resolve(void 0)).constructor=Promise$1,then=bind$1(promise$3.then,promise$3),notify$1=function(){then(flush)}):IS_NODE$2?notify$1=function(){process$1.nextTick(flush)}:(macrotask=bind$1(macrotask,global$5),notify$1=function(){macrotask(flush)}):(toggle=!0,node=document$2.createTextNode(""),new MutationObserver(flush).observe(node,{characterData:!0}),notify$1=function(){node.data=toggle=!toggle}));var microtask$1=queueMicrotask||function(e){var t={fn:e,next:void 0};last&&(last.next=t),head||(head=t,notify$1()),last=t},newPromiseCapability$2={},aCallable$4=aCallable$8,PromiseCapability=function(e){var t,r;this.promise=new e((function(e,i){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=i})),this.resolve=aCallable$4(t),this.reject=aCallable$4(r)};newPromiseCapability$2.f=function(e){return new PromiseCapability(e)};var anObject$1=anObject$b,isObject$1=isObject$8,newPromiseCapability$1=newPromiseCapability$2,promiseResolve$2=function(e,t){if(anObject$1(e),isObject$1(t)&&t.constructor===e)return t;var r=newPromiseCapability$1.f(e);return(0,r.resolve)(t),r.promise},global$4=global$D,hostReportErrors$1=function(e,t){var r=global$4.console;r&&r.error&&(1==arguments.length?r.error(e):r.error(e,t))},perform$3=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}},Queue$1=function(){this.head=null,this.tail=null};Queue$1.prototype={add:function(e){var t={item:e,next:null};this.head?this.tail.next=t:this.head=t,this.tail=t},get:function(){var e=this.head;if(e)return this.head=e.next,this.tail===e&&(this.tail=null),e.item}};var Internal,OwnPromiseCapability,PromiseWrapper,queue=Queue$1,engineIsBrowser="object"==typeof window,$$6=_export,IS_PURE=isPure,global$3=global$D,getBuiltIn$2=getBuiltIn$9,call$2=functionCall,NativePromise$1=nativePromiseConstructor,redefineAll=redefineAll$1,setToStringTag=setToStringTag$3,setSpecies=setSpecies$1,aCallable$3=aCallable$8,isCallable$1=isCallable$h,isObject=isObject$8,anInstance=anInstance$1,inspectSource=inspectSource$3,iterate$2=iterate$4,checkCorrectnessOfIteration=checkCorrectnessOfIteration$1,speciesConstructor$1=speciesConstructor$2,task=task$1.set,microtask=microtask$1,promiseResolve$1=promiseResolve$2,hostReportErrors=hostReportErrors$1,newPromiseCapabilityModule$2=newPromiseCapability$2,perform$2=perform$3,Queue=queue,InternalStateModule$1=internalState,isForced=isForced_1,wellKnownSymbol$1=wellKnownSymbol$e,IS_BROWSER=engineIsBrowser,IS_NODE$1=engineIsNode,V8_VERSION=engineV8Version,SPECIES=wellKnownSymbol$1("species"),PROMISE="Promise",getInternalState$1=InternalStateModule$1.getterFor(PROMISE),setInternalState$1=InternalStateModule$1.set,getInternalPromiseState=InternalStateModule$1.getterFor(PROMISE),NativePromisePrototype=NativePromise$1&&NativePromise$1.prototype,PromiseConstructor=NativePromise$1,PromisePrototype=NativePromisePrototype,TypeError$2=global$3.TypeError,document$1=global$3.document,process=global$3.process,newPromiseCapability=newPromiseCapabilityModule$2.f,newGenericPromiseCapability=newPromiseCapability,DISPATCH_EVENT=!!(document$1&&document$1.createEvent&&global$3.dispatchEvent),NATIVE_REJECTION_EVENT=isCallable$1(global$3.PromiseRejectionEvent),UNHANDLED_REJECTION="unhandledrejection",REJECTION_HANDLED="rejectionhandled",PENDING=0,FULFILLED=1,REJECTED=2,HANDLED=1,UNHANDLED=2,SUBCLASSING=!1,FORCED=isForced(PROMISE,(function(){var e=inspectSource(PromiseConstructor),t=e!==String(PromiseConstructor);if(!t&&66===V8_VERSION)return!0;if(!PromisePrototype.finally)return!0;if(V8_VERSION>=51&&/native code/.test(e))return!1;var r=new PromiseConstructor((function(e){e(1)})),i=function(e){e((function(){}),(function(){}))};return(r.constructor={})[SPECIES]=i,!(SUBCLASSING=r.then((function(){}))instanceof i)||!t&&IS_BROWSER&&!NATIVE_REJECTION_EVENT})),INCORRECT_ITERATION=FORCED||!checkCorrectnessOfIteration((function(e){PromiseConstructor.all(e).catch((function(){}))})),isThenable=function(e){var t;return!(!isObject(e)||!isCallable$1(t=e.then))&&t},callReaction=function(e,t){var r,i,a,s=t.value,n=t.state==FULFILLED,o=n?e.ok:e.fail,h=e.resolve,c=e.reject,d=e.domain;try{o?(n||(t.rejection===UNHANDLED&&onHandleUnhandled(t),t.rejection=HANDLED),!0===o?r=s:(d&&d.enter(),r=o(s),d&&(d.exit(),a=!0)),r===e.promise?c(TypeError$2("Promise-chain cycle")):(i=isThenable(r))?call$2(i,r,h,c):h(r)):c(s)}catch(e){d&&!a&&d.exit(),c(e)}},notify=function(e,t){e.notified||(e.notified=!0,microtask((function(){for(var r,i=e.reactions;r=i.get();)callReaction(r,e);e.notified=!1,t&&!e.rejection&&onUnhandled(e)})))},dispatchEvent=function(e,t,r){var i,a;DISPATCH_EVENT?((i=document$1.createEvent("Event")).promise=t,i.reason=r,i.initEvent(e,!1,!0),global$3.dispatchEvent(i)):i={promise:t,reason:r},!NATIVE_REJECTION_EVENT&&(a=global$3["on"+e])?a(i):e===UNHANDLED_REJECTION&&hostReportErrors("Unhandled promise rejection",r)},onUnhandled=function(e){call$2(task,global$3,(function(){var t,r=e.facade,i=e.value;if(isUnhandled(e)&&(t=perform$2((function(){IS_NODE$1?process.emit("unhandledRejection",i,r):dispatchEvent(UNHANDLED_REJECTION,r,i)})),e.rejection=IS_NODE$1||isUnhandled(e)?UNHANDLED:HANDLED,t.error))throw t.value}))},isUnhandled=function(e){return e.rejection!==HANDLED&&!e.parent},onHandleUnhandled=function(e){call$2(task,global$3,(function(){var t=e.facade;IS_NODE$1?process.emit("rejectionHandled",t):dispatchEvent(REJECTION_HANDLED,t,e.value)}))},bind=function(e,t,r){return function(i){e(t,i,r)}},internalReject=function(e,t,r){e.done||(e.done=!0,r&&(e=r),e.value=t,e.state=REJECTED,notify(e,!0))},internalResolve=function(e,t,r){if(!e.done){e.done=!0,r&&(e=r);try{if(e.facade===t)throw TypeError$2("Promise can't be resolved itself");var i=isThenable(t);i?microtask((function(){var r={done:!1};try{call$2(i,t,bind(internalResolve,r,e),bind(internalReject,r,e))}catch(t){internalReject(r,t,e)}})):(e.value=t,e.state=FULFILLED,notify(e,!1))}catch(t){internalReject({done:!1},t,e)}}};FORCED&&(PromisePrototype=(PromiseConstructor=function(e){anInstance(this,PromisePrototype),aCallable$3(e),call$2(Internal,this);var t=getInternalState$1(this);try{e(bind(internalResolve,t),bind(internalReject,t))}catch(e){internalReject(t,e)}}).prototype,(Internal=function(e){setInternalState$1(this,{type:PROMISE,done:!1,notified:!1,parent:!1,reactions:new Queue,rejection:!1,state:PENDING,value:void 0})}).prototype=redefineAll(PromisePrototype,{then:function(e,t){var r=getInternalPromiseState(this),i=newPromiseCapability(speciesConstructor$1(this,PromiseConstructor));return r.parent=!0,i.ok=!isCallable$1(e)||e,i.fail=isCallable$1(t)&&t,i.domain=IS_NODE$1?process.domain:void 0,r.state==PENDING?r.reactions.add(i):microtask((function(){callReaction(i,r)})),i.promise},catch:function(e){return this.then(void 0,e)}}),OwnPromiseCapability=function(){var e=new Internal,t=getInternalState$1(e);this.promise=e,this.resolve=bind(internalResolve,t),this.reject=bind(internalReject,t)},newPromiseCapabilityModule$2.f=newPromiseCapability=function(e){return e===PromiseConstructor||e===PromiseWrapper?new OwnPromiseCapability(e):newGenericPromiseCapability(e)}),$$6({global:!0,wrap:!0,forced:FORCED},{Promise:PromiseConstructor}),setToStringTag(PromiseConstructor,PROMISE,!1,!0),setSpecies(PROMISE),PromiseWrapper=getBuiltIn$2(PROMISE),$$6({target:PROMISE,stat:!0,forced:FORCED},{reject:function(e){var t=newPromiseCapability(this);return call$2(t.reject,void 0,e),t.promise}}),$$6({target:PROMISE,stat:!0,forced:IS_PURE},{resolve:function(e){return promiseResolve$1(this===PromiseWrapper?PromiseConstructor:this,e)}}),$$6({target:PROMISE,stat:!0,forced:INCORRECT_ITERATION},{all:function(e){var t=this,r=newPromiseCapability(t),i=r.resolve,a=r.reject,s=perform$2((function(){var r=aCallable$3(t.resolve),s=[],n=0,o=1;iterate$2(e,(function(e){var h=n++,c=!1;o++,call$2(r,t,e).then((function(e){c||(c=!0,s[h]=e,--o||i(s))}),a)})),--o||i(s)}));return s.error&&a(s.value),r.promise},race:function(e){var t=this,r=newPromiseCapability(t),i=r.reject,a=perform$2((function(){var a=aCallable$3(t.resolve);iterate$2(e,(function(e){call$2(a,t,e).then(r.resolve,i)}))}));return a.error&&i(a.value),r.promise}});var $$5=_export,call$1=functionCall,aCallable$2=aCallable$8,newPromiseCapabilityModule$1=newPromiseCapability$2,perform$1=perform$3,iterate$1=iterate$4;$$5({target:"Promise",stat:!0},{allSettled:function(e){var t=this,r=newPromiseCapabilityModule$1.f(t),i=r.resolve,a=r.reject,s=perform$1((function(){var r=aCallable$2(t.resolve),a=[],s=0,n=1;iterate$1(e,(function(e){var o=s++,h=!1;n++,call$1(r,t,e).then((function(e){h||(h=!0,a[o]={status:"fulfilled",value:e},--n||i(a))}),(function(e){h||(h=!0,a[o]={status:"rejected",reason:e},--n||i(a))}))})),--n||i(a)}));return s.error&&a(s.value),r.promise}});var $$4=_export,aCallable$1=aCallable$8,getBuiltIn$1=getBuiltIn$9,call=functionCall,newPromiseCapabilityModule=newPromiseCapability$2,perform=perform$3,iterate=iterate$4,PROMISE_ANY_ERROR="No one promise resolved";$$4({target:"Promise",stat:!0},{any:function(e){var t=this,r=getBuiltIn$1("AggregateError"),i=newPromiseCapabilityModule.f(t),a=i.resolve,s=i.reject,n=perform((function(){var i=aCallable$1(t.resolve),n=[],o=0,h=1,c=!1;iterate(e,(function(e){var d=o++,u=!1;h++,call(i,t,e).then((function(e){u||c||(c=!0,a(e))}),(function(e){u||c||(u=!0,n[d]=e,--h||s(new r(n,PROMISE_ANY_ERROR)))}))})),--h||s(new r(n,PROMISE_ANY_ERROR))}));return n.error&&s(n.value),i.promise}});var $$3=_export,NativePromise=nativePromiseConstructor,fails$2=fails$f,getBuiltIn=getBuiltIn$9,isCallable=isCallable$h,speciesConstructor=speciesConstructor$2,promiseResolve=promiseResolve$2,NON_GENERIC=!!NativePromise&&fails$2((function(){NativePromise.prototype.finally.call({then:function(){}},(function(){}))}));$$3({target:"Promise",proto:!0,real:!0,forced:NON_GENERIC},{finally:function(e){var t=speciesConstructor(this,getBuiltIn("Promise")),r=isCallable(e);return this.then(r?function(r){return promiseResolve(t,e()).then((function(){return r}))}:e,r?function(r){return promiseResolve(t,e()).then((function(){throw r}))}:e)}});var uncurryThis$3=functionUncurryThis,toIntegerOrInfinity=toIntegerOrInfinity$3,toString$2=toString$5,requireObjectCoercible$1=requireObjectCoercible$4,charAt$1=uncurryThis$3("".charAt),charCodeAt=uncurryThis$3("".charCodeAt),stringSlice=uncurryThis$3("".slice),createMethod$2=function(e){return function(t,r){var i,a,s=toString$2(requireObjectCoercible$1(t)),n=toIntegerOrInfinity(r),o=s.length;return n<0||n>=o?e?"":void 0:(i=charCodeAt(s,n))<55296||i>56319||n+1===o||(a=charCodeAt(s,n+1))<56320||a>57343?e?charAt$1(s,n):i:e?stringSlice(s,n,n+2):a-56320+(i-55296<<10)+65536}},stringMultibyte={codeAt:createMethod$2(!1),charAt:createMethod$2(!0)},charAt=stringMultibyte.charAt,toString$1=toString$5,InternalStateModule=internalState,defineIterator=defineIterator$2,STRING_ITERATOR="String Iterator",setInternalState=InternalStateModule.set,getInternalState=InternalStateModule.getterFor(STRING_ITERATOR);defineIterator(String,"String",(function(e){setInternalState(this,{type:STRING_ITERATOR,string:toString$1(e),index:0})}),(function(){var e,t=getInternalState(this),r=t.string,i=t.index;return i>=r.length?{value:void 0,done:!0}:(e=charAt(r,i),t.index+=e.length,{value:e,done:!1})}));var path$1=path$4,promise$2=path$1.Promise,domIterables={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},DOMIterables$1=domIterables,global$2=global$D,classof$2=classof$8,createNonEnumerableProperty=createNonEnumerableProperty$7,Iterators=iterators,wellKnownSymbol=wellKnownSymbol$e,TO_STRING_TAG=wellKnownSymbol("toStringTag");for(var COLLECTION_NAME in DOMIterables$1){var Collection=global$2[COLLECTION_NAME],CollectionPrototype=Collection&&Collection.prototype;CollectionPrototype&&classof$2(CollectionPrototype)!==TO_STRING_TAG&&createNonEnumerableProperty(CollectionPrototype,TO_STRING_TAG,COLLECTION_NAME),Iterators[COLLECTION_NAME]=Iterators.Array}var parent$5=promise$2,promise$1=parent$5,promise=promise$1;function sha256hash(e){function t(e,t){return t>>>e|t<<32-e}function r(e){return t(2,e)^t(13,e)^t(22,e)}function i(e){return t(6,e)^t(11,e)^t(25,e)}function a(e){return t(7,e)^t(18,e)^e>>>3}function s(e,t,r){return e&t^~e&r}function n(e,t,r){return e&t^e&r^t&r}function o(e){let t,r="";for(let i=7;i>=0;i--)t=e>>>4*i&15,r+=t.toString(16);return r}e=unescape(encodeURIComponent(e));const h=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],c=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],d=(e+=String.fromCharCode(128)).length/4+2,u=Math.ceil(d/16),l=new Array(u);for(let t=0;t<u;t++){l[t]=new Array(16);for(let r=0;r<16;r++)l[t][r]=e.charCodeAt(64*t+4*r)<<24|e.charCodeAt(64*t+4*r+1)<<16|e.charCodeAt(64*t+4*r+2)<<8|e.charCodeAt(64*t+4*r+3)}l[u-1][14]=8*(e.length-1)/Math.pow(2,32),l[u-1][14]=Math.floor(l[u-1][14]),l[u-1][15]=8*(e.length-1)&4294967295;const g=new Array(64);let w,p,E,y,P,f,C,v;for(let e=0;e<u;e++){for(let t=0;t<16;t++)g[t]=l[e][t];for(let e=16;e<64;e++)g[e]=4294967295&(t(17,b=g[e-2])^t(19,b)^b>>>10)+g[e-7]+a(g[e-15])+g[e-16];w=c[0],p=c[1],E=c[2],y=c[3],P=c[4],f=c[5],C=c[6],v=c[7];for(let e=0;e<64;e++){const t=v+i(P)+s(P,f,C)+h[e]+g[e],a=r(w)+n(w,p,E);v=C,C=f,f=P,P=y+t&4294967295,y=E,E=p,p=w,w=t+a&4294967295}c[0]=c[0]+w&4294967295,c[1]=c[1]+p&4294967295,c[2]=c[2]+E&4294967295,c[3]=c[3]+y&4294967295,c[4]=c[4]+P&4294967295,c[5]=c[5]+f&4294967295,c[6]=c[6]+C&4294967295,c[7]=c[7]+v&4294967295}var b;return o(c[0])+o(c[1])+o(c[2])+o(c[3])+o(c[4])+o(c[5])+o(c[6])+o(c[7])}var EncoderIOMode,ErrorCode,ErrorEventCode,DeviceID,LogLevel,DeviceClass,ChannelClass,ChannelSubclass,MeshMode,PowerSupply,RTDWireSetup,InputMode,FanMode,DecelerationType,PositionType,SpatialPrecision,Unit,BridgeGain,VoltageRatioSensorType,LEDForwardVoltage,RCServoVoltage,VoltageOutputRange,VoltageRange,VoltageSensorType,RFIDProtocol,SpatialAlgorithm,RTDType,ThermocoupleType,FrequencyFilterType,IRCodeEncoding,IRCodeLength,StepperControlMode,LCDFont,LCDScreenSize,LCDPixelState,DataAdapterParity,DataAdapterStopBits,DataAdapterHandshakeMode,DataAdapterProtocol,DataAdapterSPIMode,DataAdapterEndianness,DataAdapterIOVoltage,PacketErrorCode,SPLRange,HubPortMode,path=path$4,entryVirtual$4=function(e){return path[e+"Prototype"]},entryVirtual$3=entryVirtual$4,values$3=entryVirtual$3("Array").values,parent$4=values$3,values$2=parent$4,classof$1=classof$8,hasOwn=hasOwnProperty_1,isPrototypeOf$4=objectIsPrototypeOf,method$3=values$2,ArrayPrototype$2=Array.prototype,DOMIterables={DOMTokenList:!0,NodeList:!0},values$1=function(e){var t=e.values;return e===ArrayPrototype$2||isPrototypeOf$4(ArrayPrototype$2,e)&&t===ArrayPrototype$2.values||hasOwn(DOMIterables,classof$1(e))?method$3:t},values=values$1;!function(e){e[e.PUSH_PULL=1]="PUSH_PULL",e[e.LINE_DRIVER_2K2=2]="LINE_DRIVER_2K2",e[e.LINE_DRIVER_10K=3]="LINE_DRIVER_10K",e[e.OPEN_COLLECTOR_2K2=4]="OPEN_COLLECTOR_2K2",e[e.OPEN_COLLECTOR_10K=5]="OPEN_COLLECTOR_10K"}(EncoderIOMode||(EncoderIOMode={})),function(e){e[e.SUCCESS=0]="SUCCESS",e[e.NOT_PERMITTED=1]="NOT_PERMITTED",e[e.NO_SUCH_ENTITY=2]="NO_SUCH_ENTITY",e[e.TIMEOUT=3]="TIMEOUT",e[e.KEEP_ALIVE=58]="KEEP_ALIVE",e[e.INTERRUPTED=4]="INTERRUPTED",e[e.IO=5]="IO",e[e.NO_MEMORY=6]="NO_MEMORY",e[e.ACCESS=7]="ACCESS",e[e.FAULT=8]="FAULT",e[e.BUSY=9]="BUSY",e[e.EXISTS=10]="EXISTS",e[e.IS_NOT_DIRECTORY=11]="IS_NOT_DIRECTORY",e[e.IS_DIRECTORY=12]="IS_DIRECTORY",e[e.INVALID=13]="INVALID",e[e.TOO_MANY_FILES_SYSTEM=14]="TOO_MANY_FILES_SYSTEM",e[e.TOO_MANY_FILES=15]="TOO_MANY_FILES",e[e.NO_SPACE=16]="NO_SPACE",e[e.FILE_TOO_BIG=17]="FILE_TOO_BIG",e[e.READ_ONLY_FILESYSTEM=18]="READ_ONLY_FILESYSTEM",e[e.READ_ONLY=19]="READ_ONLY",e[e.UNSUPPORTED=20]="UNSUPPORTED",e[e.INVALID_ARGUMENT=21]="INVALID_ARGUMENT",e[e.TRY_AGAIN=22]="TRY_AGAIN",e[e.NOT_EMPTY=26]="NOT_EMPTY",e[e.UNEXPECTED=28]="UNEXPECTED",e[e.DUPLICATE=27]="DUPLICATE",e[e.BAD_PASSWORD=37]="BAD_PASSWORD",e[e.NETWORK_UNAVAILABLE=45]="NETWORK_UNAVAILABLE",e[e.CONNECTION_REFUSED=35]="CONNECTION_REFUSED",e[e.CONNECTION_RESET=46]="CONNECTION_RESET",e[e.HOST_UNREACHABLE=48]="HOST_UNREACHABLE",e[e.NO_SUCH_DEVICE=40]="NO_SUCH_DEVICE",e[e.WRONG_DEVICE=50]="WRONG_DEVICE",e[e.BROKEN_PIPE=41]="BROKEN_PIPE",e[e.NAME_RESOLUTION_FAILURE=44]="NAME_RESOLUTION_FAILURE",e[e.UNKNOWN_VALUE=51]="UNKNOWN_VALUE",e[e.NOT_ATTACHED=52]="NOT_ATTACHED",e[e.INVALID_PACKET=53]="INVALID_PACKET",e[e.TOO_BIG=54]="TOO_BIG",e[e.BAD_VERSION=55]="BAD_VERSION",e[e.CLOSED=56]="CLOSED",e[e.NOT_CONFIGURED=57]="NOT_CONFIGURED",e[e.END_OF_FILE=31]="END_OF_FILE",e[e.FAILSAFE=59]="FAILSAFE",e[e.UNKNOWN_VALUE_HIGH=60]="UNKNOWN_VALUE_HIGH",e[e.UNKNOWN_VALUE_LOW=61]="UNKNOWN_VALUE_LOW",e[e.BAD_POWER=62]="BAD_POWER",e[e.POWER_CYCLE=63]="POWER_CYCLE",e[e.HALLSENSOR=64]="HALLSENSOR",e[e.BADCURRENT=65]="BADCURRENT"}(ErrorCode||(ErrorCode={})),function(e){e[e.BAD_VERSION=1]="BAD_VERSION",e[e.BUSY=2]="BUSY",e[e.NETWORK=3]="NETWORK",e[e.DISPATCH=4]="DISPATCH",e[e.FAILURE=5]="FAILURE",e[e.SUCCESS=4096]="SUCCESS",e[e.OVERRUN=4098]="OVERRUN",e[e.PACKET_LOST=4099]="PACKET_LOST",e[e.WRAP_AROUND=4100]="WRAP_AROUND",e[e.OVER_TEMPERATURE=4101]="OVER_TEMPERATURE",e[e.OVER_CURRENT=4102]="OVER_CURRENT",e[e.OUT_OF_RANGE=4103]="OUT_OF_RANGE",e[e.BAD_POWER=4104]="BAD_POWER",e[e.SATURATION=4105]="SATURATION",e[e.OVER_VOLTAGE=4107]="OVER_VOLTAGE",e[e.FAILSAFE_CONDITION=4108]="FAILSAFE_CONDITION",e[e.VOLTAGE_ERROR=4109]="VOLTAGE_ERROR",e[e.ENERGY_DUMP_CONDITION=4110]="ENERGY_DUMP_CONDITION",e[e.MOTOR_STALL_CONDITION=4111]="MOTOR_STALL_CONDITION",e[e.INVALID_STATE_CONDITION=4112]="INVALID_STATE_CONDITION",e[e.BAD_CONNECTION_CONDITION=4113]="BAD_CONNECTION_CONDITION",e[e.OUT_OF_RANGE_HIGH_CONDITION=4114]="OUT_OF_RANGE_HIGH_CONDITION",e[e.OUT_OF_RANGE_LOW_CONDITION=4115]="OUT_OF_RANGE_LOW_CONDITION",e[e.FAULT=4116]="FAULT",e[e.ESTOP=4117]="ESTOP"}(ErrorEventCode||(ErrorEventCode={})),function(e){e[e.NONE=0]="NONE",e[e.UNKNOWN=125]="UNKNOWN",e[e.DIGITAL_INPUT_PORT=95]="DIGITAL_INPUT_PORT",e[e.DIGITAL_OUTPUT_PORT=96]="DIGITAL_OUTPUT_PORT",e[e.VOLTAGE_INPUT_PORT=97]="VOLTAGE_INPUT_PORT",e[e.VOLTAGE_RATIO_INPUT_PORT=98]="VOLTAGE_RATIO_INPUT_PORT",e[e.PN_DICTIONARY=111]="PN_DICTIONARY",e[e.PN_1000=2]="PN_1000",e[e.PN_1001=3]="PN_1001",e[e.PN_1002=4]="PN_1002",e[e.PN_1008=5]="PN_1008",e[e.PN_1010_1013_1018_1019=6]="PN_1010_1013_1018_1019",e[e.PN_1011=7]="PN_1011",e[e.PN_1012=8]="PN_1012",e[e.PN_1014=9]="PN_1014",e[e.PN_1015=10]="PN_1015",e[e.PN_1016=11]="PN_1016",e[e.PN_1017=12]="PN_1017",e[e.PN_1023=13]="PN_1023",e[e.PN_1024=14]="PN_1024",e[e.PN_1030=15]="PN_1030",e[e.PN_1031=16]="PN_1031",e[e.PN_1032=17]="PN_1032",e[e.PN_1040=18]="PN_1040",e[e.PN_1041=19]="PN_1041",e[e.PN_1042=20]="PN_1042",e[e.PN_1043=21]="PN_1043",e[e.PN_1044=22]="PN_1044",e[e.PN_1045=23]="PN_1045",e[e.PN_1046=24]="PN_1046",e[e.PN_1047=25]="PN_1047",e[e.PN_1048=26]="PN_1048",e[e.PN_1049=27]="PN_1049",e[e.PN_1051=28]="PN_1051",e[e.PN_1052=29]="PN_1052",e[e.PN_1053=30]="PN_1053",e[e.PN_1054=31]="PN_1054",e[e.PN_1055=32]="PN_1055",e[e.PN_1056=33]="PN_1056",e[e.PN_1057=34]="PN_1057",e[e.PN_1058=35]="PN_1058",e[e.PN_1059=36]="PN_1059",e[e.PN_1060=37]="PN_1060",e[e.PN_1061=38]="PN_1061",e[e.PN_1062=39]="PN_1062",e[e.PN_1063=40]="PN_1063",e[e.PN_1064=41]="PN_1064",e[e.PN_1065=42]="PN_1065",e[e.PN_1066=43]="PN_1066",e[e.PN_1067=44]="PN_1067",e[e.PN_1202_1203=45]="PN_1202_1203",e[e.PN_1204=46]="PN_1204",e[e.PN_1215__1218=47]="PN_1215__1218",e[e.PN_1219__1222=48]="PN_1219__1222",e[e.PN_ADP1000=49]="PN_ADP1000",e[e.PN_DAQ1000=51]="PN_DAQ1000",e[e.PN_DAQ1200=52]="PN_DAQ1200",e[e.PN_DAQ1300=53]="PN_DAQ1300",e[e.PN_DAQ1301=54]="PN_DAQ1301",e[e.PN_DAQ1400=55]="PN_DAQ1400",e[e.PN_DAQ1500=56]="PN_DAQ1500",e[e.PN_DCC1000=57]="PN_DCC1000",e[e.PN_DCC1001=110]="PN_DCC1001",e[e.PN_DCC1002=117]="PN_DCC1002",e[e.PN_DCC1003=120]="PN_DCC1003",e[e.PN_DCC1100=108]="PN_DCC1100",e[e.PN_DST1000=58]="PN_DST1000",e[e.PN_DST1001=121]="PN_DST1001",e[e.PN_DST1002=126]="PN_DST1002",e[e.PN_DST1200=59]="PN_DST1200",e[e.PN_ENC1000=60]="PN_ENC1000",e[e.PN_ENC1001=155]="PN_ENC1001",e[e.FIRMWARE_UPGRADE_SPI=104]="FIRMWARE_UPGRADE_SPI",e[e.FIRMWARE_UPGRADE_STM32F0=102]="FIRMWARE_UPGRADE_STM32F0",e[e.FIRMWARE_UPGRADE_STM32F3=145]="FIRMWARE_UPGRADE_STM32F3",e[e.FIRMWARE_UPGRADE_STM32G0=143]="FIRMWARE_UPGRADE_STM32G0",e[e.FIRMWARE_UPGRADE_STM8S=103]="FIRMWARE_UPGRADE_STM8S",e[e.FIRMWARE_UPGRADE_USB=101]="FIRMWARE_UPGRADE_USB",e[e.PN_HIN1000=61]="PN_HIN1000",e[e.PN_HIN1001=62]="PN_HIN1001",e[e.PN_HIN1100=63]="PN_HIN1100",e[e.PN_HIN1101=109]="PN_HIN1101",e[e.PN_HUB0000=64]="PN_HUB0000",e[e.PN_HUB0001=142]="PN_HUB0001",e[e.PN_HUB0002=147]="PN_HUB0002",e[e.PN_HUB0004=67]="PN_HUB0004",e[e.PN_HUB0007=148]="PN_HUB0007",e[e.PN_HUB5000=123]="PN_HUB5000",e[e.PN_HUM1000=69]="PN_HUM1000",e[e.PN_HUM1001=127]="PN_HUM1001",e[e.PN_HUM1100=136]="PN_HUM1100",e[e.PN_INTERFACE_KIT488=1]="PN_INTERFACE_KIT488",e[e.PN_LCD1100=70]="PN_LCD1100",e[e.PN_LED1000=71]="PN_LED1000",e[e.PN_LUX1000=72]="PN_LUX1000",e[e.PN_MOT0100=146]="PN_MOT0100",e[e.PN_MOT0109=140]="PN_MOT0109",e[e.PN_MOT0110=141]="PN_MOT0110",e[e.PN_MOT1100=73]="PN_MOT1100",e[e.PN_MOT1101=74]="PN_MOT1101",e[e.PN_MOT1102=137]="PN_MOT1102",e[e.PN_OUT1000=75]="PN_OUT1000",e[e.PN_OUT1001=76]="PN_OUT1001",e[e.PN_OUT1002=77]="PN_OUT1002",e[e.PN_OUT1100=78]="PN_OUT1100",e[e.PN_PRE1000=79]="PN_PRE1000",e[e.PN_RCC0004=124]="PN_RCC0004",e[e.PN_RCC1000=80]="PN_RCC1000",e[e.PN_REL1000=81]="PN_REL1000",e[e.PN_REL1100=82]="PN_REL1100",e[e.PN_REL1101=83]="PN_REL1101",e[e.PN_SAF1000=84]="PN_SAF1000",e[e.PN_SND1000=85]="PN_SND1000",e[e.PN_STC1000=86]="PN_STC1000",e[e.PN_STC1001=115]="PN_STC1001",e[e.PN_STC1002=118]="PN_STC1002",e[e.PN_STC1003=119]="PN_STC1003",e[e.PN_STC1005=149]="PN_STC1005",e[e.PN_TMP1000=87]="PN_TMP1000",e[e.PN_TMP1100=88]="PN_TMP1100",e[e.PN_TMP1101=89]="PN_TMP1101",e[e.PN_TMP1200=90]="PN_TMP1200",e[e.PN_VCP1000=92]="PN_VCP1000",e[e.PN_VCP1001=93]="PN_VCP1001",e[e.PN_VCP1002=94]="PN_VCP1002",e[e.PN_VCP1100=105]="PN_VCP1100"}(DeviceID||(DeviceID={})),function(e){e[e.CRITICAL=1]="CRITICAL",e[e.ERROR=2]="ERROR",e[e.WARNING=3]="WARNING",e[e.INFO=4]="INFO",e[e.DEBUG=5]="DEBUG",e[e.VERBOSE=6]="VERBOSE"}(LogLevel||(LogLevel={})),function(e){e[e.NONE=0]="NONE",e[e.ACCELEROMETER=1]="ACCELEROMETER",e[e.ADVANCED_SERVO=2]="ADVANCED_SERVO",e[e.ANALOG=3]="ANALOG",e[e.BRIDGE=4]="BRIDGE",e[e.DATA_ADAPTER=25]="DATA_ADAPTER",e[e.DICTIONARY=24]="DICTIONARY",e[e.ENCODER=5]="ENCODER",e[e.FIRMWARE_UPGRADE=23]="FIRMWARE_UPGRADE",e[e.FREQUENCY_COUNTER=6]="FREQUENCY_COUNTER",e[e.GENERIC=22]="GENERIC",e[e.GPS=7]="GPS",e[e.HUB=8]="HUB",e[e.INTERFACE_KIT=9]="INTERFACE_KIT",e[e.IR=10]="IR",e[e.LED=11]="LED",e[e.MESH_DONGLE=12]="MESH_DONGLE",e[e.MOTOR_CONTROL=13]="MOTOR_CONTROL",e[e.PH_SENSOR=14]="PH_SENSOR",e[e.RFID=15]="RFID",e[e.SERVO=16]="SERVO",e[e.SPATIAL=17]="SPATIAL",e[e.STEPPER=18]="STEPPER",e[e.TEMPERATURE_SENSOR=19]="TEMPERATURE_SENSOR",e[e.TEXT_LCD=20]="TEXT_LCD",e[e.VINT=21]="VINT"}(DeviceClass||(DeviceClass={})),function(e){e[e.NONE=0]="NONE",e[e.ACCELEROMETER=1]="ACCELEROMETER",e[e.BLDC_MOTOR=35]="BLDC_MOTOR",e[e.CAPACITIVE_TOUCH=14]="CAPACITIVE_TOUCH",e[e.CURRENT_INPUT=2]="CURRENT_INPUT",e[e.CURRENT_OUTPUT=38]="CURRENT_OUTPUT",e[e.DATA_ADAPTER=3]="DATA_ADAPTER",e[e.DC_MOTOR=4]="DC_MOTOR",e[e.DICTIONARY=36]="DICTIONARY",e[e.DIGITAL_INPUT=5]="DIGITAL_INPUT",e[e.DIGITAL_OUTPUT=6]="DIGITAL_OUTPUT",e[e.DISTANCE_SENSOR=7]="DISTANCE_SENSOR",e[e.ENCODER=8]="ENCODER",e[e.FIRMWARE_UPGRADE=32]="FIRMWARE_UPGRADE",e[e.FREQUENCY_COUNTER=9]="FREQUENCY_COUNTER",e[e.GENERIC=33]="GENERIC",e[e.GPS=10]="GPS",e[e.GYROSCOPE=12]="GYROSCOPE",e[e.HUB=13]="HUB",e[e.HUMIDITY_SENSOR=15]="HUMIDITY_SENSOR",e[e.IR=16]="IR",e[e.LCD=11]="LCD",e[e.LIGHT_SENSOR=17]="LIGHT_SENSOR",e[e.MAGNETOMETER=18]="MAGNETOMETER",e[e.MESH_DONGLE=19]="MESH_DONGLE",e[e.MOTOR_POSITION_CONTROLLER=34]="MOTOR_POSITION_CONTROLLER",e[e.MOTOR_VELOCITY_CONTROLLER=39]="MOTOR_VELOCITY_CONTROLLER",e[e.PH_SENSOR=37]="PH_SENSOR",e[e.POWER_GUARD=20]="POWER_GUARD",e[e.PRESSURE_SENSOR=21]="PRESSURE_SENSOR",e[e.RC_SERVO=22]="RC_SERVO",e[e.RESISTANCE_INPUT=23]="RESISTANCE_INPUT",e[e.RFID=24]="RFID",e[e.SOUND_SENSOR=25]="SOUND_SENSOR",e[e.SPATIAL=26]="SPATIAL",e[e.STEPPER=27]="STEPPER",e[e.TEMPERATURE_SENSOR=28]="TEMPERATURE_SENSOR",e[e.VOLTAGE_INPUT=29]="VOLTAGE_INPUT",e[e.VOLTAGE_OUTPUT=30]="VOLTAGE_OUTPUT",e[e.VOLTAGE_RATIO_INPUT=31]="VOLTAGE_RATIO_INPUT"}(ChannelClass||(ChannelClass={})),function(e){e[e.NONE=1]="NONE",e[e.DIGITAL_OUTPUT_DUTY_CYCLE=16]="DIGITAL_OUTPUT_DUTY_CYCLE",e[e.DIGITAL_OUTPUT_FREQUENCY=18]="DIGITAL_OUTPUT_FREQUENCY",e[e.DIGITAL_OUTPUT_LEDDRIVER=17]="DIGITAL_OUTPUT_LEDDRIVER",e[e.ENCODER_MODE_SETTABLE=96]="ENCODER_MODE_SETTABLE",e[e.LCD_GRAPHIC=80]="LCD_GRAPHIC",e[e.LCD_TEXT=81]="LCD_TEXT",e[e.SPATIAL_AHRS=112]="SPATIAL_AHRS",e[e.TEMPERATURE_SENSOR_RTD=32]="TEMPERATURE_SENSOR_RTD",e[e.TEMPERATURE_SENSOR_THERMOCOUPLE=33]="TEMPERATURE_SENSOR_THERMOCOUPLE",e[e.VOLTAGE_INPUT_SENSOR_PORT=48]="VOLTAGE_INPUT_SENSOR_PORT",e[e.VOLTAGE_RATIO_INPUT_BRIDGE=65]="VOLTAGE_RATIO_INPUT_BRIDGE",e[e.VOLTAGE_RATIO_INPUT_SENSOR_PORT=64]="VOLTAGE_RATIO_INPUT_SENSOR_PORT"}(ChannelSubclass||(ChannelSubclass={})),function(e){e[e.ROUTER=1]="ROUTER",e[e.SLEEPY_END_DEVICE=2]="SLEEPY_END_DEVICE"}(MeshMode||(MeshMode={})),function(e){e[e.OFF=1]="OFF",e[e.VOLTS_12=2]="VOLTS_12",e[e.VOLTS_24=3]="VOLTS_24"}(PowerSupply||(PowerSupply={})),function(e){e[e.WIRES_2=1]="WIRES_2",e[e.WIRES_3=2]="WIRES_3",e[e.WIRES_4=3]="WIRES_4"}(RTDWireSetup||(RTDWireSetup={})),function(e){e[e.NPN=1]="NPN",e[e.PNP=2]="PNP"}(InputMode||(InputMode={})),function(e){e[e.OFF=1]="OFF",e[e.ON=2]="ON",e[e.AUTO=3]="AUTO"}(FanMode||(FanMode={})),function(e){e[e.COAST=1]="COAST",e[e.FORCED=2]="FORCED"}(DecelerationType||(DecelerationType={})),function(e){e[e.ENCODER=1]="ENCODER",e[e.HALL_SENSOR=2]="HALL_SENSOR"}(PositionType||(PositionType={})),function(e){e[e.HYBRID=0]="HYBRID",e[e.HIGH=1]="HIGH",e[e.LOW=2]="LOW"}(SpatialPrecision||(SpatialPrecision={})),function(e){e[e.NONE=0]="NONE",e[e.BOOLEAN=1]="BOOLEAN",e[e.PERCENT=2]="PERCENT",e[e.DECIBEL=3]="DECIBEL",e[e.MILLIMETER=4]="MILLIMETER",e[e.CENTIMETER=5]="CENTIMETER",e[e.METER=6]="METER",e[e.GRAM=7]="GRAM",e[e.KILOGRAM=8]="KILOGRAM",e[e.MILLIAMPERE=9]="MILLIAMPERE",e[e.AMPERE=10]="AMPERE",e[e.KILOPASCAL=11]="KILOPASCAL",e[e.VOLT=12]="VOLT",e[e.DEGREE_CELCIUS=13]="DEGREE_CELCIUS",e[e.LUX=14]="LUX",e[e.GAUSS=15]="GAUSS",e[e.PH=16]="PH",e[e.WATT=17]="WATT"}(Unit||(Unit={})),function(e){e[e.GAIN_1X=1]="GAIN_1X",e[e.GAIN_2X=2]="GAIN_2X",e[e.GAIN_4X=3]="GAIN_4X",e[e.GAIN_8X=4]="GAIN_8X",e[e.GAIN_16X=5]="GAIN_16X",e[e.GAIN_32X=6]="GAIN_32X",e[e.GAIN_64X=7]="GAIN_64X",e[e.GAIN_128X=8]="GAIN_128X"}(BridgeGain||(BridgeGain={})),function(e){e[e.VOLTAGE_RATIO=0]="VOLTAGE_RATIO",e[e.PN_1101_SHARP2D120X=11011]="PN_1101_SHARP2D120X",e[e.PN_1101_SHARP2Y0A21=11012]="PN_1101_SHARP2Y0A21",e[e.PN_1101_SHARP2Y0A02=11013]="PN_1101_SHARP2Y0A02",e[e.PN_1102=11020]="PN_1102",e[e.PN_1103=11030]="PN_1103",e[e.PN_1104=11040]="PN_1104",e[e.PN_1105=11050]="PN_1105",e[e.PN_1106=11060]="PN_1106",e[e.PN_1107=11070]="PN_1107",e[e.PN_1108=11080]="PN_1108",e[e.PN_1109=11090]="PN_1109",e[e.PN_1110=11100]="PN_1110",e[e.PN_1111=11110]="PN_1111",e[e.PN_1112=11120]="PN_1112",e[e.PN_1113=11130]="PN_1113",e[e.PN_1115=11150]="PN_1115",e[e.PN_1116=11160]="PN_1116",e[e.PN_1118_AC=11181]="PN_1118_AC",e[e.PN_1118_DC=11182]="PN_1118_DC",e[e.PN_1119_AC=11191]="PN_1119_AC",e[e.PN_1119_DC=11192]="PN_1119_DC",e[e.PN_1120=11200]="PN_1120",e[e.PN_1121=11210]="PN_1121",e[e.PN_1122_AC=11221]="PN_1122_AC",e[e.PN_1122_DC=11222]="PN_1122_DC",e[e.PN_1124=11240]="PN_1124",e[e.PN_1125_HUMIDITY=11251]="PN_1125_HUMIDITY",e[e.PN_1125_TEMPERATURE=11252]="PN_1125_TEMPERATURE",e[e.PN_1126=11260]="PN_1126",e[e.PN_1128=11280]="PN_1128",e[e.PN_1129=11290]="PN_1129",e[e.PN_1131=11310]="PN_1131",e[e.PN_1134=11340]="PN_1134",e[e.PN_1136=11360]="PN_1136",e[e.PN_1137=11370]="PN_1137",e[e.PN_1138=11380]="PN_1138",e[e.PN_1139=11390]="PN_1139",e[e.PN_1140=11400]="PN_1140",e[e.PN_1141=11410]="PN_1141",e[e.PN_1146=11460]="PN_1146",e[e.PN_3120=31200]="PN_3120",e[e.PN_3121=31210]="PN_3121",e[e.PN_3122=31220]="PN_3122",e[e.PN_3123=31230]="PN_3123",e[e.PN_3130=31300]="PN_3130",e[e.PN_3520=35200]="PN_3520",e[e.PN_3521=35210]="PN_3521",e[e.PN_3522=35220]="PN_3522"}(VoltageRatioSensorType||(VoltageRatioSensorType={})),function(e){e[e.VOLTS_1_7=1]="VOLTS_1_7",e[e.VOLTS_2_75=2]="VOLTS_2_75",e[e.VOLTS_3_2=3]="VOLTS_3_2",e[e.VOLTS_3_9=4]="VOLTS_3_9",e[e.VOLTS_4_0=5]="VOLTS_4_0",e[e.VOLTS_4_8=6]="VOLTS_4_8",e[e.VOLTS_5_0=7]="VOLTS_5_0",e[e.VOLTS_5_6=8]="VOLTS_5_6"}(LEDForwardVoltage||(LEDForwardVoltage={})),function(e){e[e.VOLTS_5_0=1]="VOLTS_5_0",e[e.VOLTS_6_0=2]="VOLTS_6_0",e[e.VOLTS_7_4=3]="VOLTS_7_4"}(RCServoVoltage||(RCServoVoltage={})),function(e){e[e.VOLTS_10=1]="VOLTS_10",e[e.VOLTS_5=2]="VOLTS_5"}(VoltageOutputRange||(VoltageOutputRange={})),function(e){e[e.MILLIVOLTS_10=1]="MILLIVOLTS_10",e[e.MILLIVOLTS_40=2]="MILLIVOLTS_40",e[e.MILLIVOLTS_200=3]="MILLIVOLTS_200",e[e.MILLIVOLTS_312_5=4]="MILLIVOLTS_312_5",e[e.MILLIVOLTS_400=5]="MILLIVOLTS_400",e[e.MILLIVOLTS_1000=6]="MILLIVOLTS_1000",e[e.VOLTS_2=7]="VOLTS_2",e[e.VOLTS_5=8]="VOLTS_5",e[e.VOLTS_15=9]="VOLTS_15",e[e.VOLTS_40=10]="VOLTS_40",e[e.AUTO=11]="AUTO"}(VoltageRange||(VoltageRange={})),function(e){e[e.VOLTAGE=0]="VOLTAGE",e[e.PN_1114=11140]="PN_1114",e[e.PN_1117=11170]="PN_1117",e[e.PN_1123=11230]="PN_1123",e[e.PN_1127=11270]="PN_1127",e[e.PN_1130_PH=11301]="PN_1130_PH",e[e.PN_1130_ORP=11302]="PN_1130_ORP",e[e.PN_1132=11320]="PN_1132",e[e.PN_1133=11330]="PN_1133",e[e.PN_1135=11350]="PN_1135",e[e.PN_1142=11420]="PN_1142",e[e.PN_1143=11430]="PN_1143",e[e.PN_3500=35e3]="PN_3500",e[e.PN_3501=35010]="PN_3501",e[e.PN_3502=35020]="PN_3502",e[e.PN_3503=35030]="PN_3503",e[e.PN_3507=35070]="PN_3507",e[e.PN_3508=35080]="PN_3508",e[e.PN_3509=35090]="PN_3509",e[e.PN_3510=35100]="PN_3510",e[e.PN_3511=35110]="PN_3511",e[e.PN_3512=35120]="PN_3512",e[e.PN_3513=35130]="PN_3513",e[e.PN_3514=35140]="PN_3514",e[e.PN_3515=35150]="PN_3515",e[e.PN_3516=35160]="PN_3516",e[e.PN_3517=35170]="PN_3517",e[e.PN_3518=35180]="PN_3518",e[e.PN_3519=35190]="PN_3519",e[e.PN_3584=35840]="PN_3584",e[e.PN_3585=35850]="PN_3585",e[e.PN_3586=35860]="PN_3586",e[e.PN_3587=35870]="PN_3587",e[e.PN_3588=35880]="PN_3588",e[e.PN_3589=35890]="PN_3589",e[e.PN_MOT2002_LOW=20020]="PN_MOT2002_LOW",e[e.PN_MOT2002_MED=20021]="PN_MOT2002_MED",e[e.PN_MOT2002_HIGH=20022]="PN_MOT2002_HIGH",e[e.PN_VCP4114=41140]="PN_VCP4114"}(VoltageSensorType||(VoltageSensorType={})),function(e){e[e.EM4100=1]="EM4100",e[e.ISO11785_FDX_B=2]="ISO11785_FDX_B",e[e.PHIDGET_TAG=3]="PHIDGET_TAG"}(RFIDProtocol||(RFIDProtocol={})),function(e){e[e.NONE=0]="NONE",e[e.AHRS=1]="AHRS",e[e.IMU=2]="IMU"}(SpatialAlgorithm||(SpatialAlgorithm={})),function(e){e[e.PT100_3850=1]="PT100_3850",e[e.PT1000_3850=2]="PT1000_3850",e[e.PT100_3920=3]="PT100_3920",e[e.PT1000_3920=4]="PT1000_3920"}(RTDType||(RTDType={})),function(e){e[e.J=1]="J",e[e.K=2]="K",e[e.E=3]="E",e[e.T=4]="T"}(ThermocoupleType||(ThermocoupleType={})),function(e){e[e.ZERO_CROSSING=1]="ZERO_CROSSING",e[e.LOGIC_LEVEL=2]="LOGIC_LEVEL"}(FrequencyFilterType||(FrequencyFilterType={})),function(e){e[e.UNKNOWN=1]="UNKNOWN",e[e.SPACE=2]="SPACE",e[e.PULSE=3]="PULSE",e[e.BI_PHASE=4]="BI_PHASE",e[e.RC5=5]="RC5",e[e.RC6=6]="RC6"}(IRCodeEncoding||(IRCodeEncoding={})),function(e){e[e.UNKNOWN=1]="UNKNOWN",e[e.CONSTANT=2]="CONSTANT",e[e.VARIABLE=3]="VARIABLE"}(IRCodeLength||(IRCodeLength={})),function(e){e[e.STEP=0]="STEP",e[e.RUN=1]="RUN"}(StepperControlMode||(StepperControlMode={})),function(e){e[e.USER1=1]="USER1",e[e.USER2=2]="USER2",e[e.DIMENSIONS_6X10=3]="DIMENSIONS_6X10",e[e.DIMENSIONS_5X8=4]="DIMENSIONS_5X8",e[e.DIMENSIONS_6X12=5]="DIMENSIONS_6X12"}(LCDFont||(LCDFont={})),function(e){e[e.NO_SCREEN=1]="NO_SCREEN",e[e.DIMENSIONS_1X8=2]="DIMENSIONS_1X8",e[e.DIMENSIONS_2X8=3]="DIMENSIONS_2X8",e[e.DIMENSIONS_1X16=4]="DIMENSIONS_1X16",e[e.DIMENSIONS_2X16=5]="DIMENSIONS_2X16",e[e.DIMENSIONS_4X16=6]="DIMENSIONS_4X16",e[e.DIMENSIONS_2X20=7]="DIMENSIONS_2X20",e[e.DIMENSIONS_4X20=8]="DIMENSIONS_4X20",e[e.DIMENSIONS_2X24=9]="DIMENSIONS_2X24",e[e.DIMENSIONS_1X40=10]="DIMENSIONS_1X40",e[e.DIMENSIONS_2X40=11]="DIMENSIONS_2X40",e[e.DIMENSIONS_4X40=12]="DIMENSIONS_4X40",e[e.DIMENSIONS_64X128=13]="DIMENSIONS_64X128"}(LCDScreenSize||(LCDScreenSize={})),function(e){e[e.OFF=0]="OFF",e[e.ON=1]="ON",e[e.INVERT=2]="INVERT"}(LCDPixelState||(LCDPixelState={})),function(e){e[e.NONE=1]="NONE",e[e.EVEN=2]="EVEN",e[e.ODD=3]="ODD"}(DataAdapterParity||(DataAdapterParity={})),function(e){e[e.ONE=1]="ONE",e[e.TWO=2]="TWO"}(DataAdapterStopBits||(DataAdapterStopBits={})),function(e){e[e.NONE=1]="NONE",e[e.REQUEST_TO_SEND=2]="REQUEST_TO_SEND",e[e.READY_TO_RECEIVE=3]="READY_TO_RECEIVE"}(DataAdapterHandshakeMode||(DataAdapterHandshakeMode={})),function(e){e[e.RS485=1]="RS485",e[e.RS422=2]="RS422",e[e.DMX512=3]="DMX512",e[e.MODBUS_RTU=4]="MODBUS_RTU",e[e.SPI=5]="SPI",e[e.I2C=6]="I2C",e[e.UART=7]="UART",e[e.RS232=8]="RS232"}(DataAdapterProtocol||(DataAdapterProtocol={})),function(e){e[e.MODE_0=1]="MODE_0",e[e.MODE_1=2]="MODE_1",e[e.MODE_2=3]="MODE_2",e[e.MODE_3=4]="MODE_3"}(DataAdapterSPIMode||(DataAdapterSPIMode={})),function(e){e[e.MSB_FIRST=1]="MSB_FIRST",e[e.LSB_FIRST=2]="LSB_FIRST"}(DataAdapterEndianness||(DataAdapterEndianness={})),function(e){e[e.EXTERNAL=1]="EXTERNAL",e[e.VOLTS_1_8=2]="VOLTS_1_8",e[e.VOLTS_2_5=3]="VOLTS_2_5",e[e.VOLTS_3_3=4]="VOLTS_3_3",e[e.VOLTS_5=5]="VOLTS_5"}(DataAdapterIOVoltage||(DataAdapterIOVoltage={})),function(e){e[e.OK=0]="OK",e[e.UNKNOWN=1]="UNKNOWN",e[e.TIMEOUT=2]="TIMEOUT",e[e.FORMAT=3]="FORMAT",e[e.INVALID=4]="INVALID",e[e.OVERRUN=5]="OVERRUN",e[e.CORRUPT=6]="CORRUPT"}(PacketErrorCode||(PacketErrorCode={})),function(e){e[e.DB_102=1]="DB_102",e[e.DB_82=2]="DB_82"}(SPLRange||(SPLRange={})),function(e){e[e.VINT=0]="VINT",e[e.DIGITAL_INPUT=1]="DIGITAL_INPUT",e[e.DIGITAL_OUTPUT=2]="DIGITAL_OUTPUT",e[e.VOLTAGE_INPUT=3]="VOLTAGE_INPUT",e[e.VOLTAGE_RATIO_INPUT=4]="VOLTAGE_RATIO_INPUT"}(HubPortMode||(HubPortMode={}));const PhidgetErrorDescription={0:"Success",1:"Not Permitted",2:"No Such Entity",3:"Timed Out",58:"Keep Alive Failure",4:"Op Interrupted",5:"IO Issue",6:"Memory Issue",7:"Access (Permission) Issue",8:"Address Issue",9:"Resource Busy",10:"Object Exists",11:"Object is not a directory",12:"Object is a directory",13:"Invalid",14:"Too many open files in system",15:"Too many open files",16:"Not enough space",17:"File too Big",18:"Read Only Filesystem",19:"Read Only Object",20:"Operation Not Supported",21:"Invalid Argument",22:"Try again",26:"Not Empty",28:"Unexpected Error",27:"Duplicate",37:"Bad Credential",45:"Network Unavailable",35:"Connection Refused",46:"Connection Reset",48:"No route to host",40:"No Such Device",50:"Wrong Device",41:"Broken Pipe",44:"Name Resolution Failure",51:"Unknown or Invalid Value",52:"Device not Attached",53:"Invalid or Unexpected Packet",54:"Argument List Too Long",55:"Bad Version",56:"Closed",57:"Not Configured",31:"End of File",59:"Failsafe Triggered",60:"Invalid Value - Too High",61:"Invalid Value - Too Low",62:"Bad Power Supply",63:"Power Cycle Required",64:"Hall Sensor Error",65:"Bad Current Readings"};class PhidgetError extends Error{constructor(e,t,r){let i=t||PhidgetErrorDescription[e];if(null!=r){let e;e=r instanceof Error?r.message:"string"==typeof r?r:JSON.stringify(r),e.length>0&&(i+=" - "+e)}super(i),r instanceof Error&&(this.innerException=r),Error.captureStackTrace&&Error.captureStackTrace(this,PhidgetError),this.name="PhidgetError",this.errorCode=e}get stacks(){let e=this.stack;return this.innerException&&this.innerException.stack&&(e+="\n<- "+this.innerException.stack),e}}let loglevel=LogLevel.WARNING,logsEnabled=!0;class Log{static setLevel(e){loglevel=e}static getLevel(){return loglevel}static enable(e){void 0!==e&&(loglevel=e),logsEnabled=!0}static disable(){logsEnabled=!1}static log(e,t){switch(e){case LogLevel.CRITICAL:logcrit(t);break;case LogLevel.ERROR:logerr(t);break;case LogLevel.WARNING:logwarn(t);break;case LogLevel.INFO:loginfo(t);break;case LogLevel.DEBUG:logdebug(t);break;case LogLevel.VERBOSE:logverbose(t)}}}let prevTime=null;function colouredText(e,t){return e}function log(e,t,r,i){if(!logsEnabled)return;let a="";{const e=Number(new Date),t=e-(prevTime||e);prevTime=e,a=colouredText(" +"+t+"ms")}const s=""+r+a;i?e(s+" -",i):e(s)}function logcrit(e,t){loglevel>=LogLevel.CRITICAL&&log(console.error," <"+colouredText("CRIT")+">",e,t)}function logerr(e,t){loglevel>=LogLevel.ERROR&&log(console.error,"<"+colouredText("ERROR")+">",e,t)}function logwarn(e,t){loglevel>=LogLevel.WARNING&&log(console.warn," <"+colouredText("Warn")+">",e,t)}function loginfo(e,t){loglevel>=LogLevel.INFO&&log(console.log," <Info>",e,t)}function logdebug(e,t){loglevel>=LogLevel.DEBUG&&log(console.debug,"<"+colouredText("Debug")+">",e,t)}function logverbose(e,t){loglevel>=LogLevel.VERBOSE&&log(console.debug," <"+colouredText("Verb")+">",e,t)}function logbuffer(e,t){if(loglevel<LogLevel.VERBOSE)return;let r,i=" ";r=ArrayBuffer.isView(t)?new DataView(t.buffer):new DataView(t);for(let e=0;e<r.byteLength;e++){let t=r.getUint8(e).toString(16);1===t.length&&(t="0"+t),i+="0x"+t+", "}i=i.slice(0,i.length-2),logverbose(e+" - "+i)}function logEventException(e){logwarn("Unhandled exception in event handler",e)}class PhidgetLock{constructor(){this.o=!1,this.releaseEvents=[]}onRelease(e){this.releaseEvents.push(e)}removeReleaseListener(e){const t=this.releaseEvents.indexOf(e);t>-1&&this.releaseEvents.splice(t,1)}emitRelease(){const e=this.releaseEvents.slice(),t=e.length;for(let r=0;r<t;r++)e[r]();logverbose("LOCK Released!")}acquire(){return logverbose("LOCK Aquiring.."),new promise((e=>{if(!this.o)return this.o=!0,e();const t=()=>{if(!this.o)return this.o=!0,this.removeReleaseListener(t),logverbose("LOCK Aquired!"),e()};this.onRelease(t)}))}release(){this.o=!1,setTimeout((()=>this.emitRelease()))}get locked(){return this.o}}const C_LIBRARY_VERSION="1.19",LibraryVersion="Phidget22 - Version 1.19 - Built March 4, 2024",JSLibraryVersion="3.19.1 - March 4, 2024",Managers=[],Connections=[],UserPhidgets=[];let Epoch;function tm(){return null==Epoch&&(Epoch=Date.now()),Date.now()-Epoch}async function scanChannels(e){for(const t of Connections)if((!e.h||!t.u)&&(!e.u||!t.h)&&await t.l(e))return!0;return!1}async function scanUserPhidgets(e){for(const t of UserPhidgets)if(await e.tryMatchOpen(t))return}let scanStopped,scanLock,scanTimeout,scanningActive=!1;async function startScanningUserPhidgets(){if(scanLock||(scanLock=new PhidgetLock),await scanLock.acquire(),scanningActive)return void scanLock.release();const e=()=>{scanTimeout=void 0;const t=()=>{scanningActive?scanTimeout=setTimeout(e,1e3):scanStopped&&(scanStopped(),scanStopped=void 0)};promise.all(UserPhidgets.filter((e=>!e.g&&!e.P)).map((e=>scanChannels(e)))).then((()=>{t()})).catch((e=>{logerr("Error during User Phidgets scan",e),t()}))};scanningActive=!0,loginfo("Starting User Phidget scanning"),e(),scanLock.release()}async function stopScanningUserPhidgets(){if(scanLock||(scanLock=new PhidgetLock),await scanLock.acquire(),scanningActive){if(scanningActive=!1,null!=scanTimeout)clearTimeout(scanTimeout);else{const e=new promise((e=>{scanStopped=e}));await e}loginfo("User Phidget scanning Stopped"),scanLock.release()}else scanLock.release()}function managerDeviceAttach(e){for(const t of Managers)t.C(e)}function managerDeviceDetach(e){for(const t of Managers)t.m(e)}function managerChannelAttach(e){for(const t of Managers)t.k(e)}function managerChannelDetach(e){for(const t of Managers)t.S(e)}let _onConnectionRemoved=null,_onConnectionAdded=null;function onConnectionRemoved(e){_onConnectionRemoved&&_onConnectionRemoved(e)}function onConnectionAdded(e){_onConnectionAdded&&_onConnectionAdded(e)}let ConnectionID=0;class PhidgetConnection{constructor(e){if(this.onError=null,null!=e&&"object"!=typeof e)throw new Error("Options argument must be an object");this.D=ConnectionID++,this.connected=!1,this.A=new Map,this.U=new Map,this.name="",null!=e&&(null!=e.name&&"string"==typeof e.name&&(this.name=e.name),null!=e.onError&&"function"==typeof e.onError&&(this.onError=e.onError)),void 0===this.onError&&(this.onError=function(e,t){logerr("Connection error: "+t+":0x"+e.toString(16))}),Connections.push(this),onConnectionAdded(this)}static setOnConnectionRemoved(e){_onConnectionRemoved=e}static setOnConnectionAdded(e){_onConnectionAdded=e}delete(){if(this.connected)throw new PhidgetError(ErrorCode.BUSY,"close connection before deleting");onConnectionRemoved(this),Connections.includes(this)&&Connections.splice(Connections.indexOf(this),1)}getKey(){return this.D}get key(){return this.D}get h(){return 0===this._}get u(){return 1===this._}V(e){const t=this.A.get(e);if(null==t)throw new PhidgetError(ErrorCode.UNEXPECTED,"invalid channel id:"+e);return t}B(e){const t=this.U.get(e);return null==t?null:t}$(){for(;this.U.size>0;){var e;const t=Array.from(values(e=this.U).call(e))[this.U.size-1];try{this.m(t)}catch(e){logerr("Error while detaching all devices",e)}}}C(e){if(this.U.has(e.id))throw new PhidgetError(ErrorCode.DUPLICATE,"duplicate device:"+e);(e.isHubPort?logverbose:loginfo)("Device Attach: "+e),this.U.set(e.id,e),managerDeviceAttach(e)}m(e){if(!this.U.has(e.id))throw new PhidgetError(ErrorCode.NO_SUCH_ENTITY,"no such device:"+e);for(const t of this.A.entries())t[1].parent===e&&(logverbose("Channel Detach: "+t[1]),managerChannelDetach(t[1]),t[1].detach(),this.A.delete(t[0]));(e.isHubPort?logverbose:loginfo)("Device Detach: "+e),managerDeviceDetach(e),this.U.delete(e.id)}k(e){if(this.A.has(e.id))throw new PhidgetError(ErrorCode.DUPLICATE,"duplicate channel:"+e);logverbose("Channel Attach: "+e),this.A.set(e.id,e),managerChannelAttach(e),scanUserPhidgets(e).catch((e=>{logerr("Error scanning user phidgets",e)}))}async l(e){for(const r of values(t=this.A).call(t)){var t;if(await r.tryMatchOpen(e))return!0}return!1}}class Request{constructor(e,t,r,i,a,s){if("number"==typeof e){if(void 0===t||void 0===r||void 0===i||void 0===a||void 0===s)throw new Error("Invalid Input");this.len=e,this.flgs=t,this.reqseq=r,this.repseq=i,this.type=a,this.stype=s,this.hdrlen=16}else this.hdrlen=this.parse(e)}toString(){return"{flags:0x"+this.flgs.toString(16)+" len:"+this.len+" reqseq:"+this.reqseq+" repseq:"+this.repseq+" type:"+this.type+" subtype:"+this.stype+"}"}parse(e){const t=e[3]<<24|e[2]<<16|e[1]<<8|e[0];if(this.len=e[7]<<24|e[6]<<16|e[5]<<8|e[4],this.flgs=e[9]<<8|e[8],this.reqseq=e[11]<<8|e[10],this.repseq=e[13]<<8|e[12],this.type=e[14],this.stype=e[15],1346914608!=t)throw new Error("Bad Request Magic");return 16}get buffer(){const e=new Uint8Array(16);return e[3]=80,e[2]=72,e[1]=73,e[0]=48,e[7]=this.len>>24&255,e[6]=this.len>>16&255,e[5]=this.len>>8&255,e[4]=255&this.len,e[9]=this.flgs>>8&255,e[8]=255&this.flgs,e[11]=this.reqseq>>8&255,e[10]=255&this.reqseq,e[13]=this.repseq>>8&255,e[12]=255&this.repseq,e[14]=this.type,e[15]=this.stype,e}}var anObject=anObject$b,regexpFlags=function(){var e=anObject(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},uncurryThis$2=functionUncurryThis,regExpFlags=regexpFlags,flags$3=uncurryThis$2(regExpFlags),isPrototypeOf$3=objectIsPrototypeOf,flags$2=flags$3,RegExpPrototype=RegExp.prototype,flags_1=function(e){return e===RegExpPrototype||isPrototypeOf$3(RegExpPrototype,e)?flags$2(e):e.flags},parent$3=flags_1,flags$1=parent$3,flags=flags$1;const BPE_ISEVENT_FLAG=1;class BridgePacket{constructor(e,t){null!=e&&null!=t?(this.version=t.v,this.source=t.s,this.flags=t.f,this.vpkt=t.p,this.ch=e.V(t.O),this.entryCount=t.c,this.entries=t.e,this.local=!1):(this.version=0,this.source=2,this.flags=0,this.entryCount=0,this.entries={},this.local=!0)}isEvent(){return!!(1&flags(this))}entryType(e){switch(e){case"c":case"h":case"uh":case"d":case"u":case"l":case"ul":return 1;case"f":case"g":return 2;case"s":return 3;case"R":case"I":case"G":case"U":case"H":return 4;case"J":return 5;default:return-1}}validate(e){switch(this.entryType(e.type)){case 1:if("number"!=typeof e.value){const t=Number(e.value);if(Number.isNaN(t))throw new TypeError("Expected number but got "+typeof e.value);e.value=t}return void(e.value=Math.round(e.value));case 2:if("number"!=typeof e.value){const t=Number(e.value);if(Number.isNaN(t))throw new TypeError("Expected number but got "+typeof e.value);e.value=t}return;case 3:if("string"==typeof e.value)return;throw new TypeError("Expected string but got "+typeof e.value);case 5:if("object"==typeof e.value)return;throw new TypeError("Expected object but got "+typeof e.value);case 4:if(Array.isArray(e.value))return;throw new TypeError("Expected an Array but got "+typeof e.value);default:throw new Error("Invalid entry type: "+e.type)}}set(e){if(this.validate(e),e.name in this.entries)throw new Error("value ["+e.name+"] already set");const t={t:e.type,v:e.value};this.entries[e.name]=t,this.entryCount++}remove(e){const t=e;if(!(t in this.entries))return;const r={};for(const e in this.entries)e!==t&&(r[e]=this.entries[e]);this.entries=r,this.entryCount--}add(e){e.name=this.entryCount.toString(),this.set(e)}getJsonOut(e){if(null==this.vpkt)throw new Error("vpkt not set!");return{v:this.version,s:this.source,f:flags(this),p:this.vpkt,I:e.parent.id,X:e.uniqueIndex,c:this.entryCount,e:this.entries}}async send(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(!e||!e.isopen)throw new PhidgetError(ErrorCode.NOT_ATTACHED);this.vpkt=t;const i=await e.send(this);return r&&e.bridgeInput(this),i}deliver(){if(!this.ch)throw new PhidgetError(ErrorCode.UNEXPECTED,"Bridge packet missing channel");!1!==this.ch.isopen&&this.ch.bridgeInput(this)}sendToChannel(e,t){this.vpkt=t,e.clearErrorEvent(),e.bridgeInput(this)}getNumber(e){if(!(e in this.entries))throw new Error("BP entry '".concat(e,"' does not exist."));const t=this.entryType(this.entries[e].t);if(2!=t&&1!=t)throw new Error("BP entry '".concat(e,"' is not a number."));if("number"!=typeof this.entries[e].v)throw new Error("BP entry '".concat(e,"' has an unexpected value!"));return this.entries[e].v}getArray(e){if(!(e in this.entries))throw new Error("BP entry '".concat(e,"' does not exist."));if(4!=this.entryType(this.entries[e].t))throw new Error("BP entry '".concat(e,"' is not an array."));if(!Array.isArray(this.entries[e].v))throw new Error("BP entry '".concat(e,"' has an unexpected value!"));return this.entries[e].v}getObject(e){if(!(e in this.entries))throw new Error("BP entry '".concat(e,"' does not exist."));if(5!=this.entryType(this.entries[e].t))throw new Error("BP entry '".concat(e,"' is not an object."));if("object"!=typeof this.entries[e].v)throw new Error("BP entry '".concat(e,"' has an unexpected value!"));return this.entries[e].v}getString(e){if(!(e in this.entries))throw new Error("BP entry '".concat(e,"' does not exist."));if(3!=this.entryType(this.entries[e].t))throw new Error("BP entry '".concat(e,"' is not a string."));if(null===this.entries[e].v)throw new Error("BP entry '".concat(e,"' is null."));if("string"!=typeof this.entries[e].v)throw new Error("BP entry '".concat(e,"' has an unexpected value!"));return this.entries[e].v}getBoolean(e){if(!(e in this.entries))throw new Error("BP entry '".concat(e,"' does not exist."));if(1!=this.entryType(this.entries[e].t))throw new Error("BP entry '".concat(e,"' is not a boolean."));if("number"!=typeof this.entries[e].v)throw new Error("BP entry '".concat(e,"' has an unexpected value!"));if(0===this.entries[e].v)return!1;if(1===this.entries[e].v)return!0;if(2===this.entries[e].v)return 2;throw new Error("BP entry '".concat(e,"' has an unexpected value!"))}}const ChannelClassName={0:"PhidgetNone",1:"PhidgetAccelerometer",35:"PhidgetBLDCMotor",14:"PhidgetCapacitiveTouch",2:"PhidgetCurrentInput",38:"PhidgetCurrentOutput",3:"PhidgetDataAdapter",4:"PhidgetDCMotor",36:"PhidgetDictionary",5:"PhidgetDigitalInput",6:"PhidgetDigitalOutput",7:"PhidgetDistanceSensor",8:"PhidgetEncoder",32:"PhidgetFirmwareUpgrade",9:"PhidgetFrequencyCounter",33:"PhidgetGeneric",10:"PhidgetGPS",12:"PhidgetGyroscope",13:"PhidgetHub",15:"PhidgetHumiditySensor",16:"PhidgetIR",11:"PhidgetLCD",17:"PhidgetLightSensor",18:"PhidgetMagnetometer",19:"PhidgetMeshDongle",34:"PhidgetMotorPositionController",39:"PhidgetMotorVelocityController",37:"PhidgetPHSensor",20:"PhidgetPowerGuard",21:"PhidgetPressureSensor",22:"PhidgetRCServo",23:"PhidgetResistanceInput",24:"PhidgetRFID",25:"PhidgetSoundSensor",26:"PhidgetSpatial",27:"PhidgetStepper",28:"PhidgetTemperatureSensor",29:"PhidgetVoltageInput",30:"PhidgetVoltageOutput",31:"PhidgetVoltageRatioInput"},DeviceClassName={0:"PhidgetNone",1:"PhidgetAccelerometer",2:"PhidgetAdvancedServo",3:"PhidgetAnalog",4:"PhidgetBridge",25:"PhidgetDataAdapter",24:"PhidgetDictionary",5:"PhidgetEncoder",23:"PhidgetFirmwareUpgrade",6:"PhidgetFrequencyCounter",22:"PhidgetGeneric",7:"PhidgetGPS",8:"PhidgetHub",9:"PhidgetInterfaceKit",10:"PhidgetIR",11:"PhidgetLED",12:"PhidgetMeshDongle",13:"PhidgetMotorControl",14:"PhidgetPHSensor",15:"PhidgetRFID",16:"PhidgetServo",17:"PhidgetSpatial",18:"PhidgetStepper",19:"PhidgetTemperatureSensor",20:"PhidgetTextLCD",21:"PhidgetVINT"};class PhidgetBase{static get ANY_SERIAL_NUMBER(){return-1}static get ANY_HUB_PORT(){return-1}static get ANY_CHANNEL(){return-1}static get ANY_LABEL(){return null}static get INFINITE_TIMEOUT(){return 0}static get DEFAULT_TIMEOUT(){return 2500}static get AUTO_HUBPORTSPEED(){return 0}get attached(){return this.getAttached()}get channel(){return this.getChannel()}set channel(e){this.setChannel(e)}get isChannel(){return this.getIsChannel()}get channelClass(){return this.getChannelClass()}get channelClassName(){return this.getChannelClassName()}get channelName(){return this.getChannelName()}get channelSubclass(){return this.getChannelSubclass()}get connection(){return this.getConnection()}get deviceClass(){return this.getDeviceClass()}get deviceClassName(){return this.getDeviceClassName()}get deviceFirmwareUpgradeString(){return this.getDeviceFirmwareUpgradeString()}get deviceID(){return this.getDeviceID()}get deviceLabel(){return this.getDeviceLabel()}set deviceLabel(e){this.setDeviceLabel(e)}get deviceName(){return this.getDeviceName()}get deviceSerialNumber(){return this.getDeviceSerialNumber()}set deviceSerialNumber(e){this.setDeviceSerialNumber(e)}get deviceSKU(){return this.getDeviceSKU()}get deviceVersion(){return this.getDeviceVersion()}get deviceVINTID(){return this.getDeviceVINTID()}get hub(){return this.getHub()}get hubPort(){return this.getHubPort()}set hubPort(e){this.setHubPort(e)}get hubPortCount(){return this.getHubPortCount()}get isHubPortDevice(){return this.getIsHubPortDevice()}set isHubPortDevice(e){this.setIsHubPortDevice(e)}get hubPortSpeed(){return this.getHubPortSpeed()}get maxHubPortSpeed(){return this.getMaxHubPortSpeed()}get hubPortSupportsAutoSetSpeed(){return this.getHubPortSupportsAutoSetSpeed()}get hubPortSupportsSetSpeed(){return this.getHubPortSupportsSetSpeed()}get key(){return this.getKey()}get isLocal(){return this.getIsLocal()}set isLocal(e){this.setIsLocal(e)}get isOpen(){return this.getIsOpen()}get parent(){return this.getParent()}get isRemote(){return this.getIsRemote()}set isRemote(e){this.setIsRemote(e)}get maxVINTDeviceSpeed(){return this.getMaxVINTDeviceSpeed()}get VINTDeviceSupportsAutoSetSpeed(){return this.getVINTDeviceSupportsAutoSetSpeed()}get VINTDeviceSupportsSetSpeed(){return this.getVINTDeviceSupportsSetSpeed()}}class Phidget extends PhidgetBase{constructor(e){super(),this.onAttach=null,this.onDetach=null,this.onError=null,this.onPropertyChange=null,void 0!==e?(this.M=!0,this.N=!0):(this.M=!1,this.N=!1)}static get libraryVersion(){return this.getLibraryVersion()}static getLibraryVersion(){return LibraryVersion}}class PhidgetChannel extends Phidget{constructor(e){super(e),this.g=!1,this.L=!1,this.P=!1,this.G=!1,this.H=!1,this.j=Phidget.ANY_CHANNEL,this.W=Phidget.ANY_LABEL,this.q=Phidget.ANY_SERIAL_NUMBER,this.Y=Phidget.ANY_HUB_PORT,this.h=!1,this.u=!1,this.Z=e}ee(){null!=this.te&&(clearTimeout(this.te),delete this.te),delete this.re,delete this.ie}async ae(e){if(this.Z=e,this.P=!0,this.N=!0,this.ee(),this.onAttach)try{await this.onAttach(this)}catch(e){logEventException(e)}this.se&&this.se()}async ne(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(this.ee(),e?this.L=!0:(UserPhidgets.includes(this)&&UserPhidgets.splice(UserPhidgets.indexOf(this),1),0===UserPhidgets.length&&await stopScanningUserPhidgets()),this.P){try{this.Z&&await this.Z.close()}catch(e){logwarn("Error while closing channel",e)}if(this.G=!0,this.N=!1,this.onDetach)try{this.onDetach(this)}catch(e){logEventException(e)}this.G=!1,this.P=!1,delete this.Z}else null!=this.oe&&this.oe(new PhidgetError(ErrorCode.CLOSED,"Closed while waiting for open"))}he(e,t){if(this.onPropertyChange&&this.ce&&(void 0===t||!0!==t.local))try{this.onPropertyChange(e)}catch(e){logEventException(e)}}de(e){for(const t in e.entries)"_class_version_"!==t&&"dataIntervalDbl"!==t&&(t in this.data?this.data[t]=e.entries[t].v:loginfo("Unknown property: "+t+" in setstatus packet. Probably server is newer than client."));void 0!==e.entries.dataIntervalDbl&&(this.data.dataInterval=e.entries.dataIntervalDbl.v),null!=this.data.minDataInterval&&void 0===e.entries.maxDataRate&&(this.data.maxDataRate=1e3/this.data.minDataInterval),null!=this.data.maxDataInterval&&void 0===e.entries.minDataRate&&(this.data.minDataRate=1e3/this.data.maxDataInterval)}ue(){if(!this.Z||!this.N&&!this.G)throw new PhidgetError(ErrorCode.NOT_ATTACHED)}le(){if(!this.Z||!this.P||!this.N&&!this.G)throw new PhidgetError(ErrorCode.NOT_ATTACHED)}get ce(){return!(!this.N||this.g)}get ge(){return!(!this.N&&!this.G)}toString(){return this.Z?this.Z.toString():this.constructor.name}getConnection(){return this.Z?this.Z.conn:null}getKey(){return this.ue(),"ch"+this.Z.id+"_"+this.Z.conn.D}async open(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(this.L)return;this.L=!0,this.ie=tm(),!isNaN(e)&&e>0?this.re=e:delete this.re,UserPhidgets.push(this),!0===this.M&&(this.setChannel(this.getChannel()),this.setHubPort(this.getHubPort()),this.setDeviceSerialNumber(this.getDeviceSerialNumber()),this.setIsHubPortDevice(this.getIsHubPortDevice()),this.setIsLocal(this.getIsLocal()),this.setIsRemote(this.getIsRemote()),this.M=!1,this.N=!1,delete this.Z);const t=new promise(((e,t)=>{this.se=e,this.oe=t}));try{await scanChannels(this)}catch(e){logerr("Problem during open scan",e)}return await startScanningUserPhidgets(),this.re&&(this.te=setTimeout((()=>{delete this.te;const e=this.oe;delete this.oe,this.close().then((()=>{e&&e(new PhidgetError(ErrorCode.TIMEOUT,"Open timed out"))})).catch((t=>{logwarn("Error calling close after open timeout",t),e&&e(new PhidgetError(ErrorCode.TIMEOUT,"Open timed out"))}))}),this.re)),t}async close(){this.L&&(logdebug("closing phidget"),this.L=!1,await this.ne())}getAttached(){return this.N}getIsOpen(){return this.L}getChannel(){return this.N||this.G?this.Z.index:this.j}setChannel(e){this.j=e}getChannelClass(){return this.we}getChannelClassName(){return ChannelClassName[this.we]}getChannelName(){return this.ue(),this.Z.name}getChannelSubclass(){return this.ue(),this.Z.subclass}getDeviceClass(){return this.ue(),this.Z.parent.class}getDeviceClassName(){return this.ue(),DeviceClassName[this.Z.parent.class]}getDeviceID(){return this.ue(),this.Z.parent.deviceID}getDeviceLabel(){return this.N||this.G?this.Z.parent.label:this.W?this.W:""}setDeviceLabel(e){this.W=e}getDeviceName(){return this.ue(),this.Z.parent.name}getDeviceSerialNumber(){return this.N||this.G?this.Z.parent.serialNumber:this.q}setDeviceSerialNumber(e){isNaN(e)||(this.q=e)}getDeviceSKU(){return this.ue(),this.Z.parent.sku}getDeviceVersion(){return this.ue(),this.Z.parent.version}getHub(){this.ue();let e=this.Z.parent;for(;null!=e&&e.class!==DeviceClass.HUB;)e=e.parent;if(null==e)throw new PhidgetError(ErrorCode.WRONG_DEVICE,"Hub not found");return new PhidgetDevice(e)}getHubPort(){return this.N||this.G?this.Z.parent.hubPort:this.Y}setHubPort(e){isNaN(e)||(this.Y=e)}getHubPortSpeed(){if(this.ue(),this.Z.parent.class!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);if(null==this.Z.parent.vintDeviceProps.commSpeed||4294967295==this.Z.parent.vintDeviceProps.commSpeed)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Z.parent.vintDeviceProps.commSpeed}async setHubPortSpeed(e){if(this.ue(),this.Z.parent.class!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,173)}getIsChannel(){return!0}getIsHubPortDevice(){return this.N||this.G?this.Z.parent.isHubPort:this.H}setIsHubPortDevice(e){this.H=e}getIsLocal(){return this.N||this.G?this.Z.parent.conn.h:this.h}setIsLocal(e){this.h=e}getIsRemote(){return this.N||this.G?this.Z.parent.conn.u:this.u}setIsRemote(e){this.u=e}getParent(){return this.ue(),new PhidgetDevice(this.Z.parent)}getDeviceFirmwareUpgradeString(){return this.ue(),this.Z.parent.fwstr}async writeDeviceLabel(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"s",value:e}),await t.send(this.Z,140)}getDeviceChannelCount(e){this.ue();let t=0;for(const r of this.Z.parent.devDef.ch){if(null!=e&&null==r.c)throw new PhidgetError(ErrorCode.UNSUPPORTED);null!=e&&r.c!==e||t++}return t}getDeviceVINTID(){if(this.ue(),this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.Z.parent.vintID}getHubPortCount(){if(this.ue(),this.deviceClass!==DeviceClass.VINT&&this.deviceClass!==DeviceClass.HUB)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.hub.pe.hubPortProps.length}getHubPortSupportsSetSpeed(){if(this.ue(),this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.hub.pe.hubPortProps[this.hubPort].portSuppSetSpeed}getHubPortSupportsAutoSetSpeed(){if(this.ue(),this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.hub.pe.hubPortProps[this.hubPort].portSuppAutoSetSpeed}getMaxHubPortSpeed(){if(this.ue(),this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);if(4294967295===this.hub.pe.hubPortProps[this.hubPort].portMaxSpeed)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.hub.pe.hubPortProps[this.hubPort].portMaxSpeed}getVINTDeviceSupportsSetSpeed(){if(this.ue(),this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.Z.parent.vintDeviceProps.suppSetSpeed}getVINTDeviceSupportsAutoSetSpeed(){if(this.ue(),this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.Z.parent.vintDeviceProps.suppAutoSetSpeed}getMaxVINTDeviceSpeed(){if(this.ue(),this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);if(4294967295===this.Z.parent.vintDeviceProps.maxSpeed)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Z.parent.vintDeviceProps.maxSpeed}async reboot(){this.le();const e=new BridgePacket;await e.send(this.Z,139,!1)}async rebootFirmwareUpgrade(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,138,!1)}}class PhidgetDevice extends Phidget{constructor(e){super(e),this.pe=e,this.name="PhidgetDevice"}toString(){return this.pe.toString()}getConnection(){return this.pe.conn}getKey(){return"dev"+this.pe.id+"_"+this.pe.conn.D}getAttached(){return!0}getIsOpen(){return!1}getDeviceClass(){return this.pe.class}getDeviceClassName(){return DeviceClassName[this.pe.class]}getDeviceID(){return this.pe.deviceID}getDeviceLabel(){return this.pe.label}getDeviceName(){return this.pe.name}getDeviceSerialNumber(){return this.pe.serialNumber}getDeviceSKU(){return this.pe.sku}getDeviceVersion(){return this.pe.version}getHub(){let e=this.pe;for(;null!=e&&e.class!==DeviceClass.HUB;)e=e.parent;if(null==e)throw new PhidgetError(ErrorCode.WRONG_DEVICE,"Hub not found");return new PhidgetDevice(e)}getHubPort(){return this.pe.hubPort}getHubPortSpeed(){if(this.pe.class!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);if(null==this.pe.vintDeviceProps.commSpeed||4294967295==this.pe.vintDeviceProps.commSpeed)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.pe.vintDeviceProps.commSpeed}getIsChannel(){return!1}getIsHubPortDevice(){return this.pe.isHubPort}getIsLocal(){return this.pe.conn.h}getIsRemote(){return this.pe.conn.u}getParent(){const e=this.pe.parent;return e?new PhidgetDevice(e):null}getDeviceFirmwareUpgradeString(){return this.pe.fwstr}getDeviceChannelCount(e){let t=0;for(const r of this.pe.devDef.ch){if(null!=e&&null==r.c)throw new PhidgetError(ErrorCode.UNSUPPORTED);null!=e&&r.c!==e||t++}return t}getDeviceVINTID(){if(this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.pe.vintID}getHubPortCount(){if(this.deviceClass!==DeviceClass.VINT&&this.deviceClass!==DeviceClass.HUB)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.hub.pe.hubPortProps.length}getHubPortSupportsSetSpeed(){if(this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.hub.pe.hubPortProps[this.hubPort].portSuppSetSpeed}getHubPortSupportsAutoSetSpeed(){if(this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.hub.pe.hubPortProps[this.hubPort].portSuppAutoSetSpeed}getMaxHubPortSpeed(){if(this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);if(4294967295===this.hub.pe.hubPortProps[this.hubPort].portMaxSpeed)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.hub.pe.hubPortProps[this.hubPort].portMaxSpeed}getVINTDeviceSupportsSetSpeed(){if(this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.pe.vintDeviceProps.suppSetSpeed}getVINTDeviceSupportsAutoSetSpeed(){if(this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);return this.pe.vintDeviceProps.suppAutoSetSpeed}getMaxVINTDeviceSpeed(){if(this.deviceClass!==DeviceClass.VINT)throw new PhidgetError(ErrorCode.WRONG_DEVICE);if(4294967295===this.pe.vintDeviceProps.maxSpeed)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.pe.vintDeviceProps.maxSpeed}getChannel(){throw new PhidgetError(ErrorCode.UNEXPECTED)}setChannel(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}getChannelClass(){throw new PhidgetError(ErrorCode.UNEXPECTED)}getChannelClassName(){throw new PhidgetError(ErrorCode.UNEXPECTED)}getChannelName(){throw new PhidgetError(ErrorCode.UNEXPECTED)}getChannelSubclass(){throw new PhidgetError(ErrorCode.UNEXPECTED)}close(){throw new PhidgetError(ErrorCode.UNEXPECTED)}setDeviceLabel(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}setDeviceSerialNumber(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}setHubPort(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}setHubPortSpeed(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}setIsHubPortDevice(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}setIsLocal(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}setIsRemote(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}open(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}writeDeviceLabel(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}reboot(){throw new PhidgetError(ErrorCode.UNEXPECTED)}rebootFirmwareUpgrade(e){throw new PhidgetError(ErrorCode.UNEXPECTED)}}class Channel{constructor(e,t,r){this.lastErrorEventCode=null,this.lastErrorEventDesc="",this.lastErrorEventTime=0,this.conn=e,this.parent=t,this.id=r.id,this.chDef=r.chDef,this.uniqueIndex=r.uniqueIndex,this.index=r.index,this.isopen=!1}get subclass(){var e;return null!==(e=this.chDef.s)&&void 0!==e?e:ChannelSubclass.NONE}get isHubPort(){return this.parent.isHubPort}match(e){return!e.g&&!e.N&&(e.we===this.class&&((e.q===Phidget.ANY_SERIAL_NUMBER||e.q==this.parent.serialNumber)&&((e.j===Phidget.ANY_CHANNEL||e.j==this.index)&&((e.Y===Phidget.ANY_HUB_PORT||e.Y==this.parent.hubPort)&&(e.H===this.isHubPort&&((e.W===Phidget.ANY_LABEL||e.W===this.parent.label)&&((!e.h||!this.conn.u)&&((!e.u||!this.conn.h)&&(logdebug("matched:"+e+" -> "+this),!0)))))))))}async tryMatchOpen(e){if(this.match(e))try{return await this.open(e),!0}catch(t){if(e.onError)try{if(t instanceof PhidgetError){let r;switch(t.errorCode){case ErrorCode.BUSY:r=ErrorEventCode.BUSY;break;case ErrorCode.BAD_VERSION:r=ErrorEventCode.BAD_VERSION;break;default:r=ErrorEventCode.FAILURE}e.onError(r,t.message)}else t instanceof Error?e.onError(ErrorEventCode.FAILURE,t.message):e.onError(ErrorEventCode.FAILURE,"Error during open")}catch(e){logEventException(e)}else logerr("Error opening channel",t)}return!1}detach(){this.isopen&&this.userphid&&(this.detaching=!0,this.userphid.ne(!0).then((()=>{this.isopen=!1,delete this.userphid,delete this.detaching})).catch((e=>{this.isopen=!1,delete this.userphid,delete this.detaching,logwarn("Error closing during detach",e)})))}toString(){return this.parent.class===DeviceClass.VINT?this.isHubPort?this.name+" Ch:"+this.index+" -> "+this.parent.sku+" Port:"+this.parent.hubPort+" Serial#:"+this.parent.serialNumber:this.name+" Ch:"+this.index+" -> "+this.parent.sku+" -> "+this.parent.parent.sku+" Port:"+this.parent.hubPort+" Serial#:"+this.parent.serialNumber:this.name+" Ch:"+this.index+" -> "+this.parent.sku+" Serial#:"+this.parent.serialNumber}supportedBridgePacket(e){return!(null!=this.chDef.p&&!this.chDef.p.includes(e))}bridgeInput(e){if(this.userphid)switch(e.vpkt){case 0:this.userphid.de(e);break;case 17:if(this.userphid.Ee&&this.userphid.Ee(e.getNumber(0)),this.userphid.onError)try{this.userphid.onError(e.getNumber(0),e.getString(1))}catch(e){logEventException(e)}break;case 172:this.parent.label=e.getString(0),this.userphid.he("DeviceLabel",e);break;case 176:this.parent.vintDeviceProps.commSpeed=e.getNumber(0),this.userphid.he("HubPortSpeed",e);break;case 139:case 138:break;case 173:this.conn.u&&(this.parent.vintDeviceProps.commSpeed=e.getNumber(0));break;case 140:this.conn.u&&(this.parent.label=e.getString(0));break;default:if(!this.supportedBridgePacket(e.vpkt))throw new PhidgetError(ErrorCode.UNSUPPORTED);this.userphid.ye(e),this.userphid.Pe&&this.userphid.fe()&&this.userphid.Pe()}}sendErrorEvent(e){const t=e.getNumber(0),r=e.getString(1),i=Date.now();this.lastErrorEventCode===t&&this.lastErrorEventDesc===r&&i-this.lastErrorEventTime<1e3||(this.lastErrorEventCode=t,this.lastErrorEventDesc=r,this.lastErrorEventTime=i,e.vpkt=17,this.bridgeInput(e))}clearErrorEvent(){this.lastErrorEventCode=null}}class NetworkChannel extends Channel{constructor(e,t,r){super(e,t,r),this.cpversion=r.cpversion,this.name=r.name,this.class=r.class}async open(e){const t={phid:this.parent.id,channel:this.id,class:this.class,index:this.uniqueIndex,version:this.cpversion};try{e.g=!0;const r=await this.conn.Ce(0,0,0,30,60,t);e.g=!1,this.isopen=!0,this.userphid=e;new BridgePacket(this.conn,r).deliver(),await e.ae(this)}catch(t){throw e.g=!1,e.N=!1,t}}async close(){if(this.detaching)return;const e={phid:this.parent.id,index:this.uniqueIndex};await this.conn.Ce(0,0,0,30,65,e)}async send(e){const t=e.getJsonOut(this);return await this.conn.Ce(0,0,0,30,70,t)}}const PhidgetDevices={VINT:[{uid:21,d:9,c:21,t:"PhidgetInterfaceKit 0/0/4",s:"1014",i:64,v:[800,900],ch:[{uid:35,t:"Power Relay",c:6,n:4,i:0,p:[82,55,147,146]}]},{uid:26,d:12,c:21,t:"PhidgetInterfaceKit 0/0/8",s:"1017",i:135,v:[200,300],ch:[{uid:40,t:"Signal Relay",c:6,n:8,i:0,p:[82,55,147,146]}]},{uid:69,d:32,c:10,t:"PhidgetIR",s:"1055",i:77,v:[200,300],ch:[{uid:134,t:"IR Receiver Transmitter",c:16,i:0,p:[33,97,99,98,5,25,32]}]},{uid:96,d:95,c:21,t:"Hub Port - Digital Input Mode",s:"DIGITALINPUT_PORT",i:1,v:[100,200],ch:[{uid:193,t:"Digital Input",c:5,i:0,p:[90]}]},{uid:97,d:96,c:21,t:"Hub Port - Digital Output Mode",s:"DIGITALOUTPUT_PORT",i:2,v:[100,110],ch:[{uid:194,t:"Digital Output",c:6,s:16,i:0,p:[55,82]}]},{uid:98,d:96,c:21,t:"Hub Port - Digital Output Mode",s:"DIGITALOUTPUT_PORT",i:2,v:[110,200],ch:[{uid:195,t:"Digital Output",c:6,s:16,i:0,p:[55,82,147,146]}]},{uid:99,d:97,c:21,t:"Hub Port - Voltage Input Mode",s:"VOLTAGEINPUT_PORT",i:3,v:[100,110],ch:[{uid:196,t:"Voltage Input",c:29,s:48,i:0,p:[54,79,46,122,101,115]}]},{uid:100,d:97,c:21,t:"Hub Port - Voltage Input Mode",s:"VOLTAGEINPUT_PORT",i:3,v:[110,200],ch:[{uid:197,t:"Voltage Input",c:29,s:48,i:0,p:[54,79,46,122,101,115]}]},{uid:101,d:97,c:21,t:"Hub Port - Voltage Input Mode",s:"VOLTAGEINPUT_PORT",i:3,v:[200,300],ch:[{uid:198,t:"Voltage Input",c:29,s:48,i:0,p:[54,79,46,122,101,115]}]},{uid:102,d:98,c:21,t:"Hub Port - Voltage Ratio Mode",s:"VOLTAGERATIOINPUT_PORT",i:4,v:[100,200],ch:[{uid:199,t:"Voltage Ratio Input",c:31,s:64,i:0,p:[54,79,46,122,102,115]}]},{uid:103,d:98,c:21,t:"Hub Port - Voltage Ratio Mode",s:"VOLTAGERATIOINPUT_PORT",i:4,v:[200,300],ch:[{uid:200,t:"Voltage Ratio Input",c:31,s:64,i:0,p:[54,79,46,122,102,115]}]},{uid:104,d:49,c:21,t:"pH Adapter Phidget",s:"ADP1000",i:29,v:[100,200],ch:[{uid:201,t:"PH Sensor Input",c:37,i:0,p:[54,46,134,133]},{uid:202,t:"Voltage Input",c:29,i:0,p:[54,79,46,87,122,101,115]}]},{uid:111,d:51,c:21,t:"8x Voltage Input Phidget",s:"DAQ1000",i:50,v:[100,110],ch:[{uid:221,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[54,79,46,122,102,115]},{uid:222,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[54,79,46,122,101,115]}]},{uid:112,d:51,c:21,t:"8x Voltage Input Phidget",s:"DAQ1000",i:50,v:[110,200],ch:[{uid:223,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[54,79,46,122,102,115]},{uid:224,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[54,79,46,122,101,115]}]},{uid:113,d:75,c:21,t:"12-bit Voltage Output Phidget",s:"OUT1000",i:41,v:[100,110],ch:[{uid:225,t:"Voltage Output",c:30,i:0,p:[56,86]}]},{uid:114,d:75,c:21,t:"12-bit Voltage Output Phidget",s:"OUT1000",i:41,v:[110,200],ch:[{uid:226,t:"Voltage Output",c:30,i:0,p:[56,86,147,146]}]},{uid:115,d:76,c:21,t:"Isolated 12-bit Voltage Output Phidget",s:"OUT1001",i:42,v:[100,110],ch:[{uid:227,t:"Voltage Output",c:30,i:0,p:[86,87]}]},{uid:116,d:76,c:21,t:"Isolated 12-bit Voltage Output Phidget",s:"OUT1001",i:42,v:[110,200],ch:[{uid:228,t:"Voltage Output",c:30,i:0,p:[86,87,147,146]}]},{uid:117,d:77,c:21,t:"Isolated 16-bit Voltage Output Phidget",s:"OUT1002",i:43,v:[100,110],ch:[{uid:229,t:"Voltage Output",c:30,i:0,p:[86,87]}]},{uid:118,d:77,c:21,t:"Isolated 16-bit Voltage Output Phidget",s:"OUT1002",i:43,v:[110,200],ch:[{uid:230,t:"Voltage Output",c:30,i:0,p:[86,87,147,146]}]},{uid:121,d:52,c:21,t:"4x Digital Input Phidget",s:"DAQ1200",i:28,v:[100,200],ch:[{uid:232,t:"Digital Input",c:5,n:4,i:0,p:[90]}]},{uid:122,d:78,c:21,t:"4x Digital Output Phidget",s:"OUT1100",i:25,v:[100,110],ch:[{uid:233,t:"Digital Output",c:6,s:16,n:4,i:0,p:[55,82]}]},{uid:123,d:78,c:21,t:"4x Digital Output Phidget",s:"OUT1100",i:25,v:[110,120],ch:[{uid:234,t:"Digital Output",c:6,s:16,n:4,i:0,p:[55,82,147,146]}]},{uid:124,d:78,c:21,t:"4x Digital Output Phidget",s:"OUT1100",i:25,v:[120,200],ch:[{uid:235,t:"Digital Output",c:6,s:18,n:4,i:0,p:[55,82,156,147,146]}]},{uid:125,d:53,c:21,t:"4x Isolated Digital Input Phidget",s:"DAQ1300",i:32,v:[100,200],ch:[{uid:236,t:"Digital Input Isolated",c:5,n:4,i:0,p:[90]}]},{uid:126,d:54,c:21,t:"16x Isolated Digital Input Phidget",s:"DAQ1301",i:54,v:[100,200],ch:[{uid:237,t:"Digital Input Isolated",c:5,n:16,i:0,p:[90]}]},{uid:127,d:55,c:21,t:"Versatile Input Phidget",s:"DAQ1400",i:34,v:[100,120],ch:[{uid:238,t:"Voltage Input",c:29,i:0,p:[181,54,74,79,46,122,101,115]},{uid:239,t:"Current Input",c:2,i:0,p:[181,54,46,74,8]},{uid:240,t:"Digital Input",c:5,i:0,p:[181,182,64,74,90]},{uid:241,t:"Frequency Input",c:9,i:0,p:[181,182,21,54,64,74,20,7]}]},{uid:128,d:55,c:21,t:"Versatile Input Phidget",s:"DAQ1400",i:34,v:[120,200],ch:[{uid:242,t:"Voltage Input",c:29,i:0,p:[181,54,74,79,46,122,101,115]},{uid:243,t:"Current Input",c:2,i:0,p:[181,54,46,74,8]},{uid:244,t:"Digital Input",c:5,i:0,p:[181,182,64,74,90]},{uid:245,t:"Frequency Input",c:9,i:0,p:[181,182,21,54,64,74,20,7]}]},{uid:129,d:56,c:21,t:"Wheatstone Bridge Phidget",s:"DAQ1500",i:24,v:[100,200],ch:[{uid:246,t:"Bridge Input",c:31,s:65,n:2,i:0,p:[45,54,46,56,102]}]},{uid:131,d:105,c:21,t:"30A Current Sensor Phidget",s:"VCP1100",i:64,v:[100,200],ch:[{uid:248,t:"Current Input",c:2,i:0,p:[54,46,8]}]},{uid:133,d:57,c:21,t:"DC Motor Phidget",s:"DCC1000",i:47,v:[100,200],ch:[{uid:249,t:"DC Motor Controller",c:4,i:0,p:[54,40,44,51,119,55,58,121,16]},{uid:250,t:"Encoder Input",c:8,s:96,i:0,p:[54,46,65,29]},{uid:251,t:"Voltage Ratio",c:31,s:64,i:0,p:[54,46,79,122,102,115]},{uid:252,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]},{uid:253,t:"Current Sensor",c:2,i:0,p:[46,54,8]}]},{uid:134,d:57,c:21,t:"DC Motor Phidget",s:"DCC1000",i:47,v:[200,210],ch:[{uid:254,t:"DC Motor Controller",c:4,i:0,e:0,p:[54,40,44,51,119,55,58,121,16]},{uid:255,t:"Encoder Input",c:8,s:96,i:0,p:[54,46,65,29]},{uid:256,t:"Voltage Ratio",c:31,s:64,i:0,p:[54,46,79,122,102,115]},{uid:257,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]},{uid:258,t:"Current Sensor",c:2,i:0,p:[46,54,8]},{uid:259,t:"Position Controller",c:34,i:0,e:0,p:[40,54,51,119,57,55,83,58,120,65,135,136,142,147,146,29,16]}]},{uid:135,d:57,c:21,t:"DC Motor Phidget",s:"DCC1000",i:47,v:[210,300],ch:[{uid:260,t:"DC Motor Controller",c:4,i:0,e:0,p:[54,40,44,51,119,55,58,147,146,121,16]},{uid:261,t:"Encoder Input",c:8,s:96,i:0,p:[54,46,65,29]},{uid:262,t:"Voltage Ratio",c:31,s:64,i:0,p:[54,46,79,122,102,115]},{uid:263,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]},{uid:264,t:"Current Sensor",c:2,i:0,p:[46,54,8]},{uid:265,t:"Position Controller",c:34,i:0,e:0,p:[40,54,51,119,57,55,83,58,120,65,135,136,142,147,146,29,16]}]},{uid:141,d:110,c:21,t:"2A DC Motor Phidget",s:"DCC1001",i:68,v:[100,120],ch:[{uid:288,t:"DC Motor Controller",c:4,i:0,e:0,p:[54,40,44,51,55,121,16]},{uid:289,t:"Encoder Input",c:8,i:0,p:[54,46,29]},{uid:290,t:"Position Controller",c:34,i:0,e:0,p:[40,54,51,57,55,83,120,135,136,142,29,16]}]},{uid:142,d:110,c:21,t:"2A DC Motor Phidget",s:"DCC1001",i:68,v:[120,200],ch:[{uid:291,t:"DC Motor Controller",c:4,i:0,e:0,p:[54,40,44,51,55,147,146,121,16]},{uid:292,t:"Encoder Input",c:8,i:0,p:[54,46,29]},{uid:293,t:"Position Controller",c:34,i:0,e:0,p:[40,54,51,57,55,83,120,135,136,142,147,146,29,16]}]},{uid:143,d:117,c:21,t:"4A DC Motor Phidget",s:"DCC1002",i:70,v:[100,110],ch:[{uid:294,t:"DC Motor Controller",c:4,i:0,e:0,p:[54,40,44,51,55,121,16]},{uid:295,t:"Encoder Input",c:8,i:0,p:[54,46,29]},{uid:296,t:"Position Controller",c:34,i:0,e:0,p:[40,54,51,57,55,83,120,135,136,142,29,16]}]},{uid:144,d:117,c:21,t:"4A DC Motor Phidget",s:"DCC1002",i:70,v:[110,200],ch:[{uid:297,t:"DC Motor Controller",c:4,i:0,e:0,p:[54,40,44,51,55,147,146,121,16]},{uid:298,t:"Encoder Input",c:8,i:0,p:[54,46,29]},{uid:299,t:"Position Controller",c:34,i:0,e:0,p:[40,54,51,57,55,83,120,135,136,142,147,146,29,16]}]},{uid:145,d:120,c:21,t:"2x DC Motor Phidget",s:"DCC1003",i:73,v:[100,110],ch:[{uid:300,t:"DC Motor Controller",c:4,n:2,i:0,p:[54,40,44,51,55,121,16]}]},{uid:146,d:120,c:21,t:"2x DC Motor Phidget",s:"DCC1003",i:73,v:[110,200],ch:[{uid:301,t:"DC Motor Controller",c:4,n:2,i:0,p:[54,40,44,51,55,147,146,121,16]}]},{uid:147,d:108,c:21,t:"Brushless DC Motor Phidget",s:"DCC1100",i:65,v:[100,120],ch:[{uid:302,t:"Brushless DC Motor Controller",c:35,i:0,e:0,p:[54,40,44,55,141,121,29,16]},{uid:303,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]},{uid:304,t:"Position Controller",c:34,i:0,e:0,p:[54,40,55,57,83,120,135,136,142,141,147,146,29,16]}]},{uid:148,d:108,c:21,t:"Brushless DC Motor Phidget",s:"DCC1100",i:65,v:[120,200],ch:[{uid:305,t:"Brushless DC Motor Controller",c:35,i:0,e:0,p:[54,40,44,55,141,147,146,121,29,16]},{uid:306,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]},{uid:307,t:"Position Controller",c:34,i:0,e:0,p:[54,40,55,57,83,120,135,136,142,141,147,146,29,16]}]},{uid:152,d:58,c:21,t:"Distance Phidget",s:"DST1000",i:45,v:[100,200],ch:[{uid:329,t:"Distance Sensor 200mm",c:7,i:0,p:[54,46,12]}]},{uid:153,d:121,c:21,t:"Distance Phidget 650mm",s:"DST1001",i:121,v:[100,200],ch:[{uid:330,t:"Distance Sensor 650mm",c:7,i:0,p:[54,46,12]}]},{uid:154,d:126,c:21,t:"Distance Phidget 1300mm",s:"DST1002",i:126,v:[100,200],ch:[{uid:331,t:"Distance Sensor 1300mm",c:7,i:0,p:[54,46,12]}]},{uid:155,d:59,c:21,t:"Sonar Phidget",s:"DST1200",i:46,v:[100,200],ch:[{uid:332,t:"Sonar Distance Sensor",c:7,i:0,p:[54,46,75,12,88]}]},{uid:156,d:60,c:21,t:"Quadrature Encoder Phidget",s:"ENC1000",i:18,v:[100,200],ch:[{uid:333,t:"Encoder Input",c:8,s:96,i:0,p:[54,46,56,65,29]}]},{uid:157,d:155,c:21,t:"Quadrature Encoder Phidget",s:"ENC1001",i:75,v:[100,200],ch:[{uid:334,t:"Encoder Input",c:8,i:0,p:[10,54,46,56,29]}]},{uid:158,d:109,c:21,t:"Phidget Dial",s:"HIN1101",i:67,v:[100,200],ch:[{uid:335,t:"Encoder Input",c:8,i:0,p:[54,46,56,29]},{uid:336,t:"Digital Input",c:5,i:0,p:[90]}]},{uid:159,d:61,c:21,t:"Touch Keypad Phidget",s:"HIN1000",i:36,v:[100,200],ch:[{uid:337,t:"Capacitive Touch Sensor",c:14,n:7,i:0,p:[46,54,66,96,137]}]},{uid:160,d:62,c:21,t:"Touch Wheel Phidget",s:"HIN1001",i:56,v:[100,200],ch:[{uid:338,t:"Capacitive Touch Sensor",c:14,n:4,i:0,p:[46,54,66,96,137]},{uid:339,t:"Capacitive Scroll Wheel",c:14,i:4,p:[46,54,66,96,137]}]},{uid:161,d:63,c:21,t:"Thumbstick Phidget",s:"HIN1100",i:37,v:[100,200],ch:[{uid:340,t:"Thumbstick Axis",c:31,n:2,i:0,p:[54,46,102]},{uid:341,t:"Thumbstick Button",c:5,i:0,p:[90]}]},{uid:162,d:69,c:21,t:"Humidity Phidget",s:"HUM1000",i:20,v:[100,200],ch:[{uid:342,t:"Humidity Sensor",c:15,i:0,p:[54,46,22]},{uid:343,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]}]},{uid:163,d:127,c:21,t:"Humidity Phidget",s:"HUM1001",i:127,v:[100,200],ch:[{uid:344,t:"Humidity Sensor",c:15,i:0,p:[54,46,22]},{uid:345,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]}]},{uid:164,d:70,c:21,t:"Graphic LCD Phidget",s:"LCD1100",i:40,v:[100,200],ch:[{uid:346,t:"Graphic LCD",c:11,s:80,i:0,p:[43,48,62,80,47,4,6,13,14,15,19,61,38,104,105]}]},{uid:165,d:70,c:21,t:"Graphic LCD Phidget",s:"LCD1100",i:23,v:[200,300],ch:[{uid:347,t:"Graphic LCD",c:11,s:80,i:0,p:[43,48,62,80,47,4,6,13,14,15,19,61,38,104,105]}]},{uid:166,d:71,c:21,t:"32x Isolated LED Phidget",s:"LED1000",i:39,v:[100,200],ch:[{uid:348,t:"LED Driver",c:6,s:17,n:32,i:0,p:[55,67,68,82]}]},{uid:167,d:72,c:21,t:"Light Phidget",s:"LUX1000",i:33,v:[100,200],ch:[{uid:349,t:"Light Sensor",c:17,i:0,p:[54,46,23]}]},{uid:168,d:136,c:21,t:"Soil Moisture Phidget",s:"HUM1100",i:136,v:[100,200],ch:[{uid:350,t:"Moisture Sensor",c:31,i:0,p:[54,46,102]}]},{uid:171,d:73,c:21,t:"Accelerometer Phidget",s:"MOT1100",i:51,v:[200,300],ch:[{uid:351,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]}]},{uid:173,d:146,c:21,t:"PhidgetAccelerometer",s:"MOT0100",i:146,v:[100,200],ch:[{uid:353,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]}]},{uid:174,d:74,c:21,t:"Spatial Phidget",s:"MOT1101",i:52,v:[100,200],ch:[{uid:354,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]},{uid:355,t:"3-Axis Gyroscope",c:12,i:0,p:[54,106,2]},{uid:356,t:"3-Axis Magnetometer",c:18,i:0,p:[54,46,50,37,35,18]},{uid:357,t:"Spatial",c:26,i:0,p:[54,106,50,37,35,89]}]},{uid:175,d:137,c:21,t:"Spatial Phidget",s:"MOT1102",i:137,v:[200,300],ch:[{uid:358,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]},{uid:359,t:"3-Axis Gyroscope",c:12,i:0,p:[54,106,2]},{uid:360,t:"3-Axis Magnetometer",c:18,i:0,p:[54,46,50,37,35,18]},{uid:361,t:"Spatial",c:26,s:112,i:0,p:[54,149,151,106,50,37,35,174,150,89,148]}]},{uid:176,d:137,c:21,t:"Spatial Phidget",s:"MOT1102",i:140,v:[300,400],ch:[{uid:362,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]},{uid:363,t:"3-Axis Gyroscope",c:12,i:0,p:[54,106,2]},{uid:364,t:"3-Axis Magnetometer",c:18,i:0,p:[54,46,50,37,35,18]},{uid:365,t:"Spatial",c:26,s:112,i:0,p:[54,149,151,106,50,37,35,174,150,89,148]}]},{uid:180,d:141,c:21,t:"PhidgetSpatial Precision 3/3/3",s:"MOT0110",i:141,v:[100,200],ch:[{uid:381,t:"3-Axis Accelerometer",c:1,i:0,p:[10,179,54,46,170,1]},{uid:382,t:"3-Axis Gyroscope",c:12,i:0,p:[10,179,54,170,106,2]},{uid:383,t:"3-Axis Magnetometer",c:18,i:0,p:[10,179,54,46,170,50,37,35,18]},{uid:384,t:"Spatial",c:26,s:112,i:0,p:[10,179,54,149,170,106,50,37,35,174,150,89,148]},{uid:385,t:"Temperature Sensor",c:28,i:0,p:[10,54,46,95]}]},{uid:181,d:79,c:21,t:"Barometer Phidget",s:"PRE1000",i:17,v:[100,200],ch:[{uid:386,t:"Barometer",c:21,i:0,p:[54,46,31]}]},{uid:182,d:80,c:21,t:"16x RC Servo Phidget",s:"RCC1000",i:49,v:[100,110],ch:[{uid:387,t:"RC Servo Motor Controller",c:22,n:16,i:0,p:[69,70,83,57,86,85,40,81,94]}]},{uid:183,d:80,c:21,t:"16x RC Servo Phidget",s:"RCC1000",i:49,v:[110,200],ch:[{uid:388,t:"RC Servo Motor Controller",c:22,n:16,i:0,p:[69,70,83,57,86,85,40,81,147,146,94]}]},{uid:184,d:80,c:21,t:"16x RC Servo Phidget",s:"RCC1000",i:58,v:[200,300],ch:[{uid:389,t:"RC Servo Motor Controller",c:22,n:16,i:0,p:[69,70,83,57,86,85,40,81,147,146,94]}]},{uid:185,d:81,c:21,t:"4x Relay Phidget",s:"REL1000",i:44,v:[100,110],ch:[{uid:390,t:"Power Relay",c:6,n:4,i:0,p:[55,82]}]},{uid:186,d:81,c:21,t:"4x Relay Phidget",s:"REL1000",i:44,v:[110,200],ch:[{uid:391,t:"Power Relay",c:6,n:4,i:0,p:[55,82,147,146]}]},{uid:187,d:82,c:21,t:"4x Isolated Solid State Relay Phidget",s:"REL1100",i:26,v:[100,110],ch:[{uid:392,t:"Digital Output Isolated",c:6,s:16,n:4,i:0,p:[55,82]}]},{uid:188,d:82,c:21,t:"4x Isolated Solid State Relay Phidget",s:"REL1100",i:26,v:[110,120],ch:[{uid:393,t:"Digital Output Isolated",c:6,s:16,n:4,i:0,p:[55,82,147,146]}]},{uid:189,d:82,c:21,t:"4x Isolated Solid State Relay Phidget",s:"REL1100",i:26,v:[120,200],ch:[{uid:394,t:"Digital Output Isolated",c:6,s:18,n:4,i:0,p:[55,82,156,147,146]}]},{uid:190,d:83,c:21,t:"16x Isolated Solid State Relay Phidget",s:"REL1101",i:27,v:[100,110],ch:[{uid:395,t:"Digital Output Isolated",c:6,s:16,n:16,i:0,p:[55,82]}]},{uid:191,d:83,c:21,t:"16x Isolated Solid State Relay Phidget",s:"REL1101",i:27,v:[110,200],ch:[{uid:396,t:"Digital Output Isolated",c:6,s:16,n:16,i:0,p:[55,82,147,146]}]},{uid:192,d:83,c:21,t:"16x Isolated Solid State Relay Phidget",s:"REL1101",i:130,v:[100,300],ch:[{uid:397,t:"Digital Output Isolated Frequency Control",c:6,s:18,n:8,i:0,p:[55,82,156,147,146]},{uid:398,t:"Digital Output Isolated",c:6,s:16,n:8,i:8,p:[55,82,147,146]}]},{uid:194,d:84,c:21,t:"Programmable Power Guard Phidget",s:"SAF1000",i:38,v:[100,110],ch:[{uid:400,t:"Power Supply Protector",c:20,i:0,p:[56,71,58]},{uid:401,t:"Voltage Sensor",c:29,i:0,p:[54,46,101]},{uid:402,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]}]},{uid:195,d:84,c:21,t:"Programmable Power Guard Phidget",s:"SAF1000",i:38,v:[110,200],ch:[{uid:403,t:"Power Supply Protector",c:20,i:0,p:[56,71,58,147,146]},{uid:404,t:"Voltage Sensor",c:29,i:0,p:[54,46,101]},{uid:405,t:"Temperature Sensor",c:28,i:0,p:[54,46,95]}]},{uid:196,d:85,c:21,t:"Sound Phidget",s:"SND1000",i:35,v:[100,200],ch:[{uid:406,t:"Sound Sensor",c:25,i:0,p:[54,116,46,11]}]},{uid:197,d:86,c:21,t:"Stepper Phidget",s:"STC1000",i:48,v:[100,110],ch:[{uid:407,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,29,100,91]}]},{uid:198,d:86,c:21,t:"Stepper Phidget",s:"STC1000",i:48,v:[110,200],ch:[{uid:408,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,147,146,29,100,91]}]},{uid:199,d:115,c:21,t:"2.5A Stepper Phidget",s:"STC1001",i:69,v:[100,110],ch:[{uid:409,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,29,100,91]}]},{uid:200,d:115,c:21,t:"2.5A Stepper Phidget",s:"STC1001",i:69,v:[110,200],ch:[{uid:410,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,147,146,29,100,91]}]},{uid:201,d:118,c:21,t:"8A Stepper Phidget",s:"STC1002",i:71,v:[100,110],ch:[{uid:411,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,29,100,91]}]},{uid:202,d:118,c:21,t:"8A Stepper Phidget",s:"STC1002",i:71,v:[110,200],ch:[{uid:412,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,147,146,29,100,91]}]},{uid:203,d:119,c:21,t:"4A Stepper Phidget",s:"STC1003",i:72,v:[100,110],ch:[{uid:413,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,29,100,91]}]},{uid:204,d:119,c:21,t:"4A Stepper Phidget",s:"STC1003",i:72,v:[110,200],ch:[{uid:414,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,147,146,29,100,91]}]},{uid:205,d:119,c:21,t:"4A Stepper Phidget",s:"STC1003",i:142,v:[200,300],ch:[{uid:415,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,147,146,29,100,91]},{uid:416,t:"Voltage Input",c:29,i:0,p:[54,46,101]}]},{uid:206,d:149,c:21,t:"4A Stepper Phidget",s:"STC1005",i:147,v:[100,110],ch:[{uid:417,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,147,146,29,100,91]},{uid:418,t:"Voltage Input",c:29,i:0,p:[54,46,101]}]},{uid:207,d:149,c:21,t:"4A Stepper Phidget",s:"STC1005",i:147,v:[110,200],ch:[{uid:419,t:"Bipolar Stepper Controller",c:27,i:0,p:[54,83,85,40,51,57,49,63,147,146,29,100,91]},{uid:420,t:"Voltage Input",c:29,i:0,p:[54,46,101]}]},{uid:209,d:87,c:21,t:"Temperature Phidget",s:"TMP1000",i:19,v:[100,200],ch:[{uid:422,t:"Temperature Sensor (IC)",c:28,i:0,p:[54,46,95]}]},{uid:210,d:88,c:21,t:"Isolated Thermocouple Phidget",s:"TMP1100",i:55,v:[100,200],ch:[{uid:423,t:"Thermocouple Input",c:28,s:33,i:0,p:[54,46,84,95]},{uid:424,t:"Temperature Sensor (IC)",c:28,i:1,p:[54,46,95]},{uid:425,t:"Voltage Input",c:29,i:0,p:[54,46,101]}]},{uid:211,d:89,c:21,t:"4x Thermocouple Phidget",s:"TMP1101",i:21,v:[100,200],ch:[{uid:426,t:"Thermocouple Input",c:28,s:33,n:4,i:0,p:[54,46,84,95]},{uid:427,t:"Temperature Sensor (IC)",c:28,i:4,p:[54,46,95]},{uid:428,t:"Voltage Input",c:29,n:4,i:0,p:[54,46,101]}]},{uid:212,d:89,c:21,t:"4x Thermocouple Phidget",s:"TMP1101",i:143,v:[200,300],ch:[{uid:429,t:"Thermocouple Input",c:28,s:33,n:4,i:0,p:[54,46,84,95]},{uid:430,t:"Temperature Sensor (IC)",c:28,i:4,p:[54,46,95]},{uid:431,t:"Voltage Input",c:29,n:4,i:0,p:[54,46,101]}]},{uid:213,d:90,c:21,t:"RTD Phidget",s:"TMP1200",i:16,v:[100,200],ch:[{uid:432,t:"RTD input",c:28,s:32,i:0,p:[180,54,46,76,77,95]},{uid:433,t:"Resistance Input",c:23,i:0,p:[180,54,46,77,36]}]},{uid:214,d:90,c:21,t:"RTD Phidget",s:"TMP1200",i:78,v:[300,400],ch:[{uid:434,t:"RTD input",c:28,s:32,i:0,p:[180,54,46,76,77,95]},{uid:435,t:"Resistance Input",c:23,i:0,p:[180,54,46,77,36]}]},{uid:215,d:90,c:21,t:"RTD Phidget",s:"TMP1200",i:79,v:[400,500],ch:[{uid:436,t:"RTD input",c:28,s:32,i:0,p:[180,54,46,76,77,95]},{uid:437,t:"Resistance Input",c:23,i:0,p:[180,54,46,77,36]}]},{uid:218,d:92,c:21,t:"20-bit (+-40V) Voltage Input Phidget",s:"VCP1000",i:53,v:[100,200],ch:[{uid:441,t:"Voltage Input",c:29,i:0,p:[54,46,87,101]}]},{uid:219,d:93,c:21,t:"10-bit (+-40V) Voltage Input Phidget",s:"VCP1001",i:31,v:[100,110],ch:[{uid:442,t:"Voltage Input",c:29,i:0,p:[54,46,87,101]}]},{uid:220,d:93,c:21,t:"10-bit (+-40V) Voltage Input Phidget",s:"VCP1001",i:31,v:[110,200],ch:[{uid:443,t:"Voltage Input",c:29,i:0,p:[54,46,87,101]}]},{uid:221,d:94,c:21,t:"10-bit (+-1V) Voltage Input Phidget",s:"VCP1002",i:30,v:[100,110],ch:[{uid:444,t:"Voltage Input",c:29,i:0,p:[54,46,87,101]}]},{uid:222,d:94,c:21,t:"10-bit (+-1V) Voltage Input Phidget",s:"VCP1002",i:30,v:[110,200],ch:[{uid:445,t:"Voltage Input",c:29,i:0,p:[54,46,87,101]}]},{uid:242,d:102,c:21,t:"VINT Firmware Upgrade (STM32F0)",s:"FIRMWARE_UPGRADE_STM32F0",i:4093,v:[100,110],ch:[{uid:464,t:"Firmware Upgrade",c:32,i:0,p:[114,112,113]}]},{uid:243,d:143,c:21,t:"VINT Firmware Upgrade (STM32G0)",s:"FIRMWARE_UPGRADE_STM32G0",i:4093,v:[110,114],ch:[{uid:465,t:"Firmware Upgrade",c:32,i:0,p:[114,112,113]}]},{uid:244,d:143,c:21,t:"VINT Firmware Upgrade (STM32G0)",s:"FIRMWARE_UPGRADE_STM32G0",i:4093,v:[114,120],ch:[{uid:466,t:"Firmware Upgrade",c:32,i:0,p:[114,112,113]}]},{uid:245,d:145,c:21,t:"VINT Firmware Upgrade (STM32F3)",s:"FIRMWARE_UPGRADE_STM32F3",i:4093,v:[120,200],ch:[{uid:467,t:"Firmware Upgrade",c:32,i:0,p:[114,112,113]}]},{uid:246,d:103,c:21,t:"VINT Firmware Upgrade (STM8S)",s:"FIRMWARE_UPGRADE_STM8S",i:4094,v:[100,200],ch:[{uid:468,t:"Firmware Upgrade",c:32,i:0,p:[114,112,113]}]},{uid:254,d:125,c:21,t:"Unsupported VINT Phidget",s:" ",i:4080,v:[0,9999],ch:[{uid:483,t:"Unsupported VINT Channel",c:33,i:0,p:[39,152,153,154,155,28]}]}],USB:[{uid:1,d:1,c:9,t:"PhidgetInterfaceKit 4/8/8",s:"ifkit488",i:33281,v:[0,101],cn:[0,4,8,8],ch:[{uid:1,t:"Voltage Ratio Input",c:31,s:64,n:4,i:0,p:[10,27,54,79,46,122,102,115]},{uid:2,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:3,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:2,d:2,c:16,t:"PhidgetServo 1-Motor",s:"1000",i:33025,v:[200,201],cn:[1],ch:[{uid:4,t:"RC Servo Motor Controller",c:22,i:0,p:[70,69,83,57,29]}]},{uid:3,d:2,c:16,t:"PhidgetServo 1-Motor",s:"1000",i:57,v:[200,201],cn:[1],ch:[{uid:5,t:"RC Servo Motor Controller",c:22,i:0,p:[70,69,83,57,29]}]},{uid:4,d:2,c:16,t:"PhidgetServo 1-Motor",s:"1000",i:57,v:[300,313],cn:[1],ch:[{uid:6,t:"RC Servo Motor Controller",c:22,i:0,p:[70,69,83,57,29]}]},{uid:5,d:2,c:16,t:"PhidgetServo 1-Motor",s:"1000",i:57,v:[313,400],cn:[1],ch:[{uid:7,t:"RC Servo Motor Controller",c:22,i:0,p:[70,69,83,57,29]}]},{uid:6,d:3,c:16,t:"PhidgetServo 4-Motor",s:"1001",i:33028,v:[200,201],cn:[4],ch:[{uid:8,t:"RC Servo Motor Controller",c:22,n:4,i:0,p:[70,69,83,57,29]}]},{uid:7,d:3,c:16,t:"PhidgetServo 4-Motor",s:"1001",i:56,v:[200,201],cn:[4],ch:[{uid:9,t:"RC Servo Motor Controller",c:22,n:4,i:0,p:[70,69,83,57,29]}]},{uid:8,d:3,c:16,t:"PhidgetServo 4-Motor",s:"1001",i:56,v:[300,313],cn:[4],ch:[{uid:10,t:"RC Servo Motor Controller",c:22,n:4,i:0,p:[70,69,83,57,29]}]},{uid:9,d:3,c:16,t:"PhidgetServo 4-Motor",s:"1001",i:56,v:[313,400],cn:[4],ch:[{uid:11,t:"RC Servo Motor Controller",c:22,n:4,i:0,p:[70,69,83,57,29]}]},{uid:10,d:4,c:3,t:"PhidgetAnalog 4-Output",s:"1002",i:55,v:[100,200],cn:[4],ch:[{uid:12,t:"Voltage Output",c:30,n:4,i:0,p:[56,86]}]},{uid:11,d:5,c:1,t:"PhidgetAccelerometer 2-Axis",s:"1008",i:113,v:[0,200],cn:[2],ch:[{uid:13,t:"2-Axis Accelerometer",c:1,i:0,p:[46,54,1]}]},{uid:12,d:7,c:9,t:"PhidgetInterfaceKit 2/2/2",s:"1011",i:54,v:[0,200],cn:[2,2,2,2],ch:[{uid:14,t:"Voltage Input",c:29,s:48,n:2,i:0,p:[10,27,54,79,46,122,101,115]},{uid:15,t:"Voltage Ratio Input",c:31,s:64,n:2,i:0,p:[10,27,54,79,46,122,102,115]},{uid:16,t:"Digital Input",c:5,n:2,i:0,p:[90]},{uid:17,t:"Digital Output",c:6,n:2,i:0,p:[82,55]}]},{uid:13,d:8,c:9,t:"PhidgetInterfaceKit 0/16/16",s:"1012",i:68,v:[0,601],cn:[0,0,16,16],ch:[{uid:18,t:"Digital Input",c:5,n:16,i:0,p:[90]},{uid:19,t:"Digital Output",c:6,n:16,i:0,p:[82,55]}]},{uid:14,d:8,c:9,t:"PhidgetInterfaceKit 0/16/16",s:"1012",i:68,v:[601,602],cn:[0,0,16,16],ch:[{uid:20,t:"Digital Input",c:5,n:16,i:0,p:[90]},{uid:21,t:"Digital Output",c:6,n:16,i:0,p:[82,55]}]},{uid:15,d:8,c:9,t:"PhidgetInterfaceKit 0/16/16",s:"1012",i:68,v:[602,700],cn:[0,0,16,16],ch:[{uid:22,t:"Digital Input",c:5,n:16,i:0,p:[90]},{uid:23,t:"Digital Output",c:6,n:16,i:0,p:[82,55]}]},{uid:16,d:6,c:9,t:"PhidgetInterfaceKit 8/8/8",s:"1013",i:69,v:[0,821],cn:[8,8,8,8],ch:[{uid:24,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[10,27,54,79,46,122,101,115]},{uid:25,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[10,27,54,79,46,122,102,115]},{uid:26,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:27,t:"Digital Output",c:6,n:8,i:0,p:[55,82]}]},{uid:17,d:6,c:9,t:"PhidgetInterfaceKit 8/8/8",s:"1013/1018/1019",i:69,v:[821,900],cn:[8,8,8,8],ch:[{uid:28,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[10,27,54,79,46,122,101,115]},{uid:29,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[10,27,54,79,46,122,102,115]},{uid:30,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:31,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:18,d:9,c:9,t:"PhidgetInterfaceKit 0/0/4",s:"1014",i:64,v:[0,704],cn:[0,0,0,4],ch:[{uid:32,t:"Power Relay",c:6,n:4,i:0,p:[82,55]}]},{uid:19,d:9,c:9,t:"PhidgetInterfaceKit 0/0/4",s:"1014",i:64,v:[704,800],cn:[0,0,0,4],ch:[{uid:33,t:"Power Relay",c:6,n:4,i:0,p:[82,55]}]},{uid:20,d:9,c:9,t:"PhidgetInterfaceKit 0/0/4",s:"1014",i:64,v:[800,900],cn:[0,0,0,4],ch:[{uid:34,t:"Power Relay",c:6,n:4,i:0,p:[82,55,147,146]}]},{uid:22,d:10,c:9,t:"PhidgetLinearTouch",s:"1015",i:118,v:[0,9999],cn:[0,0,0,0,1],ch:[{uid:36,t:"Capacitive Slider Sensor",c:14,i:0,p:[46,54,96,137]}]},{uid:23,d:11,c:9,t:"PhidgetCircularTouch",s:"1016",i:119,v:[0,9999],cn:[0,0,0,0,1],ch:[{uid:37,t:"Capacitive Scroll Sensor",c:14,i:0,p:[46,54,96,137]}]},{uid:24,d:12,c:9,t:"PhidgetInterfaceKit 0/0/8",s:"1017",i:129,v:[0,9999],cn:[0,0,0,8],ch:[{uid:38,t:"Signal Relay",c:6,n:8,i:0,p:[82,55]}]},{uid:25,d:12,c:9,t:"PhidgetInterfaceKit 0/0/8",s:"1017",i:135,v:[200,300],cn:[0,0,0,8],ch:[{uid:39,t:"Signal Relay",c:6,n:8,i:0,p:[82,55,147,146]}]},{uid:27,d:6,c:9,t:"PhidgetInterfaceKit 8/8/8",s:"1010/1018/1019",i:69,v:[900,1e3],cn:[8,8,8,8],ch:[{uid:41,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[10,27,54,79,46,122,101,115]},{uid:42,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[10,27,54,79,46,122,102,115]},{uid:43,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:44,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:28,d:6,c:9,t:"PhidgetInterfaceKit 8/8/8",s:"1010/1018/1019",i:69,v:[1e3,1100],cn:[8,8,8,8],ch:[{uid:45,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[10,27,54,79,46,122,101,115]},{uid:46,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[10,27,54,79,46,122,102,115]},{uid:47,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:48,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:29,d:13,c:15,t:"PhidgetRFID",s:"1023",i:48,v:[0,104],cn:[0],ch:[{uid:49,t:"RFID Reader",c:24,i:0,p:[92,93]}]},{uid:30,d:13,c:15,t:"PhidgetRFID",s:"1023",i:48,v:[104,200],cn:[0],ch:[{uid:50,t:"RFID Reader",c:24,i:0,p:[92,93]}]},{uid:31,d:13,c:15,t:"PhidgetRFID",s:"1023",i:49,v:[200,201],cn:[3],ch:[{uid:51,t:"RFID Reader",c:24,i:0,p:[41,92,93]},{uid:52,t:"Digital Output",c:6,i:0,p:[82,55]},{uid:53,t:"LED Driver",c:6,i:1,p:[82,55]},{uid:54,t:"Onboard LED",c:6,i:2,p:[82,55]}]},{uid:32,d:13,c:15,t:"PhidgetRFID",s:"1023",i:49,v:[201,300],cn:[3],ch:[{uid:55,t:"RFID Reader",c:24,i:0,p:[41,92,93]},{uid:56,t:"Digital Output",c:6,i:0,p:[82,55]},{uid:57,t:"LED Driver",c:6,i:1,p:[82,55]},{uid:58,t:"Onboard LED",c:6,i:2,p:[82,55]}]},{uid:33,d:14,c:15,t:"PhidgetRFID Read-Write",s:"1024",i:52,v:[100,200],cn:[3],ch:[{uid:59,t:"RFID Reader/Writer",c:24,i:0,p:[41,103,92,93]},{uid:60,t:"Digital Output",c:6,i:0,p:[82,55]},{uid:61,t:"LED Driver",c:6,i:1,p:[82,55]},{uid:62,t:"Onboard LED",c:6,i:2,p:[82,55]}]},{uid:38,d:15,c:11,t:"PhidgetLED-64",s:"1030",i:74,v:[100,300],cn:[64],ch:[{uid:73,t:"LED Driver",c:6,s:17,n:64,i:0,p:[55,82]}]},{uid:39,d:16,c:11,t:"PhidgetLED-64 Advanced",s:"1031",i:76,v:[100,200],cn:[64],ch:[{uid:74,t:"LED Driver",c:6,s:17,n:64,i:0,p:[55,67,68,82]}]},{uid:40,d:17,c:11,t:"PhidgetLED-64 Advanced",s:"1032",i:76,v:[200,300],cn:[64],ch:[{uid:75,t:"LED Driver",c:6,s:17,n:64,i:0,p:[55,67,68,82]}]},{uid:41,d:18,c:7,t:"PhidgetGPS",s:"1040",i:121,v:[0,9999],cn:[1],ch:[{uid:76,t:"GPS",c:10,i:0,p:[9,109,108,29,110,30]}]},{uid:42,d:19,c:17,t:"PhidgetSpatial 0/0/3 Basic",s:"1041",i:127,v:[200,300],cn:[3,0,0],ch:[{uid:77,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]}]},{uid:43,d:20,c:17,t:"PhidgetSpatial 3/3/3 Basic",s:"1042",i:51,v:[300,400],cn:[3,3,3,1],ch:[{uid:78,t:"3-Axis Accelerometer",c:1,i:0,p:[10,54,46,1]},{uid:79,t:"3-Axis Gyroscope",c:12,i:0,p:[10,54,106,2]},{uid:80,t:"3-Axis Magnetometer",c:18,i:0,p:[10,54,46,50,37,35,18]},{uid:81,t:"Spatial",c:26,i:0,p:[10,54,106,50,37,35,89]}]},{uid:44,d:21,c:17,t:"PhidgetSpatial Precision 0/0/3 High Resolution",s:"1043",i:127,v:[300,400],cn:[3,0,0],ch:[{uid:82,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,145,1]}]},{uid:45,d:22,c:17,t:"PhidgetSpatial Precision 3/3/3 High Resolution",s:"1044",i:51,v:[400,500],cn:[3,3,3,1],ch:[{uid:83,t:"3-Axis Accelerometer",c:1,i:0,p:[10,54,46,145,1]},{uid:84,t:"3-Axis Gyroscope",c:12,i:0,p:[10,54,145,106,2]},{uid:85,t:"3-Axis Magnetometer",c:18,i:0,p:[10,54,46,50,37,35,18]},{uid:86,t:"Spatial",c:26,i:0,p:[10,54,145,106,50,37,35,89]}]},{uid:46,d:22,c:17,t:"PhidgetSpatial Precision 3/3/3 High Resolution",s:"1044",i:51,v:[500,510],cn:[3,3,3,1],ch:[{uid:87,t:"3-Axis Accelerometer",c:1,i:0,p:[10,54,46,145,1]},{uid:88,t:"3-Axis Gyroscope",c:12,i:0,p:[10,54,145,106,2]},{uid:89,t:"3-Axis Magnetometer",c:18,i:0,p:[10,54,46,50,37,35,18]},{uid:90,t:"Spatial",c:26,s:112,i:0,p:[10,54,145,149,151,106,50,37,35,150,89,148]}]},{uid:47,d:22,c:17,t:"PhidgetSpatial Precision 3/3/3 High Resolution",s:"1044",i:51,v:[510,600],cn:[3,3,3,1],ch:[{uid:91,t:"3-Axis Accelerometer",c:1,i:0,p:[10,54,46,145,1]},{uid:92,t:"3-Axis Gyroscope",c:12,i:0,p:[10,54,145,106,2]},{uid:93,t:"3-Axis Magnetometer",c:18,i:0,p:[10,54,46,50,37,35,18]},{uid:94,t:"Spatial",c:26,s:112,i:0,p:[10,54,145,149,151,106,50,37,35,174,150,89,148]}]},{uid:48,d:23,c:19,t:"PhidgetTemperatureSensor IR",s:"1045",i:60,v:[100,200],cn:[2,0],ch:[{uid:95,t:"Temperature Sensor (IR)",c:28,i:0,p:[46,54,95]},{uid:96,t:"Temperature Sensor (IC)",c:28,i:1,p:[46,54,95]}]},{uid:49,d:24,c:4,t:"PhidgetBridge 4-Input",s:"1046",i:59,v:[100,102],cn:[4],ch:[{uid:97,t:"Bridge Input",c:31,s:65,n:4,i:0,p:[10,56,45,54,46,102]}]},{uid:50,d:24,c:4,t:"PhidgetBridge 4-Input",s:"1046",i:59,v:[102,200],cn:[4],ch:[{uid:98,t:"Bridge Input",c:31,s:65,n:4,i:0,p:[10,56,45,54,46,102]}]},{uid:51,d:24,c:4,t:"PhidgetBridge 4-Input",s:"1046",i:59,v:[200,300],cn:[4],ch:[{uid:99,t:"Bridge Input",c:31,s:65,n:4,i:0,p:[10,56,45,54,46,102]}]},{uid:52,d:25,c:5,t:"PhidgetEncoder HighSpeed 4-Input",s:"1047",i:79,v:[100,200],cn:[4,4],ch:[{uid:100,t:"Encoder Input",c:8,n:4,i:0,p:[46,56,54,29]},{uid:101,t:"Digital Input",c:5,n:4,i:0,p:[90]}]},{uid:53,d:25,c:5,t:"PhidgetEncoder HighSpeed 4-Input",s:"1047",i:79,v:[200,300],cn:[4,4],ch:[{uid:102,t:"Encoder Input",c:8,n:4,i:0,p:[46,56,54,29]},{uid:103,t:"Digital Input",c:5,n:4,i:0,p:[90]}]},{uid:54,d:25,c:5,t:"PhidgetEncoder HighSpeed 4-Input",s:"1047",i:79,v:[300,400],cn:[4,4],ch:[{uid:104,t:"Encoder Input",c:8,n:4,i:0,p:[46,56,54,29]},{uid:105,t:"Digital Input",c:5,n:4,i:0,p:[90]}]},{uid:55,d:26,c:19,t:"PhidgetTemperatureSensor 4-Input",s:"1048",i:50,v:[100,200],cn:[5,4],ch:[{uid:106,t:"Thermocouple Input",c:28,s:33,n:4,i:0,p:[46,84,54,95]},{uid:107,t:"Temperature Sensor (IC)",c:28,i:4,p:[46,54,95]},{uid:108,t:"Voltage Input",c:29,n:4,i:0,p:[46,54,101]}]},{uid:56,d:26,c:19,t:"PhidgetTemperatureSensor 4-Input",s:"1048",i:50,v:[200,300],cn:[5,4],ch:[{uid:109,t:"Thermocouple Input",c:28,s:33,n:4,i:0,p:[46,84,54,95]},{uid:110,t:"Temperature Sensor (IC)",c:28,i:4,p:[46,54,95]},{uid:111,t:"Voltage Input",c:29,n:4,i:0,p:[46,54,101]}]},{uid:57,d:27,c:17,t:"PhidgetSpatial 0/0/3",s:"1049",i:127,v:[0,200],cn:[3,0,0],ch:[{uid:112,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]}]},{uid:58,d:28,c:19,t:"PhidgetTemperatureSensor 1-Input",s:"1051",i:112,v:[0,200],cn:[2,0],ch:[{uid:113,t:"Thermocouple Input",c:28,s:33,i:0,p:[46,54,95]},{uid:114,t:"Temperature Sensor (IC)",c:28,i:1,p:[46,54,95]}]},{uid:59,d:28,c:19,t:"PhidgetTemperatureSensor 1-Input",s:"1051",i:112,v:[200,300],cn:[2,1],ch:[{uid:115,t:"Thermocouple Input",c:28,s:33,i:0,p:[46,84,54,95]},{uid:116,t:"Temperature Sensor (IC)",c:28,i:1,p:[46,54,95]},{uid:117,t:"Voltage Input",c:29,i:0,p:[46,54,101]}]},{uid:60,d:28,c:19,t:"PhidgetTemperatureSensor 1-Input",s:"1051",i:112,v:[300,400],cn:[2,1],ch:[{uid:118,t:"Thermocouple Input",c:28,s:33,i:0,p:[46,84,54,95]},{uid:119,t:"Temperature Sensor (IC)",c:28,i:1,p:[46,54,95]},{uid:120,t:"Voltage Input",c:29,i:0,p:[46,54,101]}]},{uid:61,d:28,c:19,t:"PhidgetTemperatureSensor 1-Input",s:"1051",i:112,v:[400,500],cn:[2,1],ch:[{uid:121,t:"Thermocouple Input",c:28,s:33,i:0,p:[46,84,54,95]},{uid:122,t:"Temperature Sensor (IC)",c:28,i:1,p:[46,54,95]},{uid:123,t:"Voltage Input",c:29,i:0,p:[46,54,101]}]},{uid:62,d:29,c:5,t:"PhidgetEncoder",s:"1052",i:75,v:[0,101],cn:[1,1],ch:[{uid:124,t:"Encoder Input",c:8,i:0,p:[46,54,29]},{uid:125,t:"Digital Input",c:5,i:0,p:[90]}]},{uid:63,d:29,c:5,t:"PhidgetEncoder",s:"1052",i:75,v:[101,110],cn:[1,1],ch:[{uid:126,t:"Encoder Input",c:8,i:0,p:[46,54,29]},{uid:127,t:"Digital Input",c:5,i:0,p:[90]}]},{uid:64,d:29,c:5,t:"PhidgetEncoder",s:"1052",i:75,v:[110,300],cn:[1,1],ch:[{uid:128,t:"Encoder Input",c:8,i:0,p:[46,54,29]},{uid:129,t:"Digital Input",c:5,i:0,p:[90]}]},{uid:65,d:30,c:1,t:"PhidgetAccelerometer 2-Axis",s:"1053",i:113,v:[300,400],cn:[2],ch:[{uid:130,t:"2-Axis Accelerometer",c:1,i:0,p:[46,54,1]}]},{uid:66,d:31,c:6,t:"PhidgetFrequencyCounter",s:"1054",i:53,v:[0,200],cn:[2],ch:[{uid:131,t:"Frequency Input",c:9,n:2,i:0,p:[21,56,59,54,20,7]}]},{uid:67,d:32,c:10,t:"PhidgetIR",s:"1055",i:77,v:[100,200],cn:[1],ch:[{uid:132,t:"IR Receiver Transmitter",c:16,i:0,p:[33,97,99,98,5,25,32]}]},{uid:68,d:32,c:10,t:"PhidgetIR",s:"1055",i:77,v:[200,300],cn:[1],ch:[{uid:133,t:"IR Receiver Transmitter",c:16,i:0,p:[33,97,99,98,5,25,32]}]},{uid:70,d:33,c:17,t:"PhidgetSpatial 3/3/3",s:"1056",i:51,v:[0,200],cn:[3,3,3,1],ch:[{uid:135,t:"3-Axis Accelerometer",c:1,i:0,p:[10,54,46,1]},{uid:136,t:"3-Axis Gyroscope",c:12,i:0,p:[10,54,106,2]},{uid:137,t:"3-Axis Magnetometer",c:18,i:0,p:[10,54,46,50,37,35,18]},{uid:138,t:"Spatial",c:26,i:0,p:[10,54,106,50,37,35,89]}]},{uid:71,d:33,c:17,t:"PhidgetSpatial 3/3/3",s:"1056",i:51,v:[200,300],cn:[3,3,3,1],ch:[{uid:139,t:"3-Axis Accelerometer",c:1,i:0,p:[10,54,46,1]},{uid:140,t:"3-Axis Gyroscope",c:12,i:0,p:[10,54,106,2]},{uid:141,t:"3-Axis Magnetometer",c:18,i:0,p:[10,54,46,50,37,35,18]},{uid:142,t:"Spatial",c:26,i:0,p:[10,54,106,50,37,35,89]}]},{uid:72,d:34,c:5,t:"PhidgetEncoder HighSpeed",s:"1057",i:128,v:[300,400],cn:[1],ch:[{uid:143,t:"Encoder Input",c:8,i:0,p:[46,54,29]}]},{uid:73,d:34,c:5,t:"PhidgetEncoder HighSpeed",s:"1057",i:128,v:[400,500],cn:[1],ch:[{uid:144,t:"Encoder Input",c:8,i:0,p:[46,56,54,65,29]}]},{uid:74,d:35,c:14,t:"PhidgetPHSensor",s:"1058",i:116,v:[100,200],cn:[1,1],ch:[{uid:145,t:"Voltage Input",c:29,i:0,p:[46,54,101]},{uid:146,t:"PH Input",c:37,i:0,p:[54,46,134,133]}]},{uid:75,d:36,c:1,t:"PhidgetAccelerometer 3-Axis",s:"1059",i:126,v:[400,500],cn:[3],ch:[{uid:147,t:"3-Axis Accelerometer",c:1,i:0,p:[46,54,1]}]},{uid:76,d:37,c:13,t:"PhidgetMotorControl LV",s:"1060",i:88,v:[100,200],cn:[2,4,0,0,0,0],ch:[{uid:148,t:"DC Motor Controller",c:4,n:2,i:0,p:[54,55,40,16]},{uid:149,t:"Digital Input",c:5,n:4,i:0,p:[90]}]},{uid:77,d:38,c:2,t:"PhidgetAdvancedServo 8-Motor",s:"1061",i:58,v:[100,200],cn:[8,8],ch:[{uid:150,t:"RC Servo Motor Controller",c:22,n:8,i:0,p:[70,69,85,40,83,57,81,54,29,100,94]},{uid:151,t:"RC Servo Motor Current Sensor",c:2,n:8,i:0,p:[46,54,8]}]},{uid:78,d:38,c:2,t:"PhidgetAdvancedServo 8-Motor",s:"1061",i:58,v:[200,300],cn:[8,8],ch:[{uid:152,t:"RC Servo Motor Controller",c:22,n:8,i:0,p:[70,69,85,40,83,57,81,54,29,100,94]},{uid:153,t:"RC Servo Motor Current Sensor",c:2,n:8,i:0,p:[46,54,8]}]},{uid:79,d:38,c:2,t:"PhidgetAdvancedServo 8-Motor",s:"1061",i:58,v:[300,400],cn:[8,8],ch:[{uid:154,t:"RC Servo Motor Controller",c:22,n:8,i:0,p:[70,69,85,40,83,57,81,54,29,100,94]},{uid:155,t:"RC Servo Motor Current Sensor",c:2,n:8,i:0,p:[46,54,8]}]},{uid:80,d:124,c:2,t:"PhidgetAdvancedServo 8-Motor",s:"RCC0004",i:58,v:[400,500],cn:[8,0],ch:[{uid:156,t:"RC Servo Motor Controller",c:22,n:8,i:0,p:[70,69,85,40,83,57,81,86,54,29,100,94]}]},{uid:81,d:39,c:18,t:"PhidgetStepper Unipolar 4-Motor",s:"1062",i:122,v:[100,200],cn:[4],ch:[{uid:157,t:"Unipolar Stepper Controller",c:27,n:4,i:0,p:[83,85,40,57,49,54,29,100,91]}]},{uid:82,d:40,c:18,t:"PhidgetStepper Bipolar 1-Motor",s:"1063",i:123,v:[100,200],cn:[1,4,1],ch:[{uid:158,t:"Bipolar Stepper Controller",c:27,i:0,p:[83,85,40,51,57,49,54,29,100,91]},{uid:159,t:"Digital Input",c:5,n:4,i:0,p:[90]},{uid:160,t:"Bipolar Stepper Current Sensor",c:2,i:0,p:[46,54,8]}]},{uid:83,d:41,c:13,t:"PhidgetMotorControl HC",s:"1064",i:89,v:[100,200],cn:[2,0,0,0,0,2],ch:[{uid:161,t:"DC Motor Controller",c:4,n:2,i:0,p:[54,55,40,16]},{uid:162,t:"DC Motor Current Sensor",c:2,n:2,i:0,p:[46,54,8]}]},{uid:84,d:42,c:13,t:"PhidgetMotorControl 1-Motor",s:"1065",i:62,v:[100,200],cn:[1,2,1,3,2,1],ch:[{uid:163,t:"DC Motor Controller",c:4,i:0,p:[54,55,40,44,42,16,3]},{uid:164,t:"Digital Input",c:5,n:2,i:0,p:[90]},{uid:165,t:"Encoder Input",c:8,i:0,p:[46,54,29]},{uid:166,t:"Voltage Input",c:29,s:48,n:2,i:0,p:[79,46,54,122,101,115]},{uid:167,t:"Supply Voltage Sensor",c:29,i:2,p:[46,54,101]},{uid:168,t:"Voltage Ratio Input",c:31,s:64,n:2,i:0,p:[79,46,54,122,102,115]},{uid:169,t:"DC Motor Current Sensor",c:2,i:0,p:[46,54,8]}]},{uid:85,d:43,c:2,t:"PhidgetAdvancedServo 1-Motor",s:"1066",i:130,v:[100,200],cn:[1,1],ch:[{uid:170,t:"RC Servo Motor Controller",c:22,i:0,p:[70,69,85,40,83,57,81,54,29,100,94]},{uid:171,t:"RC Servo Motor Current Sensor",c:2,i:0,p:[46,54,8]}]},{uid:86,d:44,c:18,t:"PhidgetStepper Bipolar HC",s:"1067",i:123,v:[200,300],cn:[1],ch:[{uid:172,t:"Bipolar Stepper Controller",c:27,i:0,p:[83,85,40,51,57,49,54,29,100,91]}]},{uid:87,d:44,c:18,t:"PhidgetStepper Bipolar HC",s:"1067",i:123,v:[300,400],cn:[1],ch:[{uid:173,t:"Bipolar Stepper Controller",c:27,i:0,p:[83,85,40,51,57,49,54,29,100,91]}]},{uid:88,d:45,c:9,t:"PhidgetInterfaceKit 8/8/8",s:"1202/1203",i:125,v:[0,120],cn:[8,8,8,8],ch:[{uid:174,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[10,27,54,79,46,122,101,115]},{uid:175,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[10,27,54,79,46,122,102,115]},{uid:176,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:177,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:89,d:45,c:9,t:"PhidgetInterfaceKit 8/8/8",s:"1202/1203",i:125,v:[120,200],cn:[8,8,8,8],ch:[{uid:178,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[10,27,54,79,46,122,101,115]},{uid:179,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[10,27,54,79,46,122,102,115]},{uid:180,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:181,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:90,d:45,c:20,t:"PhidgetTextLCD 20X2",s:"1202/1203",i:125,v:[0,200],cn:[1],n:1,ch:[{uid:182,t:"Text LCD",c:11,s:81,i:0,p:[43,48,52,53,47,4,19,105]}]},{uid:91,d:45,c:9,t:"PhidgetInterfaceKit 8/8/8",s:"1202/1203",i:125,v:[200,300],cn:[8,8,8,8],ch:[{uid:183,t:"Voltage Input",c:29,s:48,n:8,i:0,p:[10,27,54,79,46,122,101,115]},{uid:184,t:"Voltage Ratio Input",c:31,s:64,n:8,i:0,p:[10,27,54,79,46,122,102,115]},{uid:185,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:186,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:92,d:45,c:20,t:"PhidgetTextLCD 20X2",s:"1202/1203",i:125,v:[200,9999],cn:[1],n:1,ch:[{uid:187,t:"Text LCD",c:11,s:81,i:0,p:[43,48,52,53,47,4,19,105]}]},{uid:93,d:46,c:20,t:"PhidgetTextLCD Adapter",s:"1204",i:61,v:[0,9999],cn:[2],ch:[{uid:188,t:"Text LCD",c:11,s:81,n:2,i:0,p:[43,48,52,53,78,47,4,19,24,105]}]},{uid:94,d:47,c:20,t:"PhidgetTextLCD 20X2",s:"1215/1216/1217/1218",i:82,v:[0,9999],cn:[1],ch:[{uid:189,t:"Text LCD",c:11,s:81,i:0,p:[43,48,52,53,47,4,19,105]}]},{uid:95,d:48,c:20,t:"PhidgetTextLCD 20X2 with InterfaceKit 0/8/8",s:"1219/1220/1221/1222",i:83,v:[0,9999],cn:[1,8,8],ch:[{uid:190,t:"Text LCD",c:11,s:81,i:0,p:[43,48,52,53,47,4,19,105]},{uid:191,t:"Digital Input",c:5,n:8,i:0,p:[90]},{uid:192,t:"Digital Output",c:6,n:8,i:0,p:[82,55]}]},{uid:172,d:146,c:1,t:"PhidgetAccelerometer",s:"MOT0100",i:146,v:[100,200],cn:[3],ch:[{uid:352,t:"3-Axis Accelerometer",c:1,i:0,p:[54,46,1]}]},{uid:178,d:140,c:17,t:"PhidgetSpatial Precision 3/3/3",s:"MOT0109",i:140,v:[100,200],cn:[3,3,3,1,1],ch:[{uid:371,t:"3-Axis Accelerometer",c:1,i:0,p:[10,179,54,46,145,170,1]},{uid:372,t:"3-Axis Gyroscope",c:12,i:0,p:[10,179,54,145,170,106,2]},{uid:373,t:"3-Axis Magnetometer",c:18,i:0,p:[10,179,54,46,170,50,37,35,18]},{uid:374,t:"Spatial",c:26,s:112,i:0,p:[10,179,54,145,149,151,170,106,50,37,35,174,150,89,148]},{uid:375,t:"Temperature Sensor",c:28,i:0,p:[10,54,46,95]}]},{uid:179,d:141,c:17,t:"PhidgetSpatial Precision 3/3/3",s:"MOT0110",i:141,v:[100,200],cn:[3,3,3,1,1],ch:[{uid:376,t:"3-Axis Accelerometer",c:1,i:0,p:[10,179,54,46,170,1]},{uid:377,t:"3-Axis Gyroscope",c:12,i:0,p:[10,179,54,170,106,2]},{uid:378,t:"3-Axis Magnetometer",c:18,i:0,p:[10,179,54,46,170,50,37,35,18]},{uid:379,t:"Spatial",c:26,s:112,i:0,p:[10,179,54,149,170,106,50,37,35,174,150,89,148]},{uid:380,t:"Temperature Sensor",c:28,i:0,p:[10,54,46,95]}]},{uid:223,d:64,c:8,t:"6-Port USB VINT Hub Phidget",s:"HUB0000",i:63,v:[100,200],cn:[6,4],ch:[{uid:446,t:"VINT Hub",c:13,i:0,p:[60,72,73,107]}]},{uid:225,d:64,c:8,t:"6-Port USB VINT Hub Phidget",s:"HUB0000",i:63,v:[300,400],cn:[6,4],ch:[{uid:447,t:"VINT Hub",c:13,i:0,p:[60,72,73,107]}]},{uid:226,d:64,c:8,t:"6-Port USB VINT Hub Phidget",s:"HUB0000",i:63,v:[400,500],cn:[6,4],ch:[{uid:448,t:"VINT Hub",c:13,i:0,p:[60,72,73,178]}]},{uid:227,d:142,c:8,t:"6-Port USB VINT Hub Phidget",s:"HUB0001",i:67,v:[100,115],cn:[6,4],ch:[{uid:449,t:"VINT Hub",c:13,i:0,p:[60,72,73,107]}]},{uid:228,d:142,c:8,t:"6-Port USB VINT Hub Phidget",s:"HUB0001",i:67,v:[115,200],cn:[6,4],ch:[{uid:450,t:"VINT Hub",c:13,i:0,p:[60,72,73,183,107]}]},{uid:229,d:147,c:8,t:"6-Port USB VINT Hub Phidget",s:"HUB0002",i:70,v:[100,200],cn:[6,4],ch:[{uid:451,t:"VINT Hub",c:13,i:0,p:[60,72,73,183,178]}]},{uid:230,d:148,c:8,t:"1-Port USB VINT Hub Phidget",s:"HUB0007",i:71,v:[100,200],cn:[1,4],ch:[{uid:452,t:"VINT Hub",c:13,i:0,p:[60,72,73,183,178]}]},{uid:236,d:123,c:8,t:"6-Port Network VINT Hub Phidget",s:"HUB5000",i:66,v:[100,200],cn:[6,4],ch:[{uid:458,t:"VINT Hub",c:13,i:0,p:[60,72,73,107]}]},{uid:237,d:123,c:8,t:"6-Port Network VINT Hub Phidget",s:"HUB5000",i:66,v:[200,300],cn:[6,4],ch:[{uid:459,t:"VINT Hub",c:13,i:0,p:[60,72,73,107]}]},{uid:238,d:101,c:23,t:"USB Firmware Upgrade (NXP M3)",s:"FIRMWARE_UPGRADE_M3",i:152,v:[0,9999],cn:[0,0,0],ch:[{uid:460,t:"Firmware Upgrade",c:32,i:0,p:[112,113]}]},{uid:239,d:101,c:23,t:"USB Firmware Upgrade (STM32)",s:"FIRMWARE_UPGRADE_STM32_USB",i:156,v:[100,200],cn:[0,0,0],ch:[{uid:461,t:"Firmware Upgrade",c:32,i:0,p:[112,113]}]},{uid:240,d:101,c:23,t:"USB Firmware Upgrade (STM32G)",s:"FIRMWARE_UPGRADE_STM32G_USB",i:156,v:[200,300],cn:[0,0,0],ch:[{uid:462,t:"Firmware Upgrade",c:32,i:0,p:[112,113]}]},{uid:241,d:101,c:23,t:"USB Firmware Upgrade (STM32L)",s:"FIRMWARE_UPGRADE_STM32L_USB",i:156,v:[300,400],cn:[0,0,0],ch:[{uid:463,t:"Firmware Upgrade",c:32,i:0,p:[112,113]}]},{uid:253,d:125,c:22,t:"Unsupported USB Phidget",s:" ",i:175,v:[0,9999],cn:[0,0,0],ch:[{uid:482,t:"Unsupported USB Channel",c:33,i:0,p:[39,152,153,154,155,28]}]}],MESH:[],SPI:[{uid:233,d:67,c:8,t:"6-Port PhidgetSBC VINT Hub Phidget",s:"HUB0004",i:1,v:[100,200],cn:[6,4],ch:[{uid:455,t:"VINT Hub",c:13,i:0,p:[60,72,73,107]}]},{uid:234,d:67,c:8,t:"6-Port PhidgetSBC VINT Hub Phidget",s:"HUB0004",i:1,v:[200,300],cn:[6,4],ch:[{uid:456,t:"VINT Hub",c:13,i:0,p:[60,72,73,107]}]},{uid:247,d:104,c:23,t:"SPI Firmware Upgrade (M3)",s:"FIRMWARE_UPGRADE_M3",i:2,v:[0,9999],cn:[0],ch:[{uid:469,t:"Firmware Upgrade",c:32,i:0,p:[112,113]}]},{uid:255,d:125,c:22,t:"Unsupported SPI Phidget",s:" ",i:65535,v:[0,9999],cn:[0,0,0],ch:[{uid:484,t:"Unsupported SPI Channel",c:33,i:0,p:[39,152,153,154,155,28]}]}],LIGHTNING:[],VIRTUAL:[{uid:252,d:111,c:24,t:"Dictionary",s:"Dictionary",i:0,v:[100,200],ch:[{uid:481,t:"Dictionary",c:36,i:0,p:[123,125,130,127,131,129,132,124,126,128]}]}]};function findPhidgetUniqueDevice(e){var t;const r=PhidgetDevices[e.type];for(const i of r)if(!(i.v[0]>e.version||i.v[1]<=e.version)){if("VINT"===e.type){if(i.i!==e.vintID)continue}else{if(i.i!==e.productID)continue;if("USB"===e.type&&(null!==(t=i.n)&&void 0!==t?t:0)!==e.interfaceNum)continue}return i}throw new PhidgetError(ErrorCode.UNEXPECTED,"Couldn't find device in device list!!")}class Device{constructor(e,t){this.conn=e,this.devDef=t.devDef,this.version=t.version,this.label=t.label,this.serialNumber=t.serialNumber,this.fwstr=t.fwstr,this.id=t.id,this.parent=t.parent,"VINT"===t.type&&(this.vintDeviceProps=t.vintDeviceProps),"HUB"===t.type&&(this.hubPortProps=t.hubPortProps)}get parentId(){var e,t;return null!==(t=null===(e=this.parent)||void 0===e?void 0:e.id)&&void 0!==t?t:"0"}get vintID(){return this.devDef.i}get sku(){return this.devDef.s}get class(){return this.devDef.c}get hubPort(){var e,t;return null!==(t=null===(e=this.vintDeviceProps)||void 0===e?void 0:e.hubPort)&&void 0!==t?t:0}get isHubPort(){var e,t;return null!==(t=null===(e=this.vintDeviceProps)||void 0===e?void 0:e.isHubPort)&&void 0!==t&&t}get index(){var e,t;return null!==(t=null===(e=this.vintDeviceProps)||void 0===e?void 0:e.uniqueIndex)&&void 0!==t?t:0}toString(){return this.class===DeviceClass.VINT?this.sku+" ("+this.name+") v"+this.version+" -> "+this.parent.sku+" Port:"+this.hubPort+" Serial#:"+this.serialNumber+(this.conn.u?" NET":" USB"):this.sku+" ("+this.name+") v"+this.version+" Serial#:"+this.serialNumber+(this.conn.u?" NET":" USB")}}class NetworkDevice extends Device{constructor(e,t){super(e,t),this.deviceID=t.deviceID,this.name=t.name}findPhidgetUniqueChannel(e){var t,r;let i=0;for(const a of this.devDef.ch){if(e<i+(null!==(t=a.n)&&void 0!==t?t:1))return a;i+=null!==(r=a.n)&&void 0!==r?r:1}throw new PhidgetError(ErrorCode.UNEXPECTED,"Couldn't find channel in channel list!!")}}const NET_MAJOR=2,NET_MINOR=3,NET_IDENT="phidgetclient";class NetworkConnectionBase extends PhidgetConnection{constructor(e,t,r){let i={},a="",s="",n=0;null!=e&&"object"==typeof e?i=e:null!=e&&"string"==typeof e?(a=e,null!=t&&"object"==typeof t&&(i=t)):null!=e&&"number"==typeof e&&(n=e,null!=t&&"string"==typeof t&&(s=t,null!=r&&"object"==typeof r&&(i=r))),i.name||(i.name=a),super(i),this._=1,this.ve=0,this.be=8e3,this.me=10,this.ke=new Map,this.Te=!1,this.Se=a,i.hostname&&""===s&&"string"==typeof i.hostname&&(s=i.hostname),""===s&&(s="localhost"),this.De=s,i.port&&0===n&&("number"==typeof i.port&&(n=i.port),"string"==typeof i.port&&(n=Number(i.port))),this.Ie=n,i.onConnect&&"function"==typeof i.onConnect?this.onConnect=i.onConnect:this.onConnect=null,i.onDisconnect&&"function"==typeof i.onDisconnect?this.onDisconnect=i.onDisconnect:this.onDisconnect=null,i.onAuthenticationNeeded&&"function"==typeof i.onAuthenticationNeeded?this.onAuthenticationNeeded=i.onAuthenticationNeeded:this.onAuthenticationNeeded=null,i.passwd?this.Re=i.passwd:this.Re="",this.Ae=setInterval(this.Ue.bind(this),2e3)}delete(){null!=this.Ae&&(clearInterval(this.Ae),delete this.Ae),super.delete()}setKeepAlive(e){if("number"!=typeof e||isNaN(e))throw"invalid keep alive:"+e;this.be=e}close(){logdebug("Network Connection close() called"),this.Te=!1,null!=this._e&&clearTimeout(this._e),delete this._e,this.$(),this.Ve()}Oe(e,t){let r;if(void 0!==e){const t=e.replace(/("[OI]"|"phid"|"chid"|"parent"):([0-9]+)/g,'$1:"$2"'),i=t.replace(/([:[,])[-+]?nan(\([\w]*\))?/gi,'$1"**NAN**"');r=t!==i?JSON.parse(i,((e,t)=>{if("v"==e){if("**NAN**"===t)return NaN;if(Array.isArray(t))return t.map((e=>"**NAN**"===e?NaN:e))}return t})):JSON.parse(i)}try{this.connected?this.Be(r,t):this.$e(r)}catch(e){if(this.onError&&e instanceof PhidgetError){try{this.onError(e.errorCode,e.message)}catch(e){logEventException(e)}loginfo("Error handling message from server",e)}else logerr("Error handling message from server",e)}}Ue(){for(const e of this.ke.entries())e[1].generation==this.ve?tm()-e[1].time>5e3&&(e[1].onTimeout(),this.ke.delete(e[0])):(e[1].onError(ErrorCode.CONNECTION_RESET,"Connection Reset"),this.ke.delete(e[0]))}Me(){return this.me>=65535&&(this.me=10),this.me++,this.me}Ce(e,t,r,i,a,s){return 0===t&&(t=this.Me()),new promise(((n,o)=>{this.ke.set(t,{generation:this.ve,time:tm(),onReply:function(e){"E"in e?e.E!==ErrorCode.SUCCESS?(null!=e.R&&o(new PhidgetError(e.E,e.R)),o(new PhidgetError(e.E))):(null!=e.R&&n(e.R),n()):n(e)},onTimeout:function(){o(new PhidgetError(ErrorCode.TIMEOUT))},onError:function(e,t){o(new PhidgetError(e,t))}});const h=JSON.stringify(s).replace(/("[OI]"|"phid"|"channel"):"([0-9]+)"/g,"$1:$2"),c=new Request(h.length,e,t,r,i,a);this.xe(c,h)}))}Ne(e,t,r,i){const a=this.Me();let s="";null!=i&&(s=JSON.stringify(i));const n=new Request(s.length,2,a,e,t,r);this.xe(n,s)}Le(){logdebug("Maintaining network connection..");const e=()=>{!this._e&&this.Te&&(logdebug(".. Check again in 4 seconds."),this._e=setTimeout(this.Le.bind(this),4e3))};this._e&&delete this._e,this.connected?(logdebug(".. already connected .."),e()):(logdebug(".. trying to connect .."),this.connect().then((()=>{logdebug(".. connected!"),e()})).catch((t=>{if(this.onError&&t instanceof PhidgetError)try{this.onError(t.errorCode,t.message)}catch(t){logEventException(t)}logerr("Error connecting",t),logdebug(".. failed to connect! .."),e()})))}Fe(){this.$(),this.Ve()}$e(e){if(null==this.Ge)throw new Error("packet recieved while not connected and authdata is not defined");this.Ge(e)}Be(e,t){const r=this.ke.get(t.repseq);if(r&&(this.ke.delete(t.repseq),r.onReply(e)),2&t.flgs){if(void 0===r)throw new PhidgetError(ErrorCode.UNEXPECTED,"No handler registered for reply: "+t)}else switch(t.type){case 20:this.He(t);break;case 30:this.je(t,e);break;default:throw new PhidgetError(ErrorCode.INVALID,"Unknown request type:"+t.type)}}He(e){if(41===e.stype)return logdebug("Got a keepalive message"),null!=this.Ke&&(logdebug("Cleaning previous keepalive timeout"),clearTimeout(this.Ke)),this.Ke=setTimeout((()=>{if(logdebug("Keepalive timeout passed"),delete this.Ke,this.connected){if(this.onError)try{this.onError(ErrorCode.KEEP_ALIVE,"KeepAlive timeout. Closing connection to server.")}catch(e){logEventException(e)}logerr("KeepAlive timeout. Closing connection to server."),this.Fe()}}),this.be),void this.Ne(e.reqseq,20,41);throw new PhidgetError(ErrorCode.UNEXPECTED,"Unknown command subrequest:"+e.stype)}je(e,t){switch(e.stype){case 50:return void this.We(t);case 55:return void this.qe(t);case 70:return void this.ze(e,t);case 80:return void this.Ye(t);default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unknown device subrequest:"+e.stype)}}We(e){var t,r,i,a,s;const n=findPhidgetUniqueDevice(e);let o;const h={version:e.version,label:e.label,serialNumber:e.serialNumber,devDef:n,fwstr:null!==(t=e.fwstr)&&void 0!==t?t:n.s,id:e.phid,parent:null!==(r=this.B(e.parent))&&void 0!==r?r:void 0,deviceID:e.deviceID,name:e.name};if("VINT"===e.type)o=Object.assign(Object.assign({},h),{type:"VINT",vintDeviceProps:{vintProto:null!==(i=e.vintProto)&&void 0!==i?i:1,suppSetSpeed:!!e.suppSetSpeed&&!!e.suppSetSpeed,suppAutoSetSpeed:!!e.suppSetSpeed&&!!e.suppSetSpeed,maxSpeed:null!==(a=e.maxSpeed)&&void 0!==a?a:4294967295,commSpeed:null!==(s=e.commSpeed)&&void 0!==s?s:4294967295,hubPort:e.hubPort,isHubPort:!!e.isHubPort,uniqueIndex:e.index}});else if(n.c===DeviceClass.HUB){let t;t=e.hubPortsInfo?e.hubPortsInfo.portProto.length:n.cn?n.cn[0]:6;const r=[];for(let i=0;i<t;i++)e.hubPortsInfo?r.push({portProto:e.hubPortsInfo.portProto[i],portSuppSetSpeed:!!e.hubPortsInfo.portSuppSetSpeed[i],portSuppAutoSetSpeed:!!e.hubPortsInfo.portSuppSetSpeed[i],portMaxSpeed:e.hubPortsInfo.portMaxSpeed[i]}):r.push({portProto:1,portSuppSetSpeed:!1,portSuppAutoSetSpeed:!1,portMaxSpeed:1e5});o=Object.assign(Object.assign({},h),{type:"HUB",hubPortProps:r})}else o=Object.assign(Object.assign({},h),{type:"OTHER"});const c=new NetworkDevice(this,o);this.C(c)}qe(e){const t=this.B(e.phid);t&&this.m(t)}Ye(e){const t=this.U.get(e.parent);if(!t)throw new PhidgetError(ErrorCode.UNEXPECTED,"missing channel parent");const r=t.findPhidgetUniqueChannel(e.uniqueIndex),i={id:e.chid,chDef:r,uniqueIndex:e.uniqueIndex,index:e.index,cpversion:e.version,name:e.name,class:e.class},a=new NetworkChannel(this,t,i);this.k(a)}ze(e,t){const r=new BridgePacket(this,t);let i;try{r.deliver()}catch(e){i=e instanceof PhidgetError?{E:e.errorCode,R:e.message}:{E:ErrorCode.UNEXPECTED,R:""+e}}r.isEvent()||this.Ne(e.reqseq,e.type,e.stype,i)}Xe(){return new promise(((e,t)=>{const r={type:this.Qe,pmajor:2,pminor:3},i=JSON.stringify(r),a=new Request(i.length,0,0,0,10,10);function s(e){if(e.result!==ErrorCode.SUCCESS)return void t(new PhidgetError(e.result,"authentication failed"));if(this.Je!=e.nonceC)return void t(new PhidgetError(ErrorCode.UNEXPECTED,"Authentication Failure: nonce do not match ("+this.Je+") vs ("+e.nonceC+")"));const r=NET_IDENT+this.Re+this.Je+e.nonceS+e.salt,i=this.Ze(r),a={nonceC:this.Je,nonceS:e.nonceS,proof:i},s=JSON.stringify(a),o=new Request(s.length,0,0,0,10,32);try{this.xe(o,s)}catch(e){return void t(e)}this.Ge=n}function n(r){if(delete this.Ge,r.E==ErrorCode.SUCCESS){if(this.connected=!0,this.onConnect)try{this.onConnect()}catch(e){logEventException(e)}null!=this._e&&clearTimeout(this._e),delete this._e,this.Le(),e()}else{if(this.onAuthenticationNeeded){let r;try{r=this.onAuthenticationNeeded()}catch(e){logEventException(e)}if(null!=r&&"string"==typeof r)return this.Re=r,void setTimeout((()=>{this.connect().then((()=>e())).catch((e=>t(e)))}),10)}else logwarn("A password is required for this server. Handle the onAuthenticationNeeded event to return a password.");t(new PhidgetError(r.E,"authentication failed: server rejected proof"))}}this.xe(a,i),this.Ge=function(e){if(e.result!==ErrorCode.SUCCESS)return void t(new PhidgetError(e.result,"server rejected handshake"));this.Je=this.et(16);const r={ident:NET_IDENT,nonceC:this.Je},i=JSON.stringify(r),a=new Request(i.length,0,0,0,10,30);try{this.xe(a,i)}catch(e){return void t(e)}this.Ge=s}}))}}function DecodeUTF8(e){let t="",r=0;for(;r<e.length;){let i=e[r++];if(i>127){if(i>191&&i<224){if(r>=e.length)throw"UTF-8 decode: incomplete 2-byte sequence";i=(31&i)<<6|63&e[r]}else if(i>223&&i<240){if(r+1>=e.length)throw"UTF-8 decode: incomplete 3-byte sequence";i=(15&i)<<12|(63&e[r])<<6|63&e[++r]}else{if(!(i>239&&i<248))throw"UTF-8 decode: unknown multibyte start 0x"+i.toString(16)+" at index "+(r-1);if(r+2>=e.length)throw"UTF-8 decode: incomplete 4-byte sequence";i=(7&i)<<18|(63&e[r])<<12|(63&e[++r])<<6|63&e[++r]}++r}if(i<=65535)t+=String.fromCharCode(i);else{if(!(i<=1114111))throw"UTF-8 decode: code point 0x"+i.toString(16)+" exceeds UTF-16 reach";i-=65536,t+=String.fromCharCode(i>>10|55296),t+=String.fromCharCode(1023&i|56320)}}return t}function EncodeUTF8(e){let t=0;const r=new Uint8Array(4*e.length);for(let i=0;i!=e.length;i++){let a=e.charCodeAt(i);if(a<128)r[t++]=a;else{if(a<2048)r[t++]=a>>6|192;else{if(a>55295&&a<56320){if(++i==e.length)throw"UTF-8 encode: incomplete surrogate pair";const s=e.charCodeAt(i);if(s<56320||s>57343)throw"UTF-8 encode: second char code 0x"+s.toString(16)+" at index "+i+" in surrogate pair out of range";a=65536+((1023&a)<<10)+(1023&s),r[t++]=a>>18|240,r[t++]=a>>12&63|128}else r[t++]=a>>12|224;r[t++]=a>>6&63|128}r[t++]=63&a|128}}return r.subarray(0,t)}class NetworkConnection extends NetworkConnectionBase{constructor(e,t,r){super(e,t,r),0===this.Ie&&(this.Ie=8989),""===this.Se&&(this.Se="ws://"+this.De+":"+this.Ie+"/phidgets"),this.Qe="www"}connect(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return new promise(((t,r)=>{if(this.Te=!0,!0===this.connected)return void t();if(e)return this.tt=t,void this.Le();if(this.rt){try{this.rt.close()}catch(e){}delete this.rt}let i=!1;try{this.rt=new WebSocket(this.Se),this.rt.binaryType="arraybuffer",this.rt.onopen=()=>{this.Xe().then((()=>{this.tt&&(this.tt(),delete this.tt),void 0!==this.it&&(clearTimeout(this.it),delete this.it),i=!0,t()})).catch((e=>{void 0!==this.it&&(clearTimeout(this.it),delete this.it),i||(i=!0,r(e))}))},this.rt.onclose=()=>{this.Fe(),i||(i=!0,r(new PhidgetError(ErrorCode.CONNECTION_RESET,"Socket closed")))},this.rt.onmessage=e=>{try{const t=new Uint8Array(e.data),r=new Request(t);let i;if(r.len>0){i=DecodeUTF8(new Uint8Array(e.data,r.hdrlen,r.len))}this.Oe(i,r)}catch(e){const t="Error handling data from server - resetting connection",a=new PhidgetError(ErrorCode.UNEXPECTED,t,e);if(this.Fe(),i)if(this.onError){try{this.onError(a.errorCode,a.message)}catch(e){logEventException(e)}loginfo(a.message)}else logerr(t,e);else i=!0,r(a)}},this.rt.onerror=()=>{const e="websocket error - check that server is available";if(this.Fe(),!i)return i=!0,void r(new PhidgetError(ErrorCode.CONNECTION_REFUSED,e));if(this.onError){try{this.onError(ErrorCode.CONNECTION_REFUSED,e)}catch(e){logEventException(e)}loginfo(e)}else logerr(e)},this.it=setTimeout((()=>{delete this.it,this.Fe(),i||(i=!0,r(new PhidgetError(ErrorCode.TIMEOUT,"Connection Timed Out")))}),this.be)}catch(e){void 0!==this.it&&(clearTimeout(this.it),delete this.it),i||(i=!0,r(new PhidgetError(ErrorCode.UNEXPECTED,"Error in connect",e)))}}))}Ve(){if(!0===this.connected&&this.onDisconnect)try{this.onDisconnect()}catch(e){logEventException(e)}if(this.connected=!1,void 0!==this.it&&(clearTimeout(this.it),delete this.it),null!=this.rt){try{this.rt.onopen=null,this.rt.onclose=null,this.rt.onmessage=null,this.rt.onerror=null,this.rt.close()}catch(e){}delete this.rt}this.ve++}xe(e,t){try{if(!this.rt||this.rt.readyState!=WebSocket.OPEN)throw new PhidgetError(ErrorCode.UNEXPECTED,"invalid websocket state");if(t.length>0){const r=EncodeUTF8(t);e.len=r.length,this.rt.send(e.buffer),this.rt.send(r)}else this.rt.send(e.buffer)}catch(e){let t;throw t="string"==typeof e?e:e instanceof Error?e.message:"Error in connect",new PhidgetError(ErrorCode.UNEXPECTED,t)}}Ze(e){const t=sha256hash(e);let r="";for(let e=0;e<t.length;e+=2){const i=parseInt(t.substring(e,e+2),16);r+=String.fromCharCode(i)}return btoa(r)}et(e){const t=new Uint8Array(e);return crypto.getRandomValues(t),btoa(String.fromCharCode(...t)).substring(e)}}const PHIDGET_MAXCHANNELS=64,MAX_OUT_PACKET_SIZE=128;class LocalDevice extends Device{constructor(e,t){super(e,t),this.deviceID=this.devDef.d,this.name=this.devDef.t,this.channels={}}getChannel(e){return null!=this.channels[e]&&this.channels[e].isopen?this.channels[e]:null}}function GetBigInt64(e,t){if("getBigInt64"in DataView.prototype)return Number(e.getBigInt64(t));{const r=(128&e.getUint8(t))>0;let i=0,a=!0;for(let s=0;s<2;s++){let n=e.getUint32(t+(4-4*s));r&&(a?0!==n&&(n=4294967295&~(n-1),a=!1):n=4294967295&~n),i+=n*2**(8*s)}return r?-i:i}}function SetBigInt64(e,t,r){const i=r>>2;e.setInt32(t,i>>30),e.setUint32(t+4,4294967295&r)}function StringToWordByteArray(e){const t=new Uint16Array(e.length);let r=0;for(r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t}function WordByteArrayToString(e){return String.fromCharCode(...e)}function RoundDouble(e,t){return Math.round(e*Math.pow(10,t))/Math.pow(10,t)}function UpperPowerOfTwo(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,++e}const PhidgetSleep=e=>new promise((t=>setTimeout(t,e))),MAX_PACKET_IDS=128,PACKETTRACKER_INUSE=1,PACKETTRACKER_SIGNALLED=2,PACKETTRACKER_SENT=4,PACKETTRACKER_ABANDONNED=8;class PacketTrackers{constructor(){this.packetTracker=new Map,this.counter=[]}setPacketsReturnCode(e,t){for(const i of values(r=this.packetTracker).call(r)){var r;if(!(1&i.state))return;if(!(4&i.state))return;if(i.childIndex!==e)return;8&i.state?i.state=0:(i.returnCode=t,i.state|=2,i.signal&&i.signal())}}async getPacketTrackerWait(e,t,r,i,a){const s=Date.now()+a;for(;;){const a=this.getPacketTracker(e,t,r,i);if(null!==a)return a;if(Date.now()>s)throw new PhidgetError(ErrorCode.TIMEOUT);await PhidgetSleep(2),logverbose("getPacketTrackerWait tm after sleep: "+Date.now())}}getPacketTracker(e,t,r,i){let a,s;if(null===e)throw new PhidgetError(ErrorCode.NOT_ATTACHED);if(null===e.packetTrackers)throw new PhidgetError(ErrorCode.UNEXPECTED);if(t<0)throw new PhidgetError(ErrorCode.UNEXPECTED);if(r>=128)throw new PhidgetError(ErrorCode.UNEXPECTED);for(null==e.packetTrackers.counter[i]&&(e.packetTrackers.counter[i]=0),s=t;s<=r;s++){if(a=s+e.packetTrackers.counter[i],a>r&&(a-=r-t),a<t||a>r)throw new PhidgetError(ErrorCode.INVALID,"Calculated an invalid packetTracker");let n=e.packetTrackers.packetTracker.get(a);if(null==n&&(n=new PacketTracker,e.packetTrackers.packetTracker.set(a,n)),!(1&n.state))return n.state|=1,n.returnCode=ErrorCode.UNKNOWN_VALUE,n.len=0,n.childIndex=i,e.packetTrackers.counter[i]++,e.packetTrackers.counter[i]>r-t&&(e.packetTrackers.counter[i]=0),{pt:n,id:a}}return null}async waitForPendingPackets(e){let t;const r=Date.now()+10;do{t=0;for(const r of values(i=this.packetTracker).call(i)){var i;if(r.childIndex!==e)return;if(!(1&r.state))return;if(!(2&r.state))return;t++}if(t){if(Date.now()>r)break;await PhidgetSleep(10)}}while(t)}}class PacketTracker{constructor(){this.state=0,this.returnCode=ErrorCode.SUCCESS,this.childIndex=0,this.len=0}setPacketLength(e){this.len=e}setPacketReturnCode(e){if(0==(1&this.state)||2&this.state)throw new PhidgetError(ErrorCode.INVALID);this.returnCode=e,this.state|=2,this.signal&&this.signal()}get signalled(){return!!(2&this.state)}set sent(e){e?this.state|=4:this.state&=-5}async waitForPendingPacket(e){if(!(1&this.state))throw new PhidgetError(ErrorCode.UNEXPECTED,"PacketTracker not INUSE");if(2&this.state)return this.returnCode;if(0===e)throw new PhidgetError(ErrorCode.TIMEOUT);return logverbose("waiting for PendingPacket: "+e+"ms..."),await new promise(((t,r)=>{const i=setTimeout((()=>{logwarn("PacketTracker "+this.childIndex+" waitForPendingPacket timeout ("+e+"ms)."),delete this.signal,r(new PhidgetError(ErrorCode.TIMEOUT))}),e);this.signal=()=>{clearTimeout(i),delete this.signal,t()}})),logverbose("no longer waiting for PendingPacket"),this.returnCode}releasePacketTracker(e){e||5!=(7&this.state)?this.state=0:(logverbose("Refusing to release sent but non-signalled packet tracker, Port "+this.childIndex),this.state|=8)}}var classof=classofRaw$1,isArray$1=Array.isArray||function(e){return"Array"==classof(e)},$$2=_export,uncurryThis$1=functionUncurryThis,isArray=isArray$1,un$Reverse=uncurryThis$1([].reverse),test=[1,2];$$2({target:"Array",proto:!0,forced:String(test)===String(test.reverse())},{reverse:function(){return isArray(this)&&(this.length=this.length),un$Reverse(this)}});var entryVirtual$2=entryVirtual$4,reverse$3=entryVirtual$2("Array").reverse,isPrototypeOf$2=objectIsPrototypeOf,method$2=reverse$3,ArrayPrototype$1=Array.prototype,reverse$2=function(e){var t=e.reverse;return e===ArrayPrototype$1||isPrototypeOf$2(ArrayPrototype$1,e)&&t===ArrayPrototype$1.reverse?method$2:t},parent$2=reverse$2,reverse$1=parent$2,reverse=reverse$1;function supportedEncoderIOMode(e,t){if(t<EncoderIOMode.PUSH_PULL||t>EncoderIOMode.OPEN_COLLECTOR_10K)return!1;switch(t){case EncoderIOMode.PUSH_PULL:case EncoderIOMode.LINE_DRIVER_2K2:case EncoderIOMode.LINE_DRIVER_10K:case EncoderIOMode.OPEN_COLLECTOR_2K2:case EncoderIOMode.OPEN_COLLECTOR_10K:switch(e.chDef.uid){case 250:case 255:case 261:case 259:case 265:case 333:case 144:return!0;default:return!1}default:return!0}}function supportedPowerSupply(e,t){if(t<PowerSupply.OFF||t>PowerSupply.VOLTS_24)return!1;switch(t){case PowerSupply.OFF:case PowerSupply.VOLTS_12:case PowerSupply.VOLTS_24:switch(e.chDef.uid){case 240:case 239:case 241:case 238:case 244:case 243:case 245:case 242:return!0;default:return!1}default:return!0}}function supportedRTDWireSetup(e,t){if(t<RTDWireSetup.WIRES_2||t>RTDWireSetup.WIRES_4)return!1;switch(t){case RTDWireSetup.WIRES_2:case RTDWireSetup.WIRES_3:case RTDWireSetup.WIRES_4:switch(e.chDef.uid){case 433:case 432:case 435:case 434:case 436:case 437:return!0;default:return!1}default:return!0}}function supportedInputMode(e,t){if(t<InputMode.NPN||t>InputMode.PNP)return!1;switch(t){case InputMode.NPN:case InputMode.PNP:switch(e.chDef.uid){case 240:case 241:case 244:case 245:return!0;default:return!1}default:return!0}}function supportedFanMode(e,t){if(t<FanMode.OFF||t>FanMode.AUTO)return!1;switch(t){case FanMode.OFF:case FanMode.ON:case FanMode.AUTO:switch(e.chDef.uid){case 400:case 403:case 249:case 254:case 260:case 259:case 265:return!0;default:return!1}default:return!0}}function supportedSpatialPrecision(e,t){return!(t<SpatialPrecision.HYBRID||t>SpatialPrecision.LOW)}function supportedBridgeGain(e,t){if(t<BridgeGain.GAIN_1X||t>BridgeGain.GAIN_128X)return!1;switch(t){case BridgeGain.GAIN_1X:case BridgeGain.GAIN_64X:case BridgeGain.GAIN_128X:switch(e.chDef.uid){case 97:case 98:case 246:case 99:case 247:return!0;default:return!1}case BridgeGain.GAIN_2X:switch(e.chDef.uid){case 246:case 247:return!0;default:return!1}case BridgeGain.GAIN_4X:return e.chDef.uid,!1;case BridgeGain.GAIN_8X:case BridgeGain.GAIN_16X:case BridgeGain.GAIN_32X:switch(e.chDef.uid){case 97:case 98:case 99:return!0;default:return!1}default:return!0}}function supportedVoltageRatioSensorType(e,t){if(t<VoltageRatioSensorType.VOLTAGE_RATIO||t>VoltageRatioSensorType.PN_3522)return!1;switch(t){case VoltageRatioSensorType.PN_1101_SHARP2D120X:case VoltageRatioSensorType.PN_1101_SHARP2Y0A21:case VoltageRatioSensorType.PN_1101_SHARP2Y0A02:case VoltageRatioSensorType.PN_1102:case VoltageRatioSensorType.PN_1103:case VoltageRatioSensorType.PN_1104:case VoltageRatioSensorType.PN_1105:case VoltageRatioSensorType.PN_1106:case VoltageRatioSensorType.PN_1107:case VoltageRatioSensorType.PN_1108:case VoltageRatioSensorType.PN_1109:case VoltageRatioSensorType.PN_1110:case VoltageRatioSensorType.PN_1111:case VoltageRatioSensorType.PN_1112:case VoltageRatioSensorType.PN_1113:case VoltageRatioSensorType.PN_1115:case VoltageRatioSensorType.PN_1116:case VoltageRatioSensorType.PN_1118_AC:case VoltageRatioSensorType.PN_1118_DC:case VoltageRatioSensorType.PN_1119_AC:case VoltageRatioSensorType.PN_1119_DC:case VoltageRatioSensorType.PN_1120:case VoltageRatioSensorType.PN_1121:case VoltageRatioSensorType.PN_1122_AC:case VoltageRatioSensorType.PN_1122_DC:case VoltageRatioSensorType.PN_1124:case VoltageRatioSensorType.PN_1125_HUMIDITY:case VoltageRatioSensorType.PN_1125_TEMPERATURE:case VoltageRatioSensorType.PN_1126:case VoltageRatioSensorType.PN_1128:case VoltageRatioSensorType.PN_1129:case VoltageRatioSensorType.PN_1131:case VoltageRatioSensorType.PN_1134:case VoltageRatioSensorType.PN_1136:case VoltageRatioSensorType.PN_1137:case VoltageRatioSensorType.PN_1138:case VoltageRatioSensorType.PN_1139:case VoltageRatioSensorType.PN_1140:case VoltageRatioSensorType.PN_1141:case VoltageRatioSensorType.PN_1146:case VoltageRatioSensorType.PN_3120:case VoltageRatioSensorType.PN_3121:case VoltageRatioSensorType.PN_3122:case VoltageRatioSensorType.PN_3123:case VoltageRatioSensorType.PN_3130:case VoltageRatioSensorType.PN_3520:case VoltageRatioSensorType.PN_3521:case VoltageRatioSensorType.PN_3522:switch(e.chDef.uid){case 1:case 15:case 25:case 29:case 42:case 46:case 168:case 175:case 179:case 184:case 199:case 200:case 221:case 223:case 251:case 256:return!0;default:return!1}default:return!0}}function supportedLEDForwardVoltage(e,t){if(t<LEDForwardVoltage.VOLTS_1_7||t>LEDForwardVoltage.VOLTS_5_6)return!1;switch(t){case LEDForwardVoltage.VOLTS_1_7:case LEDForwardVoltage.VOLTS_2_75:case LEDForwardVoltage.VOLTS_3_9:case LEDForwardVoltage.VOLTS_5_0:switch(e.chDef.uid){case 74:case 75:return!0;default:return!1}case LEDForwardVoltage.VOLTS_3_2:switch(e.chDef.uid){case 348:case 73:return!0;default:return!1}case LEDForwardVoltage.VOLTS_4_0:case LEDForwardVoltage.VOLTS_4_8:case LEDForwardVoltage.VOLTS_5_6:return 348===e.chDef.uid;default:return!0}}function supportedRCServoVoltage(e,t){if(t<RCServoVoltage.VOLTS_5_0||t>RCServoVoltage.VOLTS_7_4)return!1;switch(t){case RCServoVoltage.VOLTS_6_0:case RCServoVoltage.VOLTS_7_4:switch(e.chDef.uid){case 387:case 388:case 389:case 156:return!0;default:return!1}default:return!0}}function supportedVoltageOutputRange(e,t){if(t<VoltageOutputRange.VOLTS_10||t>VoltageOutputRange.VOLTS_5)return!1;switch(t){case VoltageOutputRange.VOLTS_10:switch(e.chDef.uid){case 12:case 227:case 228:case 229:case 230:return!0;default:return!1}case VoltageOutputRange.VOLTS_5:switch(e.chDef.uid){case 227:case 228:case 229:case 230:return!0;default:return!1}default:return!0}}function supportedVoltageRange(e,t){if(t<VoltageRange.MILLIVOLTS_10||t>VoltageRange.AUTO)return!1;switch(t){case VoltageRange.MILLIVOLTS_10:case VoltageRange.MILLIVOLTS_40:case VoltageRange.MILLIVOLTS_200:case VoltageRange.MILLIVOLTS_1000:switch(e.chDef.uid){case 444:case 445:return!0;default:return!1}case VoltageRange.MILLIVOLTS_312_5:return 441===e.chDef.uid;case VoltageRange.MILLIVOLTS_400:case VoltageRange.VOLTS_2:return 202===e.chDef.uid;case VoltageRange.VOLTS_5:case VoltageRange.VOLTS_15:switch(e.chDef.uid){case 442:case 443:return!0;default:return!1}case VoltageRange.VOLTS_40:switch(e.chDef.uid){case 441:case 442:case 443:return!0;default:return!1}case VoltageRange.AUTO:switch(e.chDef.uid){case 442:case 443:case 444:case 445:return!0;default:return!1}default:return!0}}function supportedVoltageSensorType(e,t){if(t<VoltageSensorType.VOLTAGE||t>VoltageSensorType.PN_VCP4114)return!1;switch(t){case VoltageSensorType.PN_1114:case VoltageSensorType.PN_1117:case VoltageSensorType.PN_1123:case VoltageSensorType.PN_1127:case VoltageSensorType.PN_1130_PH:case VoltageSensorType.PN_1130_ORP:case VoltageSensorType.PN_1132:case VoltageSensorType.PN_1133:case VoltageSensorType.PN_1135:case VoltageSensorType.PN_1142:case VoltageSensorType.PN_1143:case VoltageSensorType.PN_3500:case VoltageSensorType.PN_3501:case VoltageSensorType.PN_3502:case VoltageSensorType.PN_3503:case VoltageSensorType.PN_3585:case VoltageSensorType.PN_3586:case VoltageSensorType.PN_3587:case VoltageSensorType.PN_3588:case VoltageSensorType.PN_3589:case VoltageSensorType.PN_MOT2002_LOW:case VoltageSensorType.PN_MOT2002_MED:case VoltageSensorType.PN_MOT2002_HIGH:case VoltageSensorType.PN_VCP4114:switch(e.chDef.uid){case 14:case 24:case 28:case 41:case 45:case 166:case 174:case 178:case 183:case 196:case 197:case 198:case 222:case 224:return!0;default:return!1}case VoltageSensorType.PN_3507:case VoltageSensorType.PN_3508:case VoltageSensorType.PN_3509:case VoltageSensorType.PN_3510:case VoltageSensorType.PN_3511:case VoltageSensorType.PN_3512:case VoltageSensorType.PN_3513:case VoltageSensorType.PN_3514:case VoltageSensorType.PN_3515:case VoltageSensorType.PN_3516:case VoltageSensorType.PN_3517:case VoltageSensorType.PN_3518:case VoltageSensorType.PN_3519:case VoltageSensorType.PN_3584:switch(e.chDef.uid){case 14:case 24:case 28:case 41:case 45:case 166:case 174:case 178:case 183:case 196:case 197:case 222:case 224:case 238:case 242:return!0;default:return!1}default:return!0}}function supportedRFIDProtocol(e,t){if(t<RFIDProtocol.EM4100||t>RFIDProtocol.PHIDGET_TAG)return!1;switch(t){case RFIDProtocol.ISO11785_FDX_B:case RFIDProtocol.PHIDGET_TAG:switch(e.chDef.uid){case 59:case 65:case 69:return!0;default:return!1}default:return!0}}function supportedSpatialAlgorithm(e,t){return!(t<SpatialAlgorithm.NONE||t>SpatialAlgorithm.IMU)}function supportedRTDType(e,t){if(t<RTDType.PT100_3850||t>RTDType.PT1000_3920)return!1;switch(t){case RTDType.PT100_3850:case RTDType.PT1000_3850:case RTDType.PT100_3920:case RTDType.PT1000_3920:switch(e.chDef.uid){case 432:case 434:case 436:return!0;default:return!1}default:return!0}}function supportedThermocoupleType(e,t){if(t<ThermocoupleType.J||t>ThermocoupleType.T)return!1;switch(t){case ThermocoupleType.J:case ThermocoupleType.E:case ThermocoupleType.T:switch(e.chDef.uid){case 106:case 109:case 115:case 118:case 121:case 423:case 426:case 429:return!0;default:return!1}case ThermocoupleType.K:switch(e.chDef.uid){case 106:case 109:case 113:case 115:case 118:case 121:case 423:case 426:case 429:return!0;default:return!1}default:return!0}}function supportedFrequencyFilterType(e,t){if(t<FrequencyFilterType.ZERO_CROSSING||t>FrequencyFilterType.LOGIC_LEVEL)return!1;switch(t){case FrequencyFilterType.ZERO_CROSSING:return 131===e.chDef.uid;case FrequencyFilterType.LOGIC_LEVEL:switch(e.chDef.uid){case 131:case 241:case 245:return!0;default:return!1}default:return!0}}function supportedStepperControlMode(e,t){return!(t<StepperControlMode.STEP||t>StepperControlMode.RUN)}function supportedLCDFont(e,t){if(t<LCDFont.USER1||t>LCDFont.DIMENSIONS_6X12)return!1;switch(t){case LCDFont.USER1:case LCDFont.USER2:case LCDFont.DIMENSIONS_6X10:case LCDFont.DIMENSIONS_6X12:switch(e.chDef.uid){case 346:case 347:return!0;default:return!1}case LCDFont.DIMENSIONS_5X8:switch(e.chDef.uid){case 182:case 187:case 188:case 189:case 190:case 346:return!0;default:return!1}default:return!0}}function supportedLCDScreenSize(e,t){if(t<LCDScreenSize.NO_SCREEN||t>LCDScreenSize.DIMENSIONS_64X128)return!1;switch(t){case LCDScreenSize.NO_SCREEN:case LCDScreenSize.DIMENSIONS_1X8:case LCDScreenSize.DIMENSIONS_2X8:case LCDScreenSize.DIMENSIONS_1X16:case LCDScreenSize.DIMENSIONS_2X16:case LCDScreenSize.DIMENSIONS_4X16:case LCDScreenSize.DIMENSIONS_4X20:case LCDScreenSize.DIMENSIONS_2X24:case LCDScreenSize.DIMENSIONS_1X40:case LCDScreenSize.DIMENSIONS_2X40:case LCDScreenSize.DIMENSIONS_4X40:return 188===e.chDef.uid;case LCDScreenSize.DIMENSIONS_2X20:switch(e.chDef.uid){case 182:case 187:case 188:case 189:case 190:return!0;default:return!1}case LCDScreenSize.DIMENSIONS_64X128:switch(e.chDef.uid){case 346:case 347:return!0;default:return!1}default:return!0}}function supportedLCDPixelState(e,t){if(t<LCDPixelState.OFF||t>LCDPixelState.INVERT)return!1;switch(t){case LCDPixelState.OFF:case LCDPixelState.ON:case LCDPixelState.INVERT:switch(e.chDef.uid){case 346:case 347:return!0;default:return!1}default:return!0}}function supportedSPLRange(e,t){return!(t<SPLRange.DB_102||t>SPLRange.DB_82)}function supportedHubPortMode(e,t){return!(t<HubPortMode.VINT||t>HubPortMode.VOLTAGE_RATIO_INPUT)}const VINT_MAX_OUT_PACKETSIZE=48,VINTPacketDescription={224:"Success",225:"Not Ready",226:"Invalid Argument",227:"Invalid Packet Type",228:"Invalid Sequence",229:"Invalid Command",230:"Malformed",231:"No Space",232:"Unexpected",233:"Not Attached",234:"Packet Too Big",235:"Failsafe Tripped"},VINTPacketCode_to_PhidgetReturnCode={224:ErrorCode.SUCCESS,225:ErrorCode.BUSY,226:ErrorCode.INVALID_ARGUMENT,227:ErrorCode.INVALID_PACKET,228:ErrorCode.NOT_CONFIGURED,229:ErrorCode.INVALID,230:ErrorCode.INVALID,231:ErrorCode.NO_SPACE,232:ErrorCode.UNEXPECTED,233:ErrorCode.NOT_ATTACHED,234:ErrorCode.FILE_TOO_BIG,235:ErrorCode.FAILSAFE};async function send1014_3_VINT(e,t){let r;const i=new DataView(new ArrayBuffer(2));if(35!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 82:i.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(10,new Uint8Array(i.buffer,0,1));break;case 55:if(r=t.getNumber(0),0!==r&&1!==r)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);i.setUint8(0,r?255:0),await e.sendVINTDataPacket(10,new Uint8Array(i.buffer,0,1));break;case 146:i.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(i.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recv1014_3_VINT(e,t){const r=t.getUint8(0);if(35!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function send1017_2_VINT(e,t){let r;const i=new DataView(new ArrayBuffer(2));if(40!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 82:i.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(10,new Uint8Array(i.buffer,0,1));break;case 55:if(r=t.getNumber(0),0!==r&&1!==r)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);i.setUint8(0,r?255:0),await e.sendVINTDataPacket(10,new Uint8Array(i.buffer,0,1));break;case 146:i.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(i.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recv1017_2_VINT(e,t){const r=t.getUint8(0);if(40!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function send1055_1_VINT(e,t){throw new Error("Not Implemented")}function recv1055_1_VINT(e,t){throw new Error("Not Implemented")}async function sendDIGITALINPUT_PORT(){throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected command received.")}function recvDIGITALINPUT_PORT(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 193:{const t=new BridgePacket;switch(r){case 8:t.set({name:"0",type:"d",value:1});break;case 9:t.set({name:"0",type:"d",value:0});break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}t.sendToChannel(e,90);break}default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDIGITALOUTPUT_PORT(e,t){const r=new Uint16Array(1);switch(e.chDef.uid){case 194:switch(t.vpkt){case 82:r.set(t.getBoolean(0)?[32768]:[0],0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,r.byteLength));break;case 55:r.set([32768*t.getNumber(0)],0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,r.byteLength));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 195:switch(t.vpkt){case 82:r.set(t.getBoolean(0)?[128]:[0],0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,r.byteLength));break;case 55:{r.set([32768*t.getNumber(0)],0);const i=new Uint8Array(r.buffer,0,r.byteLength);await e.sendVINTDataPacket(10,reverse(i).call(i));break}case 146:r.set([t.getNumber(0)],0),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,r.byteLength));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDIGITALOUTPUT_PORT(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 194:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet received.");case 195:switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDIGITALOUTPUT_PORT_FAILSAFE(e,t){await sendDIGITALOUTPUT_PORT(e,t)}function recvDIGITALOUTPUT_PORT_FAILSAFE(e,t){recvDIGITALOUTPUT_PORT(e,t)}async function sendVOLTAGEINPUT_PORT(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 196:case 197:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,t.getNumber(0)/5*32768),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,2));break;case 79:if(!supportedVoltageSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvVOLTAGEINPUT_PORT(e,t){const r=t.getUint8(0);let i;switch(e.chDef.uid){case 196:case 197:switch(r){case 17:{i=5*t.getUint16(1)/32768;const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,5)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendVOLTAGEINPUT_PORT_5V25(e,t){await sendVOLTAGEINPUT_PORT(e,t)}function recvVOLTAGEINPUT_PORT_5V25(e,t){recvVOLTAGEINPUT_PORT(e,t)}async function sendVOLTAGEINPUT_PORT_V2(e,t){const r=new DataView(new ArrayBuffer(4));if(198!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,4));break;case 79:if(!supportedVoltageSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvVOLTAGEINPUT_PORT_V2(e,t){const r=t.getUint8(0);let i;if(198!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 17:{if(6==t.byteLength)switch(t.getUint8(5)){case 1:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),t.set({name:"1",type:"s",value:"Voltage is too high to be accurately measured"}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected error event code")}i=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,6)}),r.sendToChannel(e,101);break}case 18:switch(t.getUint8(1)){case 1:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),t.set({name:"1",type:"s",value:"Voltage is too high to be accurately measured"}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected error event code")}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendVOLTAGERATIOINPUT_PORT(e,t){const r=new DataView(new ArrayBuffer(4));if(199!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(26,new Uint8Array(r.buffer,0,2));break;case 79:if(!supportedVoltageRatioSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvVOLTAGERATIOINPUT_PORT(e,t){let r;const i=t.getUint8(0);if(199!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 27:{r=t.getUint16(1)/32768;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,5)}),i.sendToChannel(e,102);break}case 28:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendVOLTAGERATIOINPUT_PORT_V2(e,t){const r=new DataView(new ArrayBuffer(4));if(200!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(26,new Uint8Array(r.buffer,0,4));break;case 79:if(!supportedVoltageRatioSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvVOLTAGERATIOINPUT_PORT_V2(e,t){const r=t.getUint8(0);let i;if(200!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 27:{if(6==t.byteLength)switch(t.getUint8(5)){case 1:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),t.set({name:"1",type:"s",value:"Voltage Ratio is too high to be accurately measured"}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected error event code")}i=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,6)}),r.sendToChannel(e,102);break}case 28:switch(t.getUint8(1)){case 1:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),t.set({name:"1",type:"s",value:"Voltage Ratio is too high to be accurately measured"}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected error event code")}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendADP1000(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 201:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(187,new Uint8Array(r.buffer));break;case 134:r.setUint16(0,8*t.getNumber(0)),await e.sendVINTDataPacket(188,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 202:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer));break;case 87:{const i=t.getNumber(0);switch(i){case VoltageRange.MILLIVOLTS_400:case VoltageRange.VOLTS_2:r.setUint8(0,i),await e.sendVINTDataPacket(22,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid or unsupported voltage range for this device.")}break}case 79:if(!supportedVoltageSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid or unsupported voltage sensor type");break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvADP1000(e,t){let r;const i=t.getUint8(0);switch(e.chDef.uid){case 201:switch(i){case 185:{r=t.getInt32(1)/(1<<24);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,5)}),i.sendToChannel(e,133);break}case 186:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 202:switch(i){case 17:{r=t.getInt32(1)/(1<<24);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,5)}),i.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDAQ1000(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 221:case 223:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(26,new Uint8Array(r.buffer,0,4));break;case 79:if(!supportedVoltageRatioSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 222:case 224:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,4));break;case 79:if(!supportedVoltageSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDAQ1000(e,t){let r;const i=t.getUint8(0);switch(e.chDef.uid){case 221:case 223:switch(i){case 27:{r=t.getFloat32(1,!0);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,4)}),i.sendToChannel(e,102);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 222:case 224:switch(i){case 17:{r=t.getFloat32(1,!0);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,4)}),i.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDAQ1000_5V25(e,t){await sendDAQ1000(e,t)}function recvDAQ1000_5V25(e,t){recvDAQ1000(e,t)}async function sendOUT1000(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 225:switch(t.vpkt){case 86:r.setInt32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(5,new Uint8Array(r.buffer));break;case 56:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(4,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 226:switch(t.vpkt){case 86:r.setInt32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(5,new Uint8Array(r.buffer));break;case 56:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(4,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvOUT1000(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 225:switch(r){case 6:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.VOLTAGE_ERROR}),t.set({name:"1",type:"s",value:"Voltage Error Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 226:switch(r){case 6:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.VOLTAGE_ERROR}),t.set({name:"1",type:"s",value:"Voltage Error Detected."}),e.sendErrorEvent(t);break}case 14:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendOUT1000_Failsafe(e,t){await sendOUT1000(e,t)}function recvOUT1000_Failsafe(e,t){recvOUT1000(e,t)}async function sendOUT1001(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 227:switch(t.vpkt){case 86:r.setInt32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(5,new Uint8Array(r.buffer));break;case 87:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(7,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 228:switch(t.vpkt){case 86:r.setInt32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(5,new Uint8Array(r.buffer));break;case 87:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(7,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvOUT1001(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 227:switch(r){case 6:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.VOLTAGE_ERROR}),t.set({name:"1",type:"s",value:"Voltage Error Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 228:switch(r){case 6:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.VOLTAGE_ERROR}),t.set({name:"1",type:"s",value:"Voltage Error Detected."}),e.sendErrorEvent(t);break}case 14:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendOUT1001_Failsafe(e,t){await sendOUT1001(e,t)}function recvOUT1001_Failsafe(e,t){recvOUT1001(e,t)}async function sendOUT1002(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 229:switch(t.vpkt){case 86:r.setInt32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(5,new Uint8Array(r.buffer));break;case 87:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(7,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 230:switch(t.vpkt){case 86:r.setInt32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(5,new Uint8Array(r.buffer));break;case 87:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(7,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvOUT1002(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 229:switch(r){case 6:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.VOLTAGE_ERROR}),t.set({name:"1",type:"s",value:"Voltage Error Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 230:switch(r){case 6:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.VOLTAGE_ERROR}),t.set({name:"1",type:"s",value:"Voltage Error Detected."}),e.sendErrorEvent(t);break}case 14:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendOUT1002_Failsafe(e,t){await sendOUT1002(e,t)}function recvOUT1002_Failsafe(e,t){recvOUT1002(e,t)}async function sendDAQ1200(){throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected command received")}function recvDAQ1200(e,t){const r=t.getUint8(0);if(232!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 8:{const r=1&t.getUint8(1),i=new BridgePacket;i.set({name:"0",type:"d",value:r}),i.sendToChannel(e,90);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendOUT1100(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 233:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 234:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 235:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;case 156:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(15,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvOUT1100(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 233:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet received.");case 234:case 235:switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendOUT1100_Failsafe(e,t){await sendOUT1100(e,t)}function recvOUT1100_Failsafe(e,t){recvOUT1100(e,t)}async function sendOUT1100_Failsafe_Frequency(e,t){await sendOUT1100(e,t)}function recvOUT1100_Failsafe_Frequency(e,t){recvOUT1100(e,t)}async function sendDAQ1300(){throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected command received.")}function recvDAQ1300(e,t){let r;const i=t.getUint8(0);if(236!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 8:{r=1&t.getUint8(1);const i=new BridgePacket;i.set({name:"0",type:"d",value:r}),i.sendToChannel(e,90);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendDAQ1301(){throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected command received.")}function recvDAQ1301(e,t){const r=t.getUint8(0);if(237!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 8:{const r=1&t.getUint8(1),i=new BridgePacket;i.set({name:"0",type:"d",value:r}),i.sendToChannel(e,90);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendDAQ1400(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 241:case 245:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 74:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(193,new Uint8Array(r.buffer,0,1));break;case 64:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(194,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 240:case 244:switch(t.vpkt){case 74:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(193,new Uint8Array(r.buffer,0,1));break;case 64:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(194,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 239:case 243:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(83,new Uint8Array(r.buffer,0,4));break;case 74:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(193,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 238:case 242:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,4));break;case 74:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(193,new Uint8Array(r.buffer,0,1));break;case 79:if(!supportedVoltageSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDAQ1400(e,t){let r,i,a,s,n,o;const h=t.getUint8(0);switch(e.chDef.uid){case 241:case 245:switch(h){case 132:{a=t.getUint32(1)/1e3,i=t.getUint32(5),r=t.getUint32(9)/1e3;const s=new BridgePacket;s.set({name:"0",type:"g",value:a}),s.set({name:"1",type:"u",value:i}),s.set({name:"2",type:"g",value:r}),s.sendToChannel(e,21);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 240:case 244:switch(h){case 8:{o=1&t.getUint8(1);const r=new BridgePacket;r.set({name:"0",type:"d",value:o}),r.sendToChannel(e,90);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 239:case 243:switch(h){case 84:{if(s=t.getInt32(1)/(1<<24),s<5e-4){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"Sensor value is ouside the valid range for this sensor."}),e.sendErrorEvent(t);break}const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(s,5)}),r.sendToChannel(e,8);break}case 85:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 238:case 242:switch(h){case 17:{n=t.getInt32(1)/(1<<24);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(n,8)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDAQ1400_120(e,t){await sendDAQ1400(e,t)}function recvDAQ1400_120(e,t){recvDAQ1400(e,t)}async function sendDAQ1500(e,t){const r=new DataView(new ArrayBuffer(4));if(246!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 56:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(30,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,2147483648*t.getNumber(0)),await e.sendVINTDataPacket(26,new Uint8Array(r.buffer));break;case 45:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(29,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvDAQ1500(e,t){const r=t.getUint8(0);if(246!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 27:{const r=t.getInt32(1)/2147483647,i=new BridgePacket;i.set({name:"0",type:"g",value:r}),i.sendToChannel(e,102);break}case 151:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendVCP1100(e,t){const r=new DataView(new ArrayBuffer(4));if(248!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(83,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvVCP1100(e,t){const r=t.getUint8(0);if(248!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 84:{const r=t.getInt32(1)/65536,i=new BridgePacket;i.set({name:"0",type:"g",value:r}),i.sendToChannel(e,8);break}case 85:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendDCC1000(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 253:case 258:case 264:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,t.getNumber(0)*(4095/3.3)*.045),await e.sendVINTDataPacket(83,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 252:case 257:case 263:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 251:case 256:case 262:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(26,new Uint8Array(r.buffer,0,4));break;case 79:if(!supportedVoltageRatioSensorType(e,t.getNumber(0)))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);break;case 122:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 250:case 255:case 261:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 65:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,1));break;case 56:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 249:case 254:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setInt32(0,.045*t.getNumber(0)*4095/3.3+2048),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 58:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(94,new Uint8Array(r.buffer,0,1));break;case 119:r.setUint32(0,1804.070707*(t.getNumber(0)-1)+897),await e.sendVINTDataPacket(102,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 260:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setInt32(0,.045*t.getNumber(0)*4095/3.3+2048),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 58:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(94,new Uint8Array(r.buffer,0,1));break;case 119:r.setUint32(0,1804.070707*(t.getNumber(0)-1)+897),await e.sendVINTDataPacket(102,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 259:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setInt32(0,.045*t.getNumber(0)*4095/3.3+2048),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 119:r.setUint32(0,1804.070707*(t.getNumber(0)-1)+897),await e.sendVINTDataPacket(102,new Uint8Array(r.buffer,0,4));break;case 58:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(94,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 65:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(56,new Uint8Array(r.buffer,0,1));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 265:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setInt32(0,.045*t.getNumber(0)*4095/3.3+2048),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 119:r.setUint32(0,1804.070707*(t.getNumber(0)-1)+897),await e.sendVINTDataPacket(102,new Uint8Array(r.buffer,0,4));break;case 58:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(94,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 65:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(56,new Uint8Array(r.buffer,0,1));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDCC1000(e,t){let r,i,a,s,n,o,h,c,d,u,l,g;const w=t.getUint8(0);switch(e.chDef.uid){case 253:case 258:case 264:switch(w){case 84:{n=.017908017*(t.getUint16(1)-2048);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(n,4)}),r.sendToChannel(e,8);break}case 85:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 252:case 257:case 263:switch(w){case 59:{s=t.getInt32(1)/65536;const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(s,2)}),r.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 251:case 256:case 262:switch(w){case 27:{o=t.getInt32(1)/65536;const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(o,5)}),r.sendToChannel(e,102);break}case 28:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 250:case 255:case 261:switch(w){case 49:{l=t.getInt32(1),d=1e3*t.getUint32(5)/48,u=t.getUint8(9),c=u?t.getUint32(10):0;const r=new BridgePacket;r.set({name:"0",type:"d",value:l}),r.set({name:"1",type:"g",value:d/1e6}),r.set({name:"2",type:"c",value:u}),r.set({name:"3",type:"d",value:c}),r.sendToChannel(e,29);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 249:switch(w){case 96:{if(i=t.getUint16(3)/65535,a=t.getUint8(6)?-1:1,r=t.getUint16(1)/65535*a,g=e.userphid,g.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const s=new BridgePacket;s.set({name:"0",type:"g",value:RoundDouble(r,3)}),s.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 254:switch(w){case 96:{if(i=t.getInt32(5)/940,r=t.getInt32(1)/940,g=e.userphid,g.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 260:switch(w){case 96:{if(i=t.getInt32(5)/940,r=t.getInt32(1)/940,g=e.userphid,g.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 259:switch(w){case 53:{if(r=t.getInt32(1)/940,h=GetBigInt64(t,5),g=e.userphid,g.data.position!==h){const t=new BridgePacket;t.set({name:"0",type:"l",value:h}),t.sendToChannel(e,29)}const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 265:switch(w){case 53:{if(r=t.getInt32(1)/940,h=GetBigInt64(t,5),g=e.userphid,g.data.position!==h){const t=new BridgePacket;t.set({name:"0",type:"l",value:h}),t.sendToChannel(e,29)}const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,16);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDCC1000_POSITIONCONTROL(e,t){await sendDCC1000(e,t)}function recvDCC1000_POSITIONCONTROL(e,t){recvDCC1000(e,t)}async function sendDCC1000_POSITIONCONTROL_FAILSAFE(e,t){await sendDCC1000(e,t)}function recvDCC1000_POSITIONCONTROL_FAILSAFE(e,t){recvDCC1000(e,t)}async function sendDCC1001(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 289:case 292:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 65:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,1));break;case 56:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 288:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 291:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 290:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 293:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDCC1001(e,t){let r,i,a,s,n,o,h,c;const d=t.getUint8(0);switch(e.chDef.uid){case 289:case 292:switch(d){case 49:{h=t.getInt32(1),s=1e3*t.getUint32(5)/48,o=t.getUint8(9),a=o?t.getUint32(10):0;const r=new BridgePacket;r.set({name:"0",type:"d",value:h}),r.set({name:"1",type:"g",value:s/1e6}),r.set({name:"2",type:"c",value:o}),r.set({name:"3",type:"d",value:a}),r.sendToChannel(e,29);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 288:switch(d){case 96:{if(i=t.getInt32(5)/940,r=t.getInt32(1)/940,c=e.userphid,c.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 291:switch(d){case 96:{if(i=t.getInt32(5)/940,r=t.getInt32(1)/940,c=e.userphid,c.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 290:switch(d){case 53:{if(r=t.getInt32(1)/940,n=GetBigInt64(t,5),c=e.userphid,c.data.position!==n){const t=new BridgePacket;t.set({name:"0",type:"l",value:n}),t.sendToChannel(e,29)}const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 293:switch(d){case 53:{if(r=t.getInt32(1)/940,n=GetBigInt64(t,5),c=e.userphid,c.data.position!==n){const t=new BridgePacket;t.set({name:"0",type:"l",value:n}),t.sendToChannel(e,29)}const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,16);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDCC1001_Failsafe(e,t){await sendDCC1001(e,t)}function recvDCC1001_Failsafe(e,t){recvDCC1001(e,t)}async function sendDCC1002(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 295:case 298:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 65:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,1));break;case 56:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 294:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 297:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 296:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 299:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer,0,4));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDCC1002(e,t){let r,i,a,s,n,o,h,c;const d=t.getUint8(0);switch(e.chDef.uid){case 295:case 298:switch(d){case 49:{h=t.getInt32(1),s=1e3*t.getUint32(5)/48,o=t.getUint8(9),a=o?t.getUint32(10):0;const r=new BridgePacket;r.set({name:"0",type:"d",value:h}),r.set({name:"1",type:"g",value:s/1e6}),r.set({name:"2",type:"c",value:o}),r.set({name:"3",type:"d",value:a}),r.sendToChannel(e,29);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 294:switch(d){case 96:{if(i=t.getInt32(5)/940,r=t.getInt32(1)/940,c=e.userphid,c.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 297:switch(d){case 96:{if(i=t.getInt32(5)/940,r=t.getInt32(1)/940,c=e.userphid,c.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 296:switch(d){case 53:{if(r=t.getInt32(1)/940,n=GetBigInt64(t,5),c=e.userphid,c.data.position!==n){const t=new BridgePacket;t.set({name:"0",type:"l",value:n}),t.sendToChannel(e,29)}const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 299:switch(d){case 53:{if(r=t.getInt32(1)/940,n=GetBigInt64(t,5),c=e.userphid,c.data.position!==n){const t=new BridgePacket;t.set({name:"0",type:"l",value:n}),t.sendToChannel(e,29)}const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,16);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDCC1002_Failsafe(e,t){await sendDCC1002(e,t)}function recvDCC1002_Failsafe(e,t){recvDCC1002(e,t)}async function sendDCC1003(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 300:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer));break;case 44:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 301:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(100,new Uint8Array(r.buffer));break;case 44:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(101,new Uint8Array(r.buffer));break;case 51:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDCC1003(e,t){let r,i;const a=t.getUint8(0),s=e.userphid;switch(e.chDef.uid){case 300:switch(a){case 96:{if(i=t.getInt32(5),i/=959,r=t.getInt32(1),r/=959,s.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 301:switch(a){case 96:{if(i=t.getInt32(5),i/=959,r=t.getInt32(1),r/=959,s.data.brakingStrength!==i){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(i,3)}),t.sendToChannel(e,121)}const a=new BridgePacket;a.set({name:"0",type:"g",value:RoundDouble(r,3)}),a.sendToChannel(e,16);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDCC1003_Failsafe(e,t){await sendDCC1003(e,t)}function recvDCC1003_Failsafe(e,t){recvDCC1003(e,t)}async function sendDCC1100(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 304:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(54,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(55,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(36,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;case 141:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer,0,4));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 307:switch(t.vpkt){case 120:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,4));break;case 135:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer,0,4));break;case 136:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(49,new Uint8Array(r.buffer,0,4));break;case 142:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,4));break;case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(52,new Uint8Array(r.buffer));break;case 40:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(54,new Uint8Array(r.buffer,0,4));break;case 55:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(55,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(36,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(57,new Uint8Array(r.buffer,0,1));break;case 141:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer,0,4));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 303:case 306:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 302:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(35,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(34,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(36,new Uint8Array(r.buffer,0,4));break;case 51:r.setInt32(0,.045*t.getNumber(0)*4095/3.3+2048),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 141:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(37,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 305:switch(t.vpkt){case 40:r.setUint32(0,8192*t.getNumber(0)),await e.sendVINTDataPacket(35,new Uint8Array(r.buffer,0,4));break;case 55:r.setInt32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(34,new Uint8Array(r.buffer,0,4));break;case 44:r.setUint32(0,2097151*t.getNumber(0)),await e.sendVINTDataPacket(36,new Uint8Array(r.buffer,0,4));break;case 51:r.setInt32(0,.045*t.getNumber(0)*4095/3.3+2048),await e.sendVINTDataPacket(98,new Uint8Array(r.buffer,0,4));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 141:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(37,new Uint8Array(r.buffer,0,4));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvDCC1100(e,t){let r,i,a,s,n;const o=t.getUint8(0);switch(e.chDef.uid){case 303:case 306:switch(o){case 59:{r=t.getInt32(1)/65536;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,2)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 302:switch(o){case 32:{if(i=t.getInt32(1)/940,a=t.getInt32(5)/940,s=GetBigInt64(t,9),n=e.userphid,n.data.brakingStrength!==a){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(a,3)}),t.sendToChannel(e,121)}if(n.data.position!==s){const t=new BridgePacket;t.set({name:"0",type:"l",value:s}),t.sendToChannel(e,29)}const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,3)}),r.sendToChannel(e,16);break}case 38:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.MOTOR_STALL_CONDITION}),t.set({name:"1",type:"s",value:"Dangerous motor stall detected. Velocity has been reduced in order to prevent damage."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 305:switch(o){case 32:{if(i=t.getInt32(1)/940,a=t.getInt32(5)/940,s=GetBigInt64(t,9),n=e.userphid,n.data.brakingStrength!==a){const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(a,3)}),t.sendToChannel(e,121)}if(n.data.position!==s){const t=new BridgePacket;t.set({name:"0",type:"l",value:s}),t.sendToChannel(e,29)}const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,3)}),r.sendToChannel(e,16);break}case 38:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.MOTOR_STALL_CONDITION}),t.set({name:"1",type:"s",value:"Dangerous motor stall detected. Velocity has been reduced in order to prevent damage."}),e.sendErrorEvent(t);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 304:switch(o){case 53:{if(i=t.getInt32(1)/940,s=GetBigInt64(t,5),n=e.userphid,n.data.position!==s){const t=new BridgePacket;t.set({name:"0",type:"l",value:s}),t.sendToChannel(e,29)}const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,3)}),r.sendToChannel(e,16);break}case 38:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.MOTOR_STALL_CONDITION}),t.set({name:"1",type:"s",value:"Dangerous motor stall detected. Velocity has been reduced in order to prevent damage."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 307:switch(o){case 53:{if(i=t.getInt32(1)/940,s=GetBigInt64(t,5),n=e.userphid,n.data.position!==s){const t=new BridgePacket;t.set({name:"0",type:"l",value:s}),t.sendToChannel(e,29)}const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,3)}),r.sendToChannel(e,16);break}case 38:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.MOTOR_STALL_CONDITION}),t.set({name:"1",type:"s",value:"Dangerous motor stall detected. Velocity has been reduced in order to prevent damage."}),e.sendErrorEvent(t);break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendDCC1100_Failsafe(e,t){await sendDCC1100(e,t)}function recvDCC1100_Failsafe(e,t){recvDCC1100(e,t)}async function sendDST1000(e,t){const r=new DataView(new ArrayBuffer(4));if(329!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(149,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvDST1000(e,t){let r;const i=t.getUint8(0);if(329!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 150:{r=t.getUint16(1,!0);const i=new BridgePacket;i.set({name:"0",type:"u",value:r}),i.sendToChannel(e,12);break}case 151:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"Sensor value is outside the valid range for this sensor."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendDST1001(e,t){const r=new DataView(new ArrayBuffer(4));if(330!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(149,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvDST1001(e,t){let r;const i=t.getUint8(0);if(330!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 150:{r=t.getUint16(1,!0);const i=new BridgePacket;i.set({name:"0",type:"u",value:r}),i.sendToChannel(e,12);break}case 151:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"Sensor value is outside the valid range for this sensor."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendDST1002(e,t){const r=new DataView(new ArrayBuffer(4));if(331!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(149,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvDST1002(e,t){let r;const i=t.getUint8(0);if(331!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 150:{r=t.getUint16(1,!0);const i=new BridgePacket;i.set({name:"0",type:"u",value:r}),i.sendToChannel(e,12);break}case 151:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"Sensor value is outside the valid range for this sensor."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendDST1200(e,t){const r=new DataView(new ArrayBuffer(4));if(332!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(149,new Uint8Array(r.buffer,0,2));break;case 75:r.setUint8(0,t.getNumber(0)?1:0),await e.sendVINTDataPacket(153,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvDST1200(e,t){const r=new Array(8),i=new Array(8);let a,s,n;const o=t.getUint8(0);if(332!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(o){case 152:{for(a=t.getUint8(1),n=0;n<8;n++)r[n]=n<a?t.getUint16(2*n+2):4294967295;for(n=0;n<8;n++)n<a?(i[n]=t.getUint16(2*n+2*a+2),32767===i[n]&&(i[n]=4294967295)):i[n]=4294967295;if(0===a){const t=new BridgePacket;t.set({name:"0",type:"U",value:r}),t.set({name:"1",type:"U",value:i}),t.set({name:"2",type:"u",value:a}),t.sendToChannel(e,88);break}let s=new BridgePacket;s.set({name:"0",type:"U",value:r}),s.set({name:"1",type:"U",value:i}),s.set({name:"2",type:"u",value:a}),s.sendToChannel(e,88),s=new BridgePacket,s.set({name:"0",type:"u",value:r[0]}),s.sendToChannel(e,12);break}case 150:{s=t.getUint32(1);const r=new BridgePacket;r.set({name:"0",type:"u",value:s}),r.sendToChannel(e,12);break}case 151:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendENC1000(e,t){const r=new DataView(new ArrayBuffer(4));if(333!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer));break;case 65:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,1));break;case 56:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvENC1000(e,t){let r,i,a,s;const n=t.getUint8(0);if(333!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(n){case 49:{a=t.getInt32(1),s=1e3*t.getUint32(5)/16,i=t.getUint8(9),r=i?t.getInt32(10):0;const n=new BridgePacket;n.set({name:"0",type:"d",value:a}),n.set({name:"1",type:"g",value:s/1e6}),n.set({name:"2",type:"c",value:i}),n.set({name:"3",type:"d",value:r}),n.sendToChannel(e,29);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendENC1001(e,t){var r;const i=new DataView(new ArrayBuffer(4));if(334!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:const a=null===(r=e.parent.parent)||void 0===r?void 0:r.at(t,1);if(!a)throw new PhidgetError(ErrorCode.UNEXPECTED);i.setUint16(0,a),await e.sendVINTDataPacket(252,new Uint8Array(i.buffer,0,2));break;case 46:i.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(48,new Uint8Array(i.buffer));break;case 56:i.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(i.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvENC1001(e,t){let r,i,a,s,n;const o=t.getUint8(0);if(334!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(o){case 49:a=t.getInt32(1),s=1e3*t.getUint32(5)/64,i=t.getUint8(9),r=i?t.getInt32(10):0;const o=new BridgePacket;o.set({name:"0",type:"d",value:a}),o.set({name:"1",type:"g",value:s/1e6}),o.set({name:"2",type:"c",value:i}),o.set({name:"3",type:"d",value:r}),o.sendToChannel(e,29);break;case 245:{n=t.getUint16(1);const r=new BridgePacket;r.set({name:"0",type:"u",value:n}),r.sendToChannel(e,10);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendHIN1101(e,t){const r=new DataView(new ArrayBuffer(4));if(335!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(48,new Uint8Array(r.buffer));break;case 65:r.setInt32(0,t.getNumber(0)),await e.sendVINTDataPacket(50,new Uint8Array(r.buffer,0,1));break;case 56:r.setInt8(0,t.getNumber(0)),await e.sendVINTDataPacket(51,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvHIN1101(e,t){let r,i,a;const s=t.getUint8(0);switch(e.chDef.uid){case 335:switch(s){case 49:{r=t.getInt32(1),i=1e3*t.getInt32(5)/16;const a=new BridgePacket;a.set({name:"0",type:"d",value:r}),a.set({name:"1",type:"g",value:i/1e6}),a.set({name:"2",type:"c",value:0}),a.set({name:"3",type:"d",value:0}),a.sendToChannel(e,29);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 336:switch(s){case 8:{a=1&t.getUint8(1);const r=new BridgePacket;r.set({name:"0",type:"d",value:a}),r.sendToChannel(e,90);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendHIN1000(e,t){const r=new DataView(new ArrayBuffer(4));if(337!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:break;case 66:r.setUint8(0,80*(1-t.getNumber(0))+20),await e.sendVINTDataPacket(54,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvHIN1000(e,t){let r;const i=t.getUint8(0);if(337!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 53:{r=t.getUint8(1)?1:0;const i=new BridgePacket;r?(i.set({name:"0",type:"g",value:r}),i.sendToChannel(e,96)):i.sendToChannel(e,137);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendHIN1001(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 338:case 339:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(55,new Uint8Array(r.buffer,0,2));break;case 66:4===e.index?r.setUint8(0,32*(1-t.getNumber(0))+1):r.setUint8(0,64*(1-t.getNumber(0))+1),await e.sendVINTDataPacket(54,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvHIN1001(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 338:case 339:switch(a){case 53:{i=t.getUint8(1)?1:0,r=e.index<4?i:t.getUint16(2)/65536;const a=new BridgePacket;i?(a.set({name:"0",type:"g",value:r}),a.sendToChannel(e,96)):a.sendToChannel(e,137);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendHIN1100(e,t){const r=new DataView(new ArrayBuffer(4));if(340!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,16384*t.getNumber(0)),await e.sendVINTDataPacket(26,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvHIN1100(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 340:switch(a){case 27:{r=RoundDouble(t.getInt16(1)/16384,4);const i=new BridgePacket;i.set({name:"0",type:"g",value:r}),i.sendToChannel(e,102);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 341:switch(a){case 8:{i=t.getUint8(1)?1:0;const r=new BridgePacket;r.set({name:"0",type:"d",value:i}),r.sendToChannel(e,90);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendHUM1000(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 343:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 342:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(68,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvHUM1000(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 343:switch(a){case 59:{r=t.getInt32(1)/65536;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,2)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 342:switch(a){case 69:{i=t.getInt32(1)/65536;const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,2)}),r.sendToChannel(e,22);break}case 70:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendHUM1001(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 344:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(68,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 345:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvHUM1001(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 344:switch(a){case 69:{i=t.getInt32(1)/65536;const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,2)}),r.sendToChannel(e,22);break}case 70:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 345:switch(a){case 59:{r=t.getInt32(1)/65536;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,2)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendLCD1100_WRITETEXT(e,t){const r=new DataView(new ArrayBuffer(48)),i=e.userphid,a=t.getNumber(0);let s=t.getNumber(1);const n=t.getNumber(2),o=t.getString(3),h=i.getFontSize(a),c=i.data.frameBuffer,d=i.data.width,u=i.data.height;let l=o.length;if(a==c)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid font/framebuffer combination.");if(l=Math.min(d-s,h.width*l)/h.width,n+h.height>u&&(l=0),0===l)return;let g=0;for(;g<l;){const t=Math.min(42,l-g);r.setUint8(0,a),r.setUint8(1,h.width),r.setUint8(2,h.height),r.setUint8(3,s),r.setUint8(4,n),r.setUint8(5,t);for(let e=0;e<t;e++)r.setUint8(e+6,o.charCodeAt(g++));s+=t*h.width,await e.sendVINTDataPacket(37,new Uint8Array(r.buffer,0,t+6))}}async function sendLCD1100_WRITEBITMAP(e,t){let r=new DataView(new ArrayBuffer(48)),i=0;const a=t.getArray(4),s=t.getNumber(2),n=t.getNumber(3);r.setUint8(0,t.getNumber(0)),r.setUint8(1,t.getNumber(1)),r.setUint8(2,s),r.setUint8(3,n),await e.sendVINTDataPacket(38,new Uint8Array(r.buffer,0,4));let o=0,h=0;for(;o<s;){r=new DataView(new ArrayBuffer(48));for(let e=0;e<384&&o<s;e++){const t=Math.floor(e/8);i=t+1;const c=1<<7-e%8&(a[h*s+o]?255:0),d=r.getUint8(t)|c;r.setUint8(t,d),h++,h>=n&&(o++,h=0)}await e.sendVINTDataPacket(39,new Uint8Array(r.buffer,0,i))}}async function sendLCD1100_SETCHARACTERBITMAP(e,t){const r=e.userphid,i=t.getNumber(0),a=t.getString(1),s=t.getArray(2);if(i!=LCDFont.USER1&&i!=LCDFont.USER2)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Font must be user font 1 or 2.");const n=r.frameBuffer,o=r.getMaxCharacters(i),h=r.getFontSize(i),c=r.width;if(1!=a.length)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Multibyte characters are unsupported.");let d=a.charCodeAt(0);if(d-=1,d<0||d>o)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Character code must be between 0x00 and 0x"+o.toString(16)+" ('"+String.fromCharCode(o)+"'). Number of supported characters depends on the font size.");if(n!=i){const t=new DataView(new ArrayBuffer(1));t.setUint8(0,i),await e.sendVINTDataPacket(43,new Uint8Array(t.buffer,0,1))}const u=new DataView(new ArrayBuffer(4));u.setUint8(0,h.width*(d%Math.floor(c/h.width))),u.setUint8(1,h.height*Math.floor(d/Math.floor(c/h.width))),u.setUint8(2,h.width),u.setUint8(3,h.height),await e.sendVINTDataPacket(38,new Uint8Array(u.buffer,0,4));let l=0,g=0;for(;l<h.width;){const t=new DataView(new ArrayBuffer(48));let r;for(let e=0;e<384&&l<h.width;e++){const i=Math.floor(e/8);r=i+1;const a=1<<7-e%8&(s[g*h.width+l]?255:0),n=t.getUint8(i)|a;t.setUint8(i,n),g++,g>=h.height&&(l++,g=0)}await e.sendVINTDataPacket(39,new Uint8Array(t.buffer,0,r))}if(n!=i){const t=new DataView(new ArrayBuffer(1));t.setUint8(0,n),await e.sendVINTDataPacket(43,new Uint8Array(t.buffer,0,1))}}async function sendLCD1100(e,t){const r=new DataView(new ArrayBuffer(48)),i=e.userphid;switch(e.chDef.uid){case 346:case 347:await i.st.acquire();try{switch(t.vpkt){case 38:{const i=t.getNumber(0);if(i<0||i>2)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Framebuffer must be 0, 1 or 2.");r.setUint8(0,i),await e.sendVINTDataPacket(44,new Uint8Array(r.buffer,0,1));break}case 62:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(43,new Uint8Array(r.buffer,0,1));break;case 43:t.getNumber(0)>=1?r.setUint8(0,255):r.setUint8(0,256*t.getNumber(0)),await e.sendVINTDataPacket(32,new Uint8Array(r.buffer,0,1));break;case 48:t.getNumber(0)>=1?r.setUint8(0,255):r.setUint8(0,256*t.getNumber(0)),await e.sendVINTDataPacket(33,new Uint8Array(r.buffer,0,1));break;case 14:r.setUint8(0,t.getNumber(0)),r.setUint8(1,t.getNumber(1)),r.setUint8(2,t.getNumber(2)),await e.sendVINTDataPacket(34,new Uint8Array(r.buffer,0,3));break;case 13:r.setUint8(0,t.getNumber(0)),r.setUint8(1,t.getNumber(1)),r.setUint8(2,t.getNumber(2)),r.setUint8(3,t.getNumber(3)),await e.sendVINTDataPacket(35,new Uint8Array(r.buffer,0,4));break;case 15:r.setUint8(0,t.getNumber(0)),r.setUint8(1,t.getNumber(1)),r.setUint8(2,t.getNumber(2)),r.setUint8(3,t.getNumber(3)),r.setUint8(4,t.getNumber(4)?255:0),r.setUint8(5,t.getNumber(5)?255:0),await e.sendVINTDataPacket(36,new Uint8Array(r.buffer,0,6));break;case 105:await sendLCD1100_WRITETEXT(e,t);break;case 104:await sendLCD1100_WRITEBITMAP(e,t);break;case 19:await e.sendVINTDataPacket(40);break;case 4:await e.sendVINTDataPacket(41);break;case 80:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(42,new Uint8Array(r.buffer,0,1));break;case 47:await sendLCD1100_SETCHARACTERBITMAP(e,t);break;case 6:r.setUint8(0,t.getNumber(0)),r.setUint8(1,t.getNumber(1)),r.setUint8(2,t.getNumber(2)),r.setUint8(3,t.getNumber(3)),r.setUint8(4,t.getNumber(4)),r.setUint8(5,t.getNumber(5)),r.setUint8(6,t.getNumber(6)),r.setUint8(7,t.getNumber(7)),r.setUint8(8,t.getNumber(8)?255:0),await e.sendVINTDataPacket(45,new Uint8Array(r.buffer,0,9));break;case 24:await e.sendVINTDataPacket(47);break;case 61:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break}finally{i.st.release()}default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendLCD1100_1(e,t){await sendLCD1100(e,t)}function recvLCD1100(){throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet received.")}function recvLCD1100_1(){throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet received.")}async function sendLED1000(e,t){const r=new DataView(new ArrayBuffer(4));if(348!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 68:switch(r.setUint8(0,t.getNumber(0)),r.getUint8(0)){case LEDForwardVoltage.VOLTS_3_2:case LEDForwardVoltage.VOLTS_4_0:case LEDForwardVoltage.VOLTS_4_8:case LEDForwardVoltage.VOLTS_5_6:await e.sendVINTDataPacket(12,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid or unsupported voltage for this device.")}break;case 67:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(11,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvLED1000(){throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet received.")}async function sendLUX1000(e,t){const r=new DataView(new ArrayBuffer(4));if(349!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,16384*t.getNumber(0)),await e.sendVINTDataPacket(80,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvLUX1000(e,t){let r;const i=t.getUint8(0);if(349!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 81:{r=t.getInt32(1)/16384,r=RoundDouble(r,r<100?4:2);const i=new BridgePacket;i.set({name:"0",type:"g",value:r}),i.sendToChannel(e,23);break}case 82:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendHUM1100(e,t){const r=new DataView(new ArrayBuffer(4));if(350!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint16(0,65535*t.getNumber(0)),await e.sendVINTDataPacket(26,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvHUM1100(e,t){let r;const i=t.getUint8(0);if(350!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 27:{r=t.getUint16(1)/65535;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,102);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendMOT1100(e,t){const r=new DataView(new ArrayBuffer(4));if(351!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvMOT1100(e,t){let r;const i=[0,0,0],a=t.getUint8(0);if(351!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(a){case 196:{i[0]=t.getInt16(1)/4096,i[0]=RoundDouble(i[0],4),i[1]=t.getInt16(3)/4096,i[1]=RoundDouble(i[1],4),i[2]=t.getInt16(5)/4096,i[2]=RoundDouble(i[2],4),r=t.getUint32(7);const a=new BridgePacket;a.set({name:"0",type:"G",value:i}),a.set({name:"1",type:"g",value:r}),a.sendToChannel(e,1);break}case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Acceleration Saturation."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendMOT1101(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 354:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 355:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 106:await e.sendVINTDataPacket(51);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 356:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(r.buffer));break;case 35:await e.sendVINTDataPacket(77);break;case 37:await e.sendVINTDataPacket(79);break;case 50:await sendMOT1101_SETCORRECTIONPARAMETERS(e,t);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 357:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 106:await e.sendVINTDataPacket(51);break;case 35:await e.sendVINTDataPacket(77);break;case 37:await e.sendVINTDataPacket(79);break;case 50:await sendMOT1101_SETCORRECTIONPARAMETERS(e,t);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvMOT1101(e,t){let r,i=0;const a=[0,0,0],s=[0,0,0],n=[0,0,0],o=t.getUint8(0);let h;switch(e.chDef.uid){case 354:switch(o){case 196:{s[0]=RoundDouble(t.getInt16(1)/4096,4),s[1]=RoundDouble(t.getInt16(3)/4096,4),s[2]=RoundDouble(t.getInt16(5)/4096,4),r=t.getUint32(7);const i=new BridgePacket;i.set({name:"0",type:"G",value:s}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,1);break}case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 355:switch(o){case 197:{n[0]=RoundDouble(t.getFloat32(1,!0),5),n[1]=RoundDouble(t.getFloat32(5,!0),5),n[2]=RoundDouble(t.getFloat32(9,!0),5),r=t.getUint32(13);const i=new BridgePacket;i.set({name:"0",type:"G",value:n}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,2);break}case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 356:switch(o){case 196:{a[0]=RoundDouble(t.getInt16(1)/4096,4),a[1]=RoundDouble(t.getInt16(3)/4096,4),a[2]=RoundDouble(t.getInt16(5)/4096,4),r=t.getUint32(7);const i=new BridgePacket;i.set({name:"0",type:"G",value:a}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,18);break}case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 357:switch(o){case 196:for(h=0;h<3;h++)127===t.getUint8(1+2*h)&&255===t.getUint8(2+2*h)||128===t.getUint8(1+2*h)&&0===t.getUint8(2+2*h)?i|=4:a[h]=RoundDouble(t.getInt16(1+2*h)/4096,5);for(h=0;h<3;h++)127===t.getUint8(7+2*h)&&255===t.getUint8(8+2*h)||128===t.getUint8(7+2*h)&&0===t.getUint8(8+2*h)?i|=1:s[h]=RoundDouble(t.getInt16(7+2*h)/4096,5);for(h=0;h<3;h++){const e=t.getFloat32(13+4*h,!0);1e30===e||-1e30===e?i|=2:n[h]=RoundDouble(e,5)}if(0===i){r=t.getUint32(25);const i=new BridgePacket;i.set({name:"0",type:"G",value:s}),i.set({name:"1",type:"G",value:n}),i.set({name:"2",type:"G",value:a}),i.set({name:"3",type:"g",value:r}),i.sendToChannel(e,89)}else{let t=!0;if(1&i){const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),r.set({name:"1",type:"s",value:"Acceleration Saturation Detected."}),e.sendErrorEvent(r),t=!1}if(2&i){const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),r.set({name:"1",type:"s",value:"Gyroscope Saturation Detected."}),e.sendErrorEvent(r),t=!1}if(4&i){const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),r.set({name:"1",type:"s",value:"Magnetometer Saturation Detected."}),e.sendErrorEvent(r),t=!1}if(t)throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected saturation flag. This is likely a firmware bug.")}break;case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendMOT1101_SETCORRECTIONPARAMETERS(e,t){const r=[0,0,0,0,0,0],i=[0,0,0],a=[0,0,0],s=new DataView(new ArrayBuffer(28)),n=t.getNumber(0);for(let e=0;e<3;e++)i[e]=t.getNumber((e+1).toString()),a[e]=t.getNumber((e+4).toString());for(let e=0;e<6;e++)r[e]=t.getNumber((e+7).toString());s.setFloat32(0,n,!0);for(let e=0;e<3;e++)s.setFloat32(4+4*e,i[e],!0),s.setFloat32(16+4*e,a[e],!0);await e.sendVINTDataPacket(78,new Uint8Array(s.buffer));for(let e=0;e<6;e++)s.setFloat32(4*e,r[e],!0);await e.sendVINTDataPacket(78,new Uint8Array(s.buffer,0,24))}async function sendMOT1102(e,t){const r=new DataView(new ArrayBuffer(24));let i;switch(e.chDef.uid){case 358:case 362:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 359:case 363:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 106:await e.sendVINTDataPacket(51);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 360:case 364:i=e.userphid,await i.transactionLock.acquire();try{switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(r.buffer,0,4));break;case 35:await e.sendVINTDataPacket(77);break;case 37:await e.sendVINTDataPacket(79);break;case 50:await sendMOT1102_SETCORRECTIONPARAMETERS(e,t);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}finally{i.transactionLock.release()}break;case 361:case 365:i=e.userphid,await i.st.acquire();try{switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 106:await e.sendVINTDataPacket(51);break;case 35:await e.sendVINTDataPacket(77);break;case 37:await e.sendVINTDataPacket(79);break;case 50:await sendMOT1102_SETCORRECTIONPARAMETERS(e,t);break;case 150:await e.sendVINTDataPacket(80);break;case 149:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(81,new Uint8Array(r.buffer,0,1));break;case 151:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(82,new Uint8Array(r.buffer,0,4));break;case 174:r.setFloat32(0,t.getNumber(0),!0),r.setFloat32(4,t.getNumber(1),!0),r.setFloat32(8,t.getNumber(2),!0),r.setFloat32(12,t.getNumber(3),!0),r.setFloat32(16,t.getNumber(4),!0),r.setFloat32(20,t.getNumber(5),!0),await e.sendVINTDataPacket(84,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}finally{i.st.release()}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvMOT1102(e,t){let r,i=0;const a=[0,0,0],s=[0,0,0],n=[0,0,0],o=[0,0,0,0],h=t.getUint8(0);let c;switch(e.chDef.uid){case 358:case 362:switch(h){case 196:{s[0]=RoundDouble(t.getInt16(1)/4096,4),s[1]=RoundDouble(t.getInt16(3)/4096,4),s[2]=RoundDouble(t.getInt16(5)/4096,4),r=t.getUint32(7);const i=new BridgePacket;i.set({name:"0",type:"G",value:s}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,1);break}case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 359:case 363:switch(h){case 197:{n[0]=RoundDouble(t.getFloat32(1,!0),5),n[1]=RoundDouble(t.getFloat32(5,!0),5),n[2]=RoundDouble(t.getFloat32(9,!0),5),r=t.getUint32(13);const i=new BridgePacket;i.set({name:"0",type:"G",value:n}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,2);break}case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}case 199:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.INVALID_STATE_CONDITION}),t.set({name:"1",type:"s",value:"The gyroscope has received invalid data and will recover shortly."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 360:case 364:switch(h){case 196:{a[0]=RoundDouble(t.getInt16(1)/4096,4),a[1]=RoundDouble(t.getInt16(3)/4096,4),a[2]=RoundDouble(t.getInt16(5)/4096,4),r=t.getUint32(7);const i=new BridgePacket;i.set({name:"0",type:"G",value:a}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,18);break}case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 361:case 365:switch(h){case 196:for(c=0;c<3;c++)127===t.getUint8(1+2*c)&&255===t.getUint8(2+2*c)||128===t.getUint8(1+2*c)&&0===t.getUint8(2+2*c)?i|=4:a[c]=RoundDouble(t.getInt16(1+2*c)/4096,5);for(c=0;c<3;c++)127===t.getUint8(7+2*c)&&255===t.getUint8(8+2*c)||128===t.getUint8(7+2*c)&&0===t.getUint8(8+2*c)?i|=1:s[c]=RoundDouble(t.getInt16(7+2*c)/4096,5);for(c=0;c<3;c++){const e=t.getFloat32(13+4*c,!0);1e30===e||-1e30===e?i|=2:n[c]=RoundDouble(e,5)}if(o[0]=t.getFloat32(29,!0),o[1]=t.getFloat32(33,!0),o[2]=t.getFloat32(37,!0),o[3]=t.getFloat32(41,!0),0===i){r=t.getUint32(25);let i=new BridgePacket;i.set({name:"0",type:"G",value:s}),i.set({name:"1",type:"G",value:n}),i.set({name:"2",type:"G",value:a}),i.set({name:"3",type:"g",value:r}),i.sendToChannel(e,89),i=new BridgePacket,i.set({name:"0",type:"G",value:o}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,148)}else{let t=!0;if(1&i){const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),r.set({name:"1",type:"s",value:"Acceleration Saturation Detected."}),e.sendErrorEvent(r),t=!1}if(2&i){const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),r.set({name:"1",type:"s",value:"Gyroscope Saturation Detected."}),e.sendErrorEvent(r),t=!1}if(4&i){const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),r.set({name:"1",type:"s",value:"Magnetometer Saturation Detected."}),e.sendErrorEvent(r),t=!1}if(t)throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected saturation flag. This is likely a firmware bug.")}break;case 198:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}case 199:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.INVALID_STATE_CONDITION}),t.set({name:"1",type:"s",value:"The gyroscope has received invalid data and will recover shortly."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendMOT1102_SETCORRECTIONPARAMETERS(e,t){const r=[0,0,0,0,0,0],i=[0,0,0],a=[0,0,0],s=new DataView(new ArrayBuffer(28)),n=t.getNumber(0);for(let e=0;e<3;e++)i[e]=t.getNumber((e+1).toString()),a[e]=t.getNumber((e+4).toString());for(let e=0;e<6;e++)r[e]=t.getNumber((e+7).toString());s.setFloat32(0,n,!0);for(let e=0;e<3;e++)s.setFloat32(4+4*e,i[e],!0),s.setFloat32(16+4*e,a[e],!0);await e.sendVINTDataPacket(78,new Uint8Array(s.buffer));for(let e=0;e<6;e++)s.setFloat32(4*e,r[e],!0);await e.sendVINTDataPacket(78,new Uint8Array(s.buffer,0,24))}async function sendMOT1102_1(e,t){await sendMOT1102(e,t)}function recvMOT1102_1(e,t){recvMOT1102(e,t)}async function sendMOT0100_VINT(e,t){var r;const i=new DataView(new ArrayBuffer(24));if(353!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:{const a=null===(r=e.parent.parent)||void 0===r?void 0:r.at(t,1);if(!a)throw new PhidgetError(ErrorCode.UNEXPECTED);i.setUint16(0,a),await e.sendVINTDataPacket(252,new Uint8Array(i.buffer,0,2))}break;case 46:i.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(i.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvMOT0100_VINT(e,t){let r;const i=[0,0,0],a=t.getUint8(0);if(353!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(a){case 196:{if(t.byteLength>17&&1&t.getUint8(17)){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"One or more accelerometer readings is out of range."}),e.sendErrorEvent(t)}i[0]=t.getFloat32(1,!0),i[1]=t.getFloat32(5,!0),i[2]=t.getFloat32(9,!0),r=t.getUint32(13);for(let e=0;e<3;e++)isNaN(i[e])||(i[e]=RoundDouble(i[e],6));const a=new BridgePacket;a.set({name:"0",type:"G",value:i}),a.set({name:"1",type:"g",value:r}),a.sendToChannel(e,1);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendMOT0110_VINT(e,t){var r,i,a,s,n;const o=new DataView(new ArrayBuffer(24));let h;switch(e.chDef.uid){case 384:h=e.userphid,await h.st.acquire();try{switch(t.vpkt){case 54:{const i=null===(r=e.parent.parent)||void 0===r?void 0:r.at(t,1);if(!i)throw new PhidgetError(ErrorCode.UNEXPECTED);o.setUint16(0,i),await e.sendVINTDataPacket(252,new Uint8Array(o.buffer,0,2))}break;case 106:await e.sendVINTDataPacket(51);break;case 35:await e.sendVINTDataPacket(77);break;case 37:await e.sendVINTDataPacket(79);break;case 50:await sendMOT0110_SETCORRECTIONPARAMETERS(e,t);break;case 150:await e.sendVINTDataPacket(80);break;case 149:o.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(81,new Uint8Array(o.buffer,0,1));break;case 151:o.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(82,new Uint8Array(o.buffer,0,4));break;case 174:o.setFloat32(0,t.getNumber(0),!0),o.setFloat32(4,t.getNumber(1),!0),o.setFloat32(8,t.getNumber(2),!0),o.setFloat32(12,t.getNumber(3),!0),o.setFloat32(16,t.getNumber(4),!0),o.setFloat32(20,t.getNumber(5),!0),await e.sendVINTDataPacket(84,new Uint8Array(o.buffer));break;case 170:o.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(85,new Uint8Array(o.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}finally{h.st.release()}break;case 383:h=e.userphid,await h.transactionLock.acquire();try{switch(t.vpkt){case 54:{const r=null===(i=e.parent.parent)||void 0===i?void 0:i.at(t,1);if(!r)throw new PhidgetError(ErrorCode.UNEXPECTED);o.setUint16(0,r),await e.sendVINTDataPacket(252,new Uint8Array(o.buffer,0,2))}break;case 46:o.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(o.buffer,0,4));break;case 35:await e.sendVINTDataPacket(77);break;case 37:await e.sendVINTDataPacket(79);break;case 50:await sendMOT0110_SETCORRECTIONPARAMETERS(e,t);break;case 170:o.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(85,new Uint8Array(o.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}finally{h.transactionLock.release()}break;case 382:switch(t.vpkt){case 54:{const r=null===(a=e.parent.parent)||void 0===a?void 0:a.at(t,1);if(!r)throw new PhidgetError(ErrorCode.UNEXPECTED);o.setUint16(0,r),await e.sendVINTDataPacket(252,new Uint8Array(o.buffer,0,2))}break;case 106:await e.sendVINTDataPacket(51);break;case 170:o.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(85,new Uint8Array(o.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 381:switch(t.vpkt){case 54:{const r=null===(s=e.parent.parent)||void 0===s?void 0:s.at(t,1);if(!r)throw new PhidgetError(ErrorCode.UNEXPECTED);o.setUint16(0,r),await e.sendVINTDataPacket(252,new Uint8Array(o.buffer,0,2))}break;case 46:o.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(195,new Uint8Array(o.buffer,0,4));break;case 170:o.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(85,new Uint8Array(o.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 385:switch(t.vpkt){case 54:{const r=null===(n=e.parent.parent)||void 0===n?void 0:n.at(t,1);if(!r)throw new PhidgetError(ErrorCode.UNEXPECTED);o.setUint16(0,r),await e.sendVINTDataPacket(252,new Uint8Array(o.buffer,0,2))}break;case 46:o.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(o.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvMOT0110_VINT(e,t){let r,i;const a=[0,0,0],s=[0,0,0],n=[0,0,0],o=[0,0,0,0];let h,c;const d=t.getUint8(0);switch(e.chDef.uid){case 384:switch(d){case 196:{if(t.byteLength>41&&32&t.getUint8(41)){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"One or more spatial readings is out of range."}),e.sendErrorEvent(t)}for(let e=0;e<3;e++)h=t.getFloat32(4*e+1,!0),Number.isNaN(h)||(a[e]=RoundDouble(h,5)),h=t.getFloat32(4*e+13,!0),Number.isNaN(h)||(s[e]=RoundDouble(h,5)),h=t.getFloat32(4*e+25,!0),Number.isNaN(h)||(n[e]=RoundDouble(h,5));r=t.getUint32(37);const i=new BridgePacket;i.set({name:"0",type:"G",value:s}),i.set({name:"1",type:"G",value:n}),i.set({name:"2",type:"G",value:a}),i.set({name:"3",type:"g",value:r}),i.sendToChannel(e,89);break}case 197:{o[0]=t.getFloat32(1,!0),o[1]=t.getFloat32(5,!0),o[2]=t.getFloat32(9,!0),o[3]=t.getFloat32(13,!0),r=t.getUint16(17);const i=new BridgePacket;i.set({name:"0",type:"G",value:o}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,148);break}case 245:{c=t.getUint16(1);const r=new BridgePacket;r.set({name:"0",type:"u",value:c}),r.sendToChannel(e,10);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 383:switch(d){case 196:{if(t.byteLength>17&&4&t.getUint8(17)){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"One or more magnetometer readings is out of range."}),e.sendErrorEvent(t)}a[0]=RoundDouble(t.getFloat32(1,!0),4),a[1]=RoundDouble(t.getFloat32(5,!0),4),a[2]=RoundDouble(t.getFloat32(9,!0),4),r=t.getUint32(13);const i=new BridgePacket;i.set({name:"0",type:"G",value:a}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,18);break}case 245:{c=t.getUint16(1);const r=new BridgePacket;r.set({name:"0",type:"u",value:c}),r.sendToChannel(e,10);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 382:switch(d){case 197:{if(t.byteLength>17&&2&t.getUint8(17)){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"One or more gyroscope readings is out of range."}),e.sendErrorEvent(t)}n[0]=RoundDouble(t.getFloat32(1,!0),6),n[1]=RoundDouble(t.getFloat32(5,!0),6),n[2]=RoundDouble(t.getFloat32(9,!0),6),r=t.getUint32(13);const i=new BridgePacket;i.set({name:"0",type:"G",value:n}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,2);break}case 245:{c=t.getUint16(1);const r=new BridgePacket;r.set({name:"0",type:"u",value:c}),r.sendToChannel(e,10);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 381:switch(d){case 196:{if(t.byteLength>17&&1&t.getUint8(17)){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"One or more accelerometer readings is out of range."}),e.sendErrorEvent(t)}s[0]=RoundDouble(t.getFloat32(1,!0),6),s[1]=RoundDouble(t.getFloat32(5,!0),6),s[2]=RoundDouble(t.getFloat32(9,!0),6),r=t.getUint32(13);const i=new BridgePacket;i.set({name:"0",type:"G",value:s}),i.set({name:"1",type:"g",value:r}),i.sendToChannel(e,1);break}case 245:{c=t.getUint16(1);const r=new BridgePacket;r.set({name:"0",type:"u",value:c}),r.sendToChannel(e,10);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 385:switch(d){case 59:{if(t.byteLength>5){const r=new BridgePacket;switch(24&t.getUint8(5)){case 8:r.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION}),r.set({name:"1",type:"s",value:"Temperature is too low to be accurately measured."});break;case 16:r.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),r.set({name:"1",type:"s",value:"Temperature is too high to be accurately measured."});break;case 24:r.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),r.set({name:"1",type:"s",value:"Temperature is unknown."})}e.sendErrorEvent(r)}i=RoundDouble(t.getFloat32(1,!0),3);const r=new BridgePacket;r.set({name:"0",type:"g",value:i}),r.sendToChannel(e,95);break}case 245:{c=t.getUint16(1);const r=new BridgePacket;r.set({name:"0",type:"u",value:c}),r.sendToChannel(e,10);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendMOT0110_SETCORRECTIONPARAMETERS(e,t){const r=[0,0,0,0,0,0],i=[0,0,0],a=[0,0,0],s=new DataView(new ArrayBuffer(28)),n=t.getNumber(0);for(let e=0;e<3;e++)i[e]=t.getNumber((e+1).toString()),a[e]=t.getNumber((e+4).toString());for(let e=0;e<6;e++)r[e]=t.getNumber((e+7).toString());s.setFloat32(0,n,!0);for(let e=0;e<3;e++)s.setFloat32(4+4*e,i[e],!0),s.setFloat32(16+4*e,a[e],!0);await e.sendVINTDataPacket(78,new Uint8Array(s.buffer));for(let e=0;e<6;e++)s.setFloat32(4*e,r[e],!0);await e.sendVINTDataPacket(78,new Uint8Array(s.buffer,0,24))}async function sendPRE1000(e,t){const r=new DataView(new ArrayBuffer(4));if(386!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(64,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvPRE1000(e,t){let r;const i=t.getUint8(0);if(386!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 65:{r=t.getInt32(1)/65536;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,31);break}case 66:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendRCC1000(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 387:switch(t.vpkt){case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(113,new Uint8Array(r.buffer,0,1));break;case 86:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(118,new Uint8Array(r.buffer,0,1));break;case 70:r.setUint32(0,1e3*t.getNumber(0)),await e.sendVINTDataPacket(114,new Uint8Array(r.buffer,0,4));break;case 69:r.setUint32(0,1e3*t.getNumber(0)),await e.sendVINTDataPacket(115,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,16*t.getNumber(0)/2500),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 85:r.setUint32(0,16*t.getNumber(0)/50),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 83:r.setUint32(0,1e3*t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer,0,4));break;case 81:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 388:case 389:switch(t.vpkt){case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(113,new Uint8Array(r.buffer,0,1));break;case 86:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(118,new Uint8Array(r.buffer,0,1));break;case 70:r.setUint32(0,1e3*t.getNumber(0)),await e.sendVINTDataPacket(114,new Uint8Array(r.buffer,0,4));break;case 69:r.setUint32(0,1e3*t.getNumber(0)),await e.sendVINTDataPacket(115,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,16*t.getNumber(0)/2500),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 85:r.setUint32(0,16*t.getNumber(0)/50),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 83:r.setUint32(0,1e3*t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer,0,4));break;case 81:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,4));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvRCC1000(e,t){let r;const i=t.getUint8(0);switch(e.chDef.uid){case 387:switch(i){case 116:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_POWER}),t.set({name:"1",type:"s",value:"Servo motors are drawing too much power or the power supply is not providing enough voltage or current."}),e.sendErrorEvent(t);break}case 112:{r=t.getUint16(1)/16;const i=new BridgePacket;i.set({name:"0",type:"g",value:r}),i.sendToChannel(e,94);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 388:case 389:switch(i){case 116:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_POWER}),t.set({name:"1",type:"s",value:"Servo motors are drawing too much power or the power supply is not providing enough voltage or current."}),e.sendErrorEvent(t);break}case 112:{r=t.getUint16(1)/16;const i=new BridgePacket;i.set({name:"0",type:"g",value:r}),i.sendToChannel(e,94);break}case 121:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendRCC1000_Failsafe(e,t){await sendRCC1000(e,t)}function recvRCC1000_Failsafe(e,t){recvRCC1000(e,t)}async function sendRCC1000_1(e,t){await sendRCC1000(e,t)}function recvRCC1000_1(e,t){recvRCC1000(e,t)}async function sendREL1000(e,t){const r=new DataView(new ArrayBuffer(2));switch(e.chDef.uid){case 390:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 391:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvREL1000(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 390:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet received.");case 391:switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendREL1000_Failsafe(e,t){await sendREL1000(e,t)}function recvREL1000_Failsafe(e,t){recvREL1000(e,t)}async function sendREL1100(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 392:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 393:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 394:switch(t.vpkt){case 82:r.setUint16(0,t.getNumber(0)?32768:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 55:r.setUint16(0,32768*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;case 156:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(15,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvREL1100(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 392:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet received.");case 393:case 394:switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendREL1100_Failsafe(e,t){await sendREL1100(e,t)}function recvREL1100_Failsafe(e,t){recvREL1100(e,t)}async function sendREL1100_Failsafe_Frequency(e,t){await sendREL1100(e,t)}function recvREL1100_Failsafe_Frequency(e,t){recvREL1100(e,t)}async function sendREL1101(e,t){const r=new DataView(new ArrayBuffer(2));switch(e.chDef.uid){case 395:switch(t.vpkt){case 82:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;case 55:r.setUint8(0,255*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 396:switch(t.vpkt){case 82:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;case 55:r.setUint8(0,255*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvREL1101(e,t){const r=t.getUint8(0);if(395!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendREL1101_Failsafe(e,t){await sendREL1101(e,t)}function recvREL1101_Failsafe(e,t){recvREL1101(e,t)}async function sendREL1101_1(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 397:switch(t.vpkt){case 82:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;case 55:r.setUint8(0,255*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;case 156:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(15,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 398:switch(t.vpkt){case 82:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;case 55:r.setUint8(0,255*t.getNumber(0)),await e.sendVINTDataPacket(10,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvREL1101_1(e,t){const r=t.getUint8(0);switch(e.chDef.uid){case 398:case 397:switch(r){case 13:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendSAF1000(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 400:switch(t.vpkt){case 56:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(166,new Uint8Array(r.buffer,0,1));break;case 71:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(162,new Uint8Array(r.buffer,0,4));break;case 58:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(159,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 403:switch(t.vpkt){case 56:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(166,new Uint8Array(r.buffer,0,1));break;case 71:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(162,new Uint8Array(r.buffer,0,4));break;case 58:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(159,new Uint8Array(r.buffer,0,1));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 401:case 404:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 402:case 405:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvSAF1000(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 400:switch(a){case 164:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.ENERGY_DUMP_CONDITION}),t.set({name:"1",type:"s",value:"Energy Dump in Progress."}),e.sendErrorEvent(t);break}case 165:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OVER_TEMPERATURE}),t.set({name:"1",type:"s",value:"Overtemperature Condition Detected."}),e.sendErrorEvent(t);break}case 163:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OVER_VOLTAGE}),t.set({name:"1",type:"s",value:"Overvoltage Condition Detected."}),e.sendErrorEvent(t);break}case 160:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SUCCESS}),t.set({name:"1",type:"s",value:"All error conditions have been resolved"}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 403:switch(a){case 164:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.ENERGY_DUMP_CONDITION}),t.set({name:"1",type:"s",value:"Energy Dump in Progress."}),e.sendErrorEvent(t);break}case 165:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OVER_TEMPERATURE}),t.set({name:"1",type:"s",value:"Overtemperature Condition Detected."}),e.sendErrorEvent(t);break}case 163:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OVER_VOLTAGE}),t.set({name:"1",type:"s",value:"Overvoltage Condition Detected."}),e.sendErrorEvent(t);break}case 160:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SUCCESS}),t.set({name:"1",type:"s",value:"All error conditions have been resolved"}),e.sendErrorEvent(t);break}case 167:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 401:case 404:switch(a){case 17:{i=t.getUint32(1)/(1<<24);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,7)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 402:case 405:switch(a){case 59:{r=t.getInt32(1)/65536;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,2)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendSAF1000_Failsafe(e,t){await sendSAF1000(e,t)}function recvSAF1000_Failsafe(e,t){recvSAF1000(e,t)}async function sendSND1000(e,t){const r=new DataView(new ArrayBuffer(4));if(406!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:break;case 116:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(147,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvSND1000(e,t){const r=new Array(10),i=new Array(10);let a,s,n,o,h=0,c=0,d=0,u=!1;const l=e.userphid,g=[-6.700912224792721,-1.144507424157968,.9642291552357972,1.2016993444284976,0,-3.098968656056327,-8.456545621324212,-16.189851062139507,-26.22302364022129,-39.52906401331724],w=[-8.62944227232129,-3.0448821481317507,-.8252420358959885,-.16942156787436816,0,.03251328929742176,.0019618319836562453,-.1718184155510175,-.8206982482269319,3.030794594641769],p=t.getUint8(0);if(406!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");if(146!==p)throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.");s=1==t.getUint8(41)?39.912703891951:59.912703891951,u=1==t.getUint8(42);for(let e=0;e<10;e++)a=Math.sqrt(t.getFloat32(4*e+1,!0)),a*=3300/4095,a/=6.309573444801932,r[e]=20*Math.log10(a)+94-s,h+=Math.pow(10,r[e]/10),c+=Math.pow(10,(r[e]+g[e])/10),d+=Math.pow(10,(r[e]+w[e])/10);if(u){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t)}else{h=10*Math.log10(h),c=10*Math.log10(c),d=10*Math.log10(d);for(let e=0;e<10;e++)i[e]=RoundDouble(r[9-e],4);if(n=l.data.SPLChangeTrigger,o=l.data.lastdB,Math.abs(o-h)>n){l.data.lastdB=h;const t=new BridgePacket;t.set({name:"0",type:"g",value:RoundDouble(h,4)}),t.set({name:"1",type:"g",value:RoundDouble(c,4)}),t.set({name:"2",type:"g",value:RoundDouble(d,4)}),t.set({name:"3",type:"G",value:i}),t.sendToChannel(e,11)}}}async function sendSTC1000(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 407:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 408:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvSTC1000(e,t){let r,i,a,s;const n=t.getUint8(0),o=e.userphid;switch(e.chDef.uid){case 407:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 408:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendSTC1000_Failsafe(e,t){await sendSTC1000(e,t)}function recvSTC1000_Failsafe(e,t){recvSTC1000(e,t)}async function sendSTC1001(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 409:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 410:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvSTC1001(e,t){let r,i,a,s;const n=t.getUint8(0),o=e.userphid;switch(e.chDef.uid){case 409:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 410:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendSTC1001_Failsafe(e,t){await sendSTC1001(e,t)}function recvSTC1001_Failsafe(e,t){recvSTC1001(e,t)}async function sendSTC1002(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 411:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 412:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvSTC1002(e,t){let r,i,a,s;const n=t.getUint8(0),o=e.userphid;switch(e.chDef.uid){case 411:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 412:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendSTC1002_Failsafe(e,t){await sendSTC1002(e,t)}function recvSTC1002_Failsafe(e,t){recvSTC1002(e,t)}async function sendSTC1003(e,t){const r=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 413:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 414:switch(t.vpkt){case 83:SetBigInt64(r,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(r.buffer));break;case 85:r.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(r.buffer,0,4));break;case 40:r.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(r.buffer,0,4));break;case 51:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(r.buffer,0,2));break;case 63:r.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(r.buffer,0,2));break;case 57:r.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(r.buffer,0,1));break;case 49:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(r.buffer,0,1));break;case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 146:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(r.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvSTC1003(e,t){let r,i,a,s;const n=t.getUint8(0),o=e.userphid;switch(e.chDef.uid){case 413:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 414:switch(n){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,a=t.getUint8(13)?1:0;let n=new BridgePacket;n.set({name:"0",type:"l",value:r}),n.sendToChannel(e,29),n=new BridgePacket,n.set({name:"0",type:"g",value:i}),n.sendToChannel(e,100),s=o.data.isMoving,a&&a==s&&(n=new BridgePacket,n.sendToChannel(e,91));break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}case 118:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_POWER}),t.set({name:"1",type:"s",value:"Overcurrent error detected. Device has been reset."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendSTC1003_Failsafe(e,t){await sendSTC1003(e,t)}function recvSTC1003_Failsafe(e,t){recvSTC1003(e,t)}async function sendSTC1003_1(e,t){var r,i;const a=new DataView(new ArrayBuffer(8));switch(e.chDef.uid){case 415:case 417:case 419:switch(t.vpkt){case 83:SetBigInt64(a,0,t.getNumber(0)),await e.sendVINTDataPacket(88,new Uint8Array(a.buffer));break;case 85:a.setUint32(0,t.getNumber(0)),await e.sendVINTDataPacket(89,new Uint8Array(a.buffer,0,4));break;case 40:a.setUint32(0,128*t.getNumber(0)),await e.sendVINTDataPacket(90,new Uint8Array(a.buffer,0,4));break;case 51:a.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(127,new Uint8Array(a.buffer,0,2));break;case 63:a.setUint16(0,256*t.getNumber(0)),await e.sendVINTDataPacket(122,new Uint8Array(a.buffer,0,2));break;case 57:a.setUint8(0,t.getNumber(0)?255:0),await e.sendVINTDataPacket(120,new Uint8Array(a.buffer,0,1));break;case 49:a.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(119,new Uint8Array(a.buffer,0,1));break;case 54:{const i=null===(r=e.parent.parent)||void 0===r?void 0:r.at(t,1);if(!i)throw new PhidgetError(ErrorCode.UNEXPECTED);a.setUint16(0,i),await e.sendVINTDataPacket(252,new Uint8Array(a.buffer,0,2))}break;case 146:a.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(246,new Uint8Array(a.buffer,0,2));break;case 147:await e.sendVINTDataPacket(247);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 416:case 418:case 420:switch(t.vpkt){case 54:{const r=null===(i=e.parent.parent)||void 0===i?void 0:i.at(t,1);if(!r)throw new PhidgetError(ErrorCode.UNEXPECTED);a.setUint16(0,r),await e.sendVINTDataPacket(252,new Uint8Array(a.buffer,0,2))}break;case 46:a.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(16,new Uint8Array(a.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvSTC1003_1(e,t){let r,i,a,s,n,o;const h=t.getUint8(0);switch(e.chDef.uid){case 415:switch(h){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,s=t.getUint8(13)?1:0;let a=new BridgePacket;a.set({name:"0",type:"l",value:r}),a.sendToChannel(e,29),a=new BridgePacket,a.set({name:"0",type:"g",value:i}),a.sendToChannel(e,100),o=e.userphid,n=o.data.isMoving,s&&n&&(a=new BridgePacket,a.sendToChannel(e,91));break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}case 118:{const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.BAD_POWER}),t.getUint8(1)?r.set({name:"1",type:"s",value:"Supply Voltage above expected range."}):r.set({name:"1",type:"s",value:"Supply Voltage below expected range.  Possible overcurrent condition."}),e.sendErrorEvent(r);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 416:switch(h){case 17:{a=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(a,7)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendSTC1005_0(e,t){await sendSTC1003_1(e,t)}function recvSTC1005_0(e,t){let r,i,a,s,n,o;const h=t.getUint8(0);switch(e.chDef.uid){case 417:case 419:switch(h){case 123:{r=GetBigInt64(t,1),i=t.getInt32(9)/256,s=t.getUint8(13)?1:0;let a=new BridgePacket;a.set({name:"0",type:"l",value:r}),a.sendToChannel(e,29),a=new BridgePacket,a.set({name:"0",type:"g",value:i}),a.sendToChannel(e,100),o=e.userphid,n=o.data.isMoving,s&&n&&(a=new BridgePacket,a.sendToChannel(e,91));break}case 93:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),t.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),e.sendErrorEvent(t);break}case 118:{const r=new BridgePacket;r.set({name:"0",type:"d",value:ErrorEventCode.BAD_POWER}),t.getUint8(1)?r.set({name:"1",type:"s",value:"Supply Voltage above expected range."}):r.set({name:"1",type:"s",value:"Supply Voltage below expected range.  Possible overcurrent condition."}),e.sendErrorEvent(r);break}case 119:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAULT}),t.set({name:"1",type:"s",value:"Fault condition detected. Motor is disengaged and position is lost. Re-engage and re-initialize your system."}),e.sendErrorEvent(t);break}case 120:{let t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.FAULT}),t.set({name:"1",type:"s",value:"Fault condition detected. Motor is disengaged and position is lost. Re-engage and re-initialize your system."}),e.sendErrorEvent(t),t=new BridgePacket,t.set({name:"0",type:"d",value:ErrorEventCode.OVER_TEMPERATURE}),t.set({name:"1",type:"s",value:"Overtemperature Condition Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 418:case 420:switch(h){case 17:{a=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(a,7)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendTMP1000(e,t){const r=new DataView(new ArrayBuffer(4));if(422!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,65536*t.getNumber(0)),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer,0,4));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendSTC1005_0_110(e,t){await sendSTC1005_0(e,t)}function recvSTC1005_0_110(e,t){recvSTC1005_0(e,t)}function recvTMP1000(e,t){let r;const i=t.getUint8(0);if(422!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 59:{r=t.getInt32(1)/65536;const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,2)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendTMP1100(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 425:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 424:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 423:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;case 84:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(62,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvTMP1100(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 424:case 423:switch(a){case 59:{r=t.getFloat32(1,!0);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 425:switch(a){case 17:{i=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,6)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendTMP1101(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 426:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;case 84:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(62,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 427:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 428:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvTMP1101(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 426:case 427:switch(a){case 59:{r=t.getFloat32(1,!0);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 428:switch(a){case 17:{i=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,6)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendTMP1101_1(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 429:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;case 84:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(62,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 430:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 431:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvTMP1101_1(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 429:switch(a){case 59:{r=t.getFloat32(1,!0);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}case 64:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),t.set({name:"1",type:"s",value:"Bad Connection"}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 430:switch(a){case 59:{r=t.getFloat32(1,!0);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 431:switch(a){case 17:{i=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,6)}),r.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}case 23:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),t.set({name:"1",type:"s",value:"Bad Connection"}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendTMP1200(e,t){const r=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 432:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(r.buffer));break;case 77:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(192,new Uint8Array(r.buffer,0,1));break;case 76:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(63,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 433:switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(155,new Uint8Array(r.buffer));break;case 77:r.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(192,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvTMP1200(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 432:switch(a){case 59:{r=t.getFloat32(1,!0);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 433:switch(a){case 154:{i=t.getFloat32(1,!0);const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,3)}),r.sendToChannel(e,36);break}case 156:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendTMP1200_1(e,t){var r,i;const a=new DataView(new ArrayBuffer(4));switch(e.chDef.uid){case 434:switch(t.vpkt){case 54:{const i=null===(r=e.parent.parent)||void 0===r?void 0:r.at(t,1);if(!i)throw new PhidgetError(ErrorCode.UNEXPECTED);a.setUint16(0,i),await e.sendVINTDataPacket(252,new Uint8Array(a.buffer,0,2))}break;case 46:a.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(58,new Uint8Array(a.buffer));break;case 77:a.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(192,new Uint8Array(a.buffer,0,1));break;case 76:a.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(63,new Uint8Array(a.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 435:switch(t.vpkt){case 54:{const r=null===(i=e.parent.parent)||void 0===i?void 0:i.at(t,1);if(!r)throw new PhidgetError(ErrorCode.UNEXPECTED);a.setUint16(0,r),await e.sendVINTDataPacket(252,new Uint8Array(a.buffer,0,2))}break;case 46:a.setFloat32(0,t.getNumber(0),!0),await e.sendVINTDataPacket(155,new Uint8Array(a.buffer));break;case 77:a.setUint8(0,t.getNumber(0)),await e.sendVINTDataPacket(192,new Uint8Array(a.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}function recvTMP1200_1(e,t){let r,i;const a=t.getUint8(0);switch(e.chDef.uid){case 434:switch(a){case 59:{if(r=t.getFloat32(1,!0),t.byteLength>5)if(r>0){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),t.set({name:"1",type:"s",value:"Temperature is too high to be accurately measured."}),e.sendErrorEvent(t)}else{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION}),t.set({name:"1",type:"s",value:"Temperature is too low to be accurately measured."}),e.sendErrorEvent(t)}const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,3)}),i.sendToChannel(e,95);break}case 60:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:"Temperature is unknown."}),e.sendErrorEvent(t);break}case 64:if(t.getUint8(1)){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),t.set({name:"1",type:"s",value:"Bad Connection: Check polarity of connection."}),e.sendErrorEvent(t)}else{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),t.set({name:"1",type:"s",value:"Bad Connection: RTD is likely disconnected."}),e.sendErrorEvent(t)}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;case 435:switch(a){case 154:{if(i=t.getFloat32(1,!0),t.byteLength>5)if(i>0){const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),t.set({name:"1",type:"s",value:"Resistance is too high to be accurately measured."}),e.sendErrorEvent(t)}else{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),t.set({name:"1",type:"s",value:"Bad Connection: check polarity of connection."}),e.sendErrorEvent(t)}const r=new BridgePacket;r.set({name:"0",type:"g",value:RoundDouble(i,3)}),r.sendToChannel(e,36);break}case 64:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),t.set({name:"1",type:"s",value:"Bad Connection."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}break;default:throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID")}}async function sendTMP1200_2(e,t){throw new Error("Not Implemented")}function recvTMP1200_2(e,t){throw new Error("Not Implemented")}async function sendVCP1000(e,t){const r=new DataView(new ArrayBuffer(4));if(441!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,4));break;case 87:switch(r.setUint8(0,t.getNumber(0)),t.getNumber(0)){case VoltageRange.MILLIVOLTS_312_5:case VoltageRange.VOLTS_40:break;default:throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid or unsupported voltage range for this device.")}await e.sendVINTDataPacket(21,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvVCP1000(e,t){let r;const i=t.getUint8(0);if(441!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 17:{r=t.getInt32(1)/(1<<24);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,7)}),i.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendVCP1001(e,t){const r=new DataView(new ArrayBuffer(4));if(442!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,4));break;case 87:switch(r.setUint8(0,t.getNumber(0)),t.getNumber(0)){case VoltageRange.VOLTS_5:case VoltageRange.VOLTS_15:case VoltageRange.VOLTS_40:case VoltageRange.AUTO:break;default:throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid or unsupported voltage range for this device.")}await e.sendVINTDataPacket(19,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvVCP1001(e,t){let r;const i=t.getUint8(0);if(442!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 17:{r=t.getInt32(1)/(1<<24);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,4)}),i.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendVCP1002(e,t){const r=new DataView(new ArrayBuffer(4));if(444!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(t.vpkt){case 54:r.setUint16(0,t.getNumber(0)),await e.sendVINTDataPacket(252,new Uint8Array(r.buffer,0,2));break;case 46:r.setUint32(0,t.getNumber(0)*(1<<24)),await e.sendVINTDataPacket(16,new Uint8Array(r.buffer,0,4));break;case 87:switch(r.setUint8(0,t.getNumber(0)),t.getNumber(0)){case VoltageRange.MILLIVOLTS_10:case VoltageRange.MILLIVOLTS_40:case VoltageRange.MILLIVOLTS_200:case VoltageRange.MILLIVOLTS_1000:case VoltageRange.AUTO:break;default:throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid or unsupported voltage range for this device.")}await e.sendVINTDataPacket(20,new Uint8Array(r.buffer,0,1));break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}function recvVCP1002(e,t){let r;const i=t.getUint8(0);if(444!==e.chDef.uid)throw new PhidgetError(ErrorCode.INVALID,"Invalid Channel UID");switch(i){case 17:{r=t.getInt32(1)/(1<<24);const i=new BridgePacket;i.set({name:"0",type:"g",value:RoundDouble(r,7)}),i.sendToChannel(e,101);break}case 18:{const t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),t.set({name:"1",type:"s",value:"Saturation Detected."}),e.sendErrorEvent(t);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}async function sendVCP1001_110(e,t){await sendVCP1001(e,t)}function recvVCP1001_110(e,t){return recvVCP1001(e,t)}async function sendVCP1002_110(e,t){await sendVCP1002(e,t)}function recvVCP1002_110(e,t){return recvVCP1002(e,t)}async function sendFIRMWARE_UPGRADE_STM32F0(e,t){throw new Error("Not Implemented")}function recvFIRMWARE_UPGRADE_STM32F0(e,t){throw new Error("Not Implemented")}async function sendFIRMWARE_UPGRADE_STM32G0_BLBug(e,t){throw new Error("Not Implemented")}function recvFIRMWARE_UPGRADE_STM32G0_BLBug(e,t){throw new Error("Not Implemented")}async function sendFIRMWARE_UPGRADE_STM32G0(e,t){throw new Error("Not Implemented")}function recvFIRMWARE_UPGRADE_STM32G0(e,t){throw new Error("Not Implemented")}async function sendFIRMWARE_UPGRADE_STM32F3(e,t){throw new Error("Not Implemented")}function recvFIRMWARE_UPGRADE_STM32F3(e,t){throw new Error("Not Implemented")}async function sendFIRMWARE_UPGRADE_STM8S(e,t){throw new Error("Not Implemented")}function recvFIRMWARE_UPGRADE_STM8S(e,t){throw new Error("Not Implemented")}async function sendUNKNOWNVINT(e,t){throw new Error("Not Implemented")}function recvUNKNOWNVINT(e,t){throw new Error("Not Implemented")}const USBVID_PHIDGETS=1730,USBPID_PHIDGETS_MIN=48,USBPID_PHIDGETS_MAX=175,USBD_PHIDGET_PROTO_VERSION=272,USB_CONFIGURATION_DESCRIPTOR=9,USB_COMMON_DESCRIPTOR=2;async function GetPhidgetDeviceParams(e){let t=null,r=null,i=null;const a={maxPacketEP0:0,ep1type:0,maxPacketEP1:0,ep2type:0,maxPacketEP2:0,wMaxPacketSizeEP1:0,labelIndex:0,skuIndex:0};let s=null;const n=await GetConfigDescriptor(e,0),o=(n.getUint8(0),n.getUint8(1),n.getUint8(3)<<8|n.getUint8(2));n.getUint8(4),n.getUint8(5),n.getUint8(6),n.getUint8(7),n.getUint8(8);s=0+o,a.ep1type=0,a.maxPacketEP1=0,a.ep2type=0,a.maxPacketEP2=0;let h=0;for(;h+2<s&&h+n.getUint8(h)<=s;){switch(n.getUint8(h+1)){case 2:if(9!==n.getUint8(h))throw new PhidgetError(ErrorCode.UNEXPECTED,"Error parsing config descriptor!");break;case 4:break;case 5:if(7!==n.getUint8(h))throw new PhidgetError(ErrorCode.UNEXPECTED,"Error parsing config descriptor!");t={bLength:n.getUint8(h),bDescriptorType:n.getUint8(h+1),bEndpointAddress:n.getUint8(h+2),bmAttributes:n.getUint8(h+3),wMaxPacketSize:n.getUint8(h+5)<<8|n.getUint8(h+4),bInterval:n.getUint8(h+6)},129===t.bEndpointAddress&&(a.wMaxPacketSizeEP1=t.wMaxPacketSize,2===t.bmAttributes&&(a.ep1type=1),3===t.bmAttributes&&(a.ep1type=2)),2===t.bEndpointAddress&&(a.maxPacketEP2=t.wMaxPacketSize,a.ep2type=1);break;case 64:if(8!==n.getUint8(h))throw new PhidgetError(ErrorCode.UNEXPECTED,"Error parsing config descriptor!");if(r={bLength:n.getUint8(h),bDescriptorType:n.getUint8(h+1),bcdVersion:n.getUint8(h+3)<<8|n.getUint8(h+2),iLabel:n.getUint8(h+4),iSKU:n.getUint8(h+5),wMaxPacketSize:n.getUint8(h+7)<<8|n.getUint8(h+6)},272!==r.bcdVersion)throw new PhidgetError(ErrorCode.UNSUPPORTED,"Unknown Phidget descriptor version: "+r.bcdVersion+" - Library upgrade may be required.");a.labelIndex=r.iLabel,a.skuIndex=r.iSKU,a.maxPacketEP0=r.wMaxPacketSize;break;case 66:if(4!==n.getUint8(h))throw new PhidgetError(ErrorCode.UNEXPECTED,"Error parsing config descriptor!");if(i={bLength:n.getUint8(h),bDescriptorType:n.getUint8(h+1),wMaxPacketSize:n.getUint8(h+3)<<8|n.getUint8(h+2)},null==t)throw new PhidgetError(ErrorCode.UNEXPECTED,"Didn't get Phidget Endpoint descriptor!");1==(127&t.bEndpointAddress)&&(a.maxPacketEP1=i.wMaxPacketSize),2==(127&t.bEndpointAddress)&&(a.maxPacketEP2=i.wMaxPacketSize)}h+=n.getUint8(h)}return a}async function GetPhidgetUSBData(e){var t,r;let i;if(1730!==e.vendorId)throw new PhidgetError(ErrorCode.UNSUPPORTED);if(e.productId<48||e.productId>175)throw new PhidgetError(ErrorCode.UNSUPPORTED);i=await GetDescriptor(e,1,0,0);const a={bLength:i.getUint8(0),bDescriptorType:i.getUint8(1),bcdUSB:i.getUint8(3)<<8|i.getUint8(2),bDeviceClass:i.getUint8(4),bDeviceSubClass:i.getUint8(5),bDeviceProtocol:i.getUint8(6),bMaxPacketSize0:i.getUint8(7),idVendor:i.getUint8(9)<<8|i.getUint8(8),idProduct:i.getUint8(11)<<8|i.getUint8(10),bcdDevice:i.getUint8(13)<<8|i.getUint8(12),iManufacturer:i.getUint8(14),iProduct:i.getUint8(15),iSerialNumber:i.getUint8(16),bNumConfigurations:i.getUint8(17)};i=await GetDescriptor(e,3,a.iSerialNumber,0);const s=1e3*(a.bcdDevice>>12&15)+100*(a.bcdDevice>>8&15)+10*(a.bcdDevice>>4&15)+(15&a.bcdDevice),n=parseInt(WordByteArrayToString(new Uint16Array(i.buffer,2))),o=await GetPhidgetDeviceParams(e);i=await GetDescriptor(e,3,o.skuIndex,0);const h=WordByteArrayToString(new Uint16Array(i.buffer,2)),c=null!==(r=null===(t=e.configuration)||void 0===t?void 0:t.interfaces[0].interfaceNumber)&&void 0!==r?r:0;let d="";if(0!=o.labelIndex){const t=await GetDescriptor(e,3,o.labelIndex,0);if(t.byteLength<=22){if(t.getUint8(0)>2){d=WordByteArrayToString(new Uint16Array(t.buffer).slice(1))}}}return{version:s,serialNumber:n,productID:e.productId,vendorID:e.vendorId,interfaceNum:c,fwstr:h,label:d,pusbParams:o}}async function GetDescriptor(e,t,r,i){let a;const s={requestType:"standard",recipient:"device",request:6,value:t<<8|r,index:i};try{a=await e.controlTransferIn(s,2)}catch(e){throw new PhidgetError(ErrorCode.IO,"Failed to read descriptor",e)}if("ok"!==a.status)throw new PhidgetError(ErrorCode.UNEXPECTED,"Failed to read descriptor: "+a.status);if(!a.data||2!=a.data.byteLength)throw new PhidgetError(ErrorCode.UNEXPECTED,"GetDescriptor error - returned unexpected number of bytes");const n=a.data.getUint8(0);if(n<=2)return a.data;try{a=await e.controlTransferIn(s,n)}catch(e){throw new PhidgetError(ErrorCode.IO,"Failed to read descriptor",e)}if("ok"!==a.status)throw new PhidgetError(ErrorCode.UNEXPECTED,"Failed to read descriptor: "+a.status);if(!a.data||a.data.byteLength!=n)throw new PhidgetError(ErrorCode.UNEXPECTED,"GetDescriptor error - returned unexpected number of bytes");return a.data}async function GetConfigDescriptor(e,t){const r={requestType:"standard",recipient:"device",request:6,value:512|t,index:0};let i=await e.controlTransferIn(r,9);if("ok"!==i.status)throw new PhidgetError(ErrorCode.UNEXPECTED,"Failed to read descriptor: "+i.status);if(!i.data)throw new PhidgetError(ErrorCode.UNEXPECTED,"GetDescriptor error - returned unexpected number of bytes");const a=i.data.getUint8(3)<<8|i.data.getUint8(2);if(a<9)throw new PhidgetError(ErrorCode.UNEXPECTED,"GetDescriptor error - too short!");if(i=await e.controlTransferIn(r,a),"ok"!==i.status)throw new PhidgetError(ErrorCode.UNEXPECTED,"Failed to read descriptor: "+i.status);if(!i.data)throw new PhidgetError(ErrorCode.UNEXPECTED,"GetDescriptor error - returned unexpected number of bytes");if(i.data.byteLength!==a)throw new PhidgetError(ErrorCode.UNEXPECTED,"GetDescriptor error - returned unexpected number of bytes");return i.data}class PhidgetUSBDevice extends LocalDevice{constructor(e,t,r){super(e,t),this.usbDevice=r,this.phidlock=new PhidgetLock,this.readlock=new PhidgetLock,this.writelock=new PhidgetLock,this.openCnt=0,this.interfaceNum=t.interfaceNum,this.pusbParams=t.pusbParams,this.sku}get opened(){return this.usbDevice.opened}get claimed(){var e,t;return null!==(t=null===(e=this.usbDevice.configuration)||void 0===e?void 0:e.interfaces[0].claimed)&&void 0!==t&&t}async open(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];if(!this.phidlock.locked)throw new Error("Device MUST be locked before calling open");if(this.closing=!1,!this.opened)try{this.openCnt=0,await this.usbDevice.open(),null===this.usbDevice.configuration&&await this.usbDevice.selectConfiguration(1)}catch(e){throw this.closing=!0,await this.usbDevice.close(),this.openCnt=0,new PhidgetError(ErrorCode.IO,"Error during USB open",e)}if(this.openCnt++,e&&!this.claimed){try{await this.usbDevice.claimInterface(0)}catch(e){throw this.closing=!0,await this.usbDevice.close(),this.openCnt=0,new PhidgetError(ErrorCode.IO,"Failed to claim interface: ",e)}try{await this.openReset(),await this.initAfterOpen()}catch(e){throw this.closing=!0,await this.usbDevice.close(),this.openCnt=0,logerr("Device Initialization failed",e),e instanceof PhidgetError&&e.errorCode===ErrorCode.BAD_VERSION&&logwarn("This Phidget requires a new library - please upgrade."),e}loginfo("Opened USB Phidget: "+this),1===this.conn.nt&&this.conn.ot(this.usbDevice,129,500),this.pollUSBData().catch((e=>{this.closing||(logerr("Error polling USB Data",e),this.conn.ht(this))}))}}async pollUSBData(){for(;this.opened&&!this.closing;)try{this.dataInput(await this.readPacket())}catch(e){if(e.errorCode!==ErrorCode.TIMEOUT)throw e}throw new PhidgetError(ErrorCode.NOT_ATTACHED)}async close(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!this.phidlock.locked)throw new Error("Device MUST be locked before calling close");if(this.opened)if(e&&(this.openCnt=1),this.openCnt--,this.openCnt>0)logdebug("Leaving USB device open, as open count is: "+this.openCnt);else if(t){if(!this.claimed)throw new PhidgetError(ErrorCode.UNEXPECTED,"USB Interface is already released");try{this.closing=!0,await this.closeReset();try{1===this.conn.nt&&(await this.readlock.acquire(),await this.writelock.acquire()),this.openCnt=0,await this.usbDevice.releaseInterface(0),await this.usbDevice.close()}finally{1===this.conn.nt&&(this.readlock.release(),this.writelock.release())}loginfo("Closed USB Phidget: "+this)}catch(e){throw new PhidgetError(ErrorCode.IO,"Failure during USB close",e)}}else try{this.closing=!0,this.openCnt=0,await this.usbDevice.close()}catch(e){throw new PhidgetError(ErrorCode.IO,"Failed to close USB handle",e)}}async transferPacket(e,t,r,i){switch(e){case 0:case 2:case 4:case 6:{let a;if(6===e){if(null==i||"object"!=typeof i)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);if(i.byteLength>this.pusbParams.maxPacketEP2)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);if(1!==this.pusbParams.ep2type)throw new PhidgetError(ErrorCode.UNSUPPORTED);logbuffer("USB Bulk OUT Packet",i);try{1===this.conn.nt&&await this.writelock.acquire(),a=await this.usbDevice.transferOut(2,i)}catch(e){throw new PhidgetError(ErrorCode.IO,"USB Bulk transfer failed",e)}finally{1===this.conn.nt&&this.writelock.release()}}else{const s={requestType:"vendor",recipient:"interface",request:e,value:t<<8|r,index:this.interfaceNum};if(null!=i&&"object"==typeof i){if(i.byteLength>this.pusbParams.maxPacketEP0)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);logbuffer("USB Control OUT Packet",i);try{1===this.conn.nt&&await this.writelock.acquire(),a=await this.usbDevice.controlTransferOut(s,i)}catch(e){throw new PhidgetError(ErrorCode.IO,"USB Control OUT transfer failed",e)}finally{1===this.conn.nt&&this.writelock.release()}}else try{1===this.conn.nt&&await this.writelock.acquire(),a=await this.usbDevice.controlTransferOut(s)}catch(e){throw new PhidgetError(ErrorCode.IO,"USB Control OUT transfer failed",e)}finally{1===this.conn.nt&&this.writelock.release()}}if("ok"!==a.status)throw new PhidgetError(ErrorCode.IO,"controlTransferOut error. Status: "+a.status);if(null!=i&&"object"==typeof i&&a.bytesWritten!==i.byteLength)throw new PhidgetError(ErrorCode.UNEXPECTED,"USB send failed to write expected number of bytes.");break}case 1:case 3:case 5:{if("number"!=typeof i)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);i>this.pusbParams.maxPacketEP0&&(i=this.pusbParams.maxPacketEP0);const a={requestType:"vendor",recipient:"interface",request:e,value:t<<8|r,index:this.interfaceNum};let s;try{1===this.conn.nt&&await this.writelock.acquire(),s=await this.usbDevice.controlTransferIn(a,i)}catch(e){throw new PhidgetError(ErrorCode.IO,"USB Control IN transfer failed",e)}finally{1===this.conn.nt&&this.writelock.release()}if("ok"!==s.status)throw new PhidgetError(ErrorCode.IO,"USB Control Transfer failure: "+s.status);if(null==s.data)throw new PhidgetError(ErrorCode.IO,"USB Control IN failed to read data");return logbuffer("USB Control IN Packet",s.data),s.data}default:throw new PhidgetError(ErrorCode.UNEXPECTED)}}async readPacket(){let e;if(1===this.conn.nt)try{await this.readlock.acquire(),e=await this.usbDevice.transferIn(1,this.pusbParams.maxPacketEP1)}catch(e){if(e instanceof Error&&e.message.includes("LIBUSB_TRANSFER_TIMED_OUT"))throw new PhidgetError(ErrorCode.TIMEOUT,"Read timed out",e);throw new PhidgetError(ErrorCode.IO,"Error reading USB packet",e)}finally{this.readlock.release()}else try{e=await this.usbDevice.transferIn(1,this.pusbParams.maxPacketEP1)}catch(e){throw new PhidgetError(ErrorCode.IO,"Error reading USB packet",e)}if("ok"!==e.status)throw new PhidgetError(ErrorCode.IO,"USB IN Transfer failure: "+e.status);if(null==e.data)throw new PhidgetError(ErrorCode.IO,"USB IN Transfer failed to read data");return logbuffer("Received USB Packet",e.data),e.data}async readDescriptor(e,t){let r;try{1===this.conn.nt&&await this.writelock.acquire(),r=await GetDescriptor(this.usbDevice,e,t,0)}finally{1===this.conn.nt&&this.writelock.release()}return r}getMaxOutPacketSize(){return 0!==this.pusbParams.ep2type?this.pusbParams.maxPacketEP2:this.pusbParams.maxPacketEP0}async writeLabel(e){if(e.length>10)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Label is too long. Max 10 characters.");if(void 0!==e||null!==e){const t=new Uint8Array(StringToWordByteArray(e).buffer),r=[0,3,...values(t).call(t)];r[0]=r.length,await this.transferPacket(4,36,0,new Uint8Array(r)),this.label=e}}async closeReset(){await this.transferPacket(4,33,0)}async openReset(){await this.transferPacket(4,32,0)}async rebootFirmwareUpgrade(){await this.transferPacket(4,1,0)}async lock(){await this.phidlock.acquire()}unlock(){this.phidlock.release()}at(e,t){let r=e.getNumber(0);return r%t!=0&&(r=(r/t+1)*t,e.remove("0"),e.set({name:"0",type:"u",value:r})),e.entryCount>1&&e.set({name:"1",type:"g",value:r}),r}}const HUB_PORT_ID_MAX=15,VINTHUB_MAXPORTS=6,PACKETID_MAX=126,PACKETIDS_PER_PORT=21,PACKETRETURN_notACK=128,INPACKET_HUBMSG_FLAG=128,IN_VINTPACKET_START=8,UNKNOWN_VINT_ID=4080;class HubDevice extends PhidgetUSBDevice{constructor(e,t,r){switch(super(e,t,r),this.devDef.uid){case 225:case 227:case 228:case 237:case 226:case 229:case 230:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}this.vintDevices={},this.hubPortProps=[],this.outstandingPacketCnt=new Array(this.numVintPorts).fill(0),this.packetOutCounter=new Array(this.numVintPorts).fill(0),this.internalPacketInBufferLen=0,this.packetCounter=-1,this.splitPacketStoragePtr=0,this.splitPacketStorage=new Array(54).fill(0),this.scanError=0,this.packetTrackers=new PacketTrackers}get numVintPorts(){return this.devDef.cn[0]}get numVintPortModes(){return this.devDef.cn[1]}async initAfterCreate(){for(let e=0;e<this.numVintPorts;e++)await this.updatePortProperties(e)}makePacket(e,t,r){const i=new Uint8Array(new ArrayBuffer(128));if(i.byteLength<this.getMaxOutPacketSize())throw new PhidgetError(ErrorCode.UNEXPECTED);if(null==r&&(r=new Uint8Array(0)),this.getMaxOutPacketSize()<r.length+4)throw new PhidgetError(ErrorCode.UNEXPECTED);return i.set([this.packetOutCounter[e.hubPort]<<4&240|15&e.hubPort],0),i.set([255&e.vintID],1),i.set([e.vintID>>4&240],2),i.set([t],3),i.set(r,4),i.slice(0,r.length+4)}async openAndUpdatePortProperties(e){try{await this.lock();let t=!1;try{await this.open(!1),t=!0,await this.updatePortProperties(e)}finally{t&&await this.close(!1,!1)}}finally{this.unlock()}}async updatePortProperties(e){let t,r;const i=await this.readDescriptor(69,e),a={bLength:i.getUint8(0),bDescriptorType:i.getUint8(1),bPortMode:i.getUint8(2),bPowered:i.getUint8(3),dwSpeedHz:i.getUint32(4,!0),bVINTProtocolVersion:i.getUint8(8),VINTProperties:new DataView(i.buffer,9)};this.hubPortProps[e]={portProto:a.bVINTProtocolVersion,portSpeed:a.dwSpeedHz,portMode:a.bPortMode,portPowered:!!a.bPowered,portSuppSetSpeed:!1,portSuppAutoSetSpeed:!1,portMaxSpeed:1e5};for(let i=0;i<a.VINTProperties.byteLength;i+=r)switch(t=31&a.VINTProperties.getUint8(i),r=1+((224&a.VINTProperties.getUint8(i))>>5),t){case 2:this.hubPortProps[e].portSuppSetSpeed=!0;break;case 4:this.hubPortProps[e].portSuppAutoSetSpeed=!0;break;case 3:this.hubPortProps[e].portMaxSpeed=a.VINTProperties.getUint32(i+1,!1);break;default:loginfo("Unknown VINT Port property: "+t)}}async sendHubPacket(e,t){await this.transferPacket(2,64|e,0,t)}async sendHubPortPacket(e,t,r){await this.transferPacket(0,64|t,e,r)}processPacketReturnCodes(e,t){let r=0;for(;r<t;){const t=127&e.getUint8(r),i=Math.trunc((t-1)/21);let a=224;128&e.getUint8(r)&&(r++,a=e.getUint8(r)),r++;const s=()=>{233!==a&&loginfo("An unexpected PacketID was returned: "+t+"("+a+" - "+VINTPacketDescription[a]+"). Probably this packet is from a previous session or detached device."),this.readInTXBufferCounts(i).catch((e=>{logwarn("Failure to read TX Buffer counts",e)}))},n=this.packetTrackers.packetTracker.get(t);if(!n){s();continue}const o=n.len;logverbose("Packet "+t+" response: "+a+" - "+VINTPacketDescription[a]+", Port "+i);const h=VINTPacketCode_to_PhidgetReturnCode[a];try{n.setPacketReturnCode(h)}catch(e){s();continue}switch(this.releasePacketSpace(i,o),h){case ErrorCode.SUCCESS:case ErrorCode.NOT_CONFIGURED:case ErrorCode.INVALID_ARGUMENT:case ErrorCode.INVALID:case ErrorCode.INVALID_PACKET:break;case ErrorCode.NO_SPACE:logerr("Got a NOSPACE response from a VINT device, Port "+i+". This usually indicates firmware problems."),this.readInTXBufferCounts(i).catch((e=>{logwarn("Failure to read TX Buffer counts",e)}));break;case ErrorCode.NOT_ATTACHED:loginfo("Got a NOTATTACHED response from a VINT device, Port "+i);break;case ErrorCode.BUSY:logerr("Got a NAK response form a VINT device, Port "+i+". This means the device decided not to deal with this data; try again.");break;case ErrorCode.FILE_TOO_BIG:logerr("Got a TOOBIG response from a VINT device, Port "+i+". This means the packet was too big.");break;case ErrorCode.UNEXPECTED:default:logerr("Got an unexpected response from a VINT device: "+a+" - "+VINTPacketDescription[a]+". This usually indicates firmware problems.")}}}processVintPacket(e){const t=7&e.getUint8(0),r=((240&e.getUint8(0))<<4)+e.getUint8(1),i=63&e.getUint8(2);let a=t;r<=15&&(a+=r*this.numVintPorts);const s=this.vintDevices[a];s&&(s.vintID===r?s.dataInput(new DataView(e.buffer,2+e.byteOffset,i+1)):loginfo("Seeing VINT Data on Port: "+t+" for VINT Device: "+r+", but device in structure is: "+s.vintID))}async readInTXBufferCounts(e){this.outstandingPacketCnt[e]=0x10000000000000000,await this.sendHubPacket(2)}async initAfterOpen(){let e;for(this.internalPacketInBufferLen=0x10000000000000000,e=0;e<this.numVintPorts;e++)this.outstandingPacketCnt[e]=0x10000000000000000;this.packetCounter=-1,this.splitPacketStoragePtr=0;const t=await this.transferPacket(3,66,0,7);if(t.byteLength!==this.numVintPorts+1)throw new PhidgetError(ErrorCode.UNEXPECTED,"Bad buffer length from transferpacket from HubDevice");for(this.internalPacketInBufferLen=t.getUint8(0),e=0;e<this.numVintPorts;e++)this.outstandingPacketCnt[e]=this.internalPacketInBufferLen-1-t.getUint8(e+1)}dataInput(e){let t;const r=e.getUint8(0)>>4&7,i=15&e.getUint8(0),a=e.byteLength-i;let s=63&e.getUint8(1),n=2,o=!1;if(this.processPacketReturnCodes(new DataView(e.buffer,a),e.byteLength-a),128&e.getUint8(1))switch(e.getUint8(n)){case 0:n++,logdebug("VINTHUB_HUBINPACKET_TXBUFFERSTATUS packet filling outstandingPacketCnt");for(let t=0;t<this.numVintPorts;t++)this.outstandingPacketCnt[t]=this.internalPacketInBufferLen-1-e.getUint8(n++);break;case 1:n++;for(let t=0;t<this.numVintPorts;t++)if(e.getUint8(n)&1<<t){logwarn("Hub overcurrent detected on Port: "+t);const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OVER_CURRENT}),e.set({name:"1",type:"s",value:"Hub overcurrent detected on Port "+t+". Check for short."});for(const r in this.vintDevices)if(this.vintDevices[r].hubPort===t)for(const t in this.vintDevices[r].channels){const i=this.vintDevices[r].channels[t];i.isopen&&i.sendErrorEvent(e)}}n++;break;case 2:n++;for(let t=0;t<this.numVintPorts;t++)e.getUint8(n)&1<<t&&this.vintDevices[t]&&(this.conn.m(this.vintDevices[t]),delete this.vintDevices[t]);n++;break;case 3:n++;for(let t=0;t<this.numVintPorts;t++)e.getUint8(n)&1<<t&&logwarn("Invalid VINT activity detected on Port: "+t+". This can be safely ignored if something other than a VINT device is attached.");n++;break;case 4:n++;for(let t=0;t<this.numVintPorts;t++)e.getUint8(n)&1<<t&&this.updatePortProperties(t).then((()=>{loginfo("Hub Port Speed changed to: "+this.hubPortProps[t].portSpeed+" on Port: "+t+".")}),(e=>{logwarn("Error updating port properties",e)}));n++;break;case 5:n++;for(let t=0;t<this.numVintPorts;t++)e.getUint8(n)&1<<t&&logwarn("Re-Enumeration on Port: "+t+". This could indicate EMI issues, an unstable Hub Port Speed, or firmware issues.");n++;break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Got unexpected InPacketType: "+e.getUint8(n))}if(-1===this.packetCounter)n+=s;else if(this.packetCounter!==r)logwarn("One or more data packets were lost on the Hub."),this.splitPacketStoragePtr=0,n+=s,o=!0,this.sendHubPacket(2).catch((e=>{logwarn("Error reading TX Buffer Status",e)}));else if(s&&!this.splitPacketStoragePtr)throw new PhidgetError(ErrorCode.UNEXPECTED,"Problem with split data in vint packet. This should be a firmware/library bug.");if(this.packetCounter=r+1&7,this.splitPacketStoragePtr){for(;s--;)this.splitPacketStorage[this.splitPacketStoragePtr++]=e.getUint8(n++);this.processVintPacket(new DataView(new Uint8Array(this.splitPacketStorage).buffer)),this.splitPacketStoragePtr=0}for(;n<a&&0!=(8&e.getUint8(n));){if(n<a-2){if(128&e.getUint8(n+2))throw new PhidgetError(ErrorCode.UNEXPECTED,"Got an unexpected MSG in vint data: "+e.getUint8(n+2));if(t=63&e.getUint8(n+2),n+3+t<=a){this.processVintPacket(new DataView(e.buffer,n)),n+=t+3;continue}}for(;n<a;)this.splitPacketStorage[this.splitPacketStoragePtr++]=e.getUint8(n++)}if(o){loginfo("Killing outstanding packets on hub");for(let e=0;e<this.numVintPorts;e++)this.outstandingPacketCnt[e]&&(this.outstandingPacketCnt[e]=0x10000000000000000),this.packetTrackers.setPacketsReturnCode(e,ErrorCode.INTERRUPTED)}}async bridgeInput(e,t){switch(t.vpkt){case 60:{const e=t.getNumber(0),r=t.getNumber(1),i=new Uint8Array([255&r,r>>8&255]);await this.sendHubPortPacket(e,1,i);break}case 72:{const e=t.getNumber(0);await this.setPortMode(e,t.getNumber(1));break}case 73:{const e=t.getNumber(0),r=new Uint8Array([t.getNumber(1)]);await this.sendHubPortPacket(e,3,r);break}case 107:throw new PhidgetError(ErrorCode.UNSUPPORTED);case 34:case 111:case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}}async setPortMode(e,t){if(!this.opened)throw new PhidgetError(ErrorCode.NOT_ATTACHED);const r=new Uint8Array([t]);logdebug("Setting Port: "+e+" mode to "+t+" on "+this.name),await this.sendHubPortPacket(e,0,r)}releasePacketSpace(e,t){if(0x10000000000000000!==this.outstandingPacketCnt[e]){if(this.outstandingPacketCnt[e]<t?this.outstandingPacketCnt[e]=0:this.outstandingPacketCnt[e]-=t,this.outstandingPacketCnt[e]>this.internalPacketInBufferLen)throw new PhidgetError(ErrorCode.UNEXPECTED,"PacketSpace is out of spec");logverbose("Releasing "+t+" bytes, "+(this.internalPacketInBufferLen-this.outstandingPacketCnt[e])+" remaining, Port "+e)}}async claimPacketSpace(e,t){if(!this.opened)throw new PhidgetError(ErrorCode.NOT_ATTACHED);const r=Date.now()+2e3;for(;;){const i=this.outstandingPacketCnt[e];if(0x10000000000000000!==i&&i+t<this.internalPacketInBufferLen)break;if(Date.now()>=r)throw new PhidgetError(ErrorCode.TIMEOUT,"Timed out claiming packet space, Port "+e);await PhidgetSleep(2)}this.outstandingPacketCnt[e]+=t,logverbose("Claiming "+t+" bytes, "+(this.internalPacketInBufferLen-this.outstandingPacketCnt[e])+" remaining, Port "+e)}async scanVINTDevice(e,t,r,i,a){var s;let n,o,h,c;for(const d of PhidgetDevices.VINT){if(d.i!==t)continue;if(r>=d.v[1]||r<d.v[0])continue;const u=this.vintDevices[e];if(u){if(u.devDef===d&&u.version===r)return;this.conn.m(u),delete this.vintDevices[e]}const l={vintProto:255,suppSetSpeed:!1,suppAutoSetSpeed:!1,maxSpeed:4294967295,commSpeed:4294967295,hubPort:i,isHubPort:t<=15,uniqueIndex:e};if(t>15)try{o=await this.readDescriptor(68,i),n={bLength:o.getUint8(0),bDescriptorType:o.getUint8(1),wID:o.getUint16(2),wVersion:o.getUint16(4,!0),bVINTProtocolVersion:o.getUint8(6),VINTProperties:new DataView(o.buffer,7)},l.vintProto=n.bVINTProtocolVersion;for(let e=0;e<n.VINTProperties.byteLength;e+=c)switch(h=31&n.VINTProperties.getUint8(e),c=1+((224&n.VINTProperties.getUint8(e))>>5),h){case 0:case 1:break;case 2:l.suppSetSpeed=!0;break;case 4:l.suppAutoSetSpeed=!0;break;case 3:l.maxSpeed=n.VINTProperties.getUint32(e+1,!1);break;default:loginfo("Unknown VINT Device Property: "+n.VINTProperties.getUint8(e))}await this.updatePortProperties(i)}catch(e){logwarn("Couldn't read VINT Device descriptor from a Hub",e)}l.commSpeed=null!==(s=this.hubPortProps[i].portSpeed)&&void 0!==s?s:4294967295;const g={type:"VINT",version:r,label:this.label,serialNumber:this.serialNumber,devDef:d,fwstr:d.s,id:this.devDef.uid+"_"+this.serialNumber+"_"+i+"_"+d.uid,parent:this,vintDeviceProps:l},w=new VINTDevice(this.conn,g);return this.vintDevices[w.index]=w,this.conn.ct(w),void(4080===t&&logwarn("A VINT Phidget (ID: "+a+" Version: "+r+" HubPort: "+i+") was found which is not supported by the library. A library upgrade is required to work with this Phidget."))}await this.scanVINTDevice(e,4080,r,i,t)}async scanVINTDevices(){let e,t,r,i,a,s=await this.readDescriptor(67,0);const n=s.byteLength;if(s=new DataView(s.buffer.slice(2)),n!==4*this.numVintPorts+4*this.numVintPortModes+2)throw new PhidgetError(ErrorCode.UNEXPECTED,"Wrong VINT Ports descriptor length from Hub: "+n+"/"+(4*this.numVintPorts+4*this.numVintPortModes+2));for(r=0,e=0;e<this.numVintPorts;e++)i=s.getUint16(0,!0),a=100*s.getUint8(3)+s.getUint8(2),s=new DataView(s.buffer.slice(4)),i>15?await this.scanVINTDevice(r,i,a,e):this.vintDevices[r]&&(this.conn.m(this.vintDevices[r]),delete this.vintDevices[r]),r++,i>HubPortMode.VINT&&i<=15&&await this.resetVINTPortModeIfNeeded(e,i);for(t=0;t<this.numVintPortModes;t++)for(i=s.getUint16(0,!0),a=100*s.getUint8(3)+s.getUint8(2),s=new DataView(s.buffer.slice(4)),e=0;e<this.numVintPorts;e++)await this.scanVINTDevice(r++,i,a,e)}async resetVINTPortModeIfNeeded(e,t){if(t!==HubPortMode.VINT)for(const t of UserPhidgets){if(t.N)continue;if(t.Y!==e)continue;if(t.H)continue;if(t.q===Phidget.ANY_SERIAL_NUMBER&&t.W===Phidget.ANY_LABEL)continue;if(t.q!==Phidget.ANY_SERIAL_NUMBER&&t.q!==this.serialNumber)continue;if(t.W!==Phidget.ANY_LABEL&&t.W!==this.label)continue;let r=!1;try{await this.open(),r=!0,await this.setPortMode(e,HubPortMode.VINT)}finally{r&&await this.close()}}}}function getVINTIO(e){switch(e){case 21:return{send:send1014_3_VINT,recv:recv1014_3_VINT};case 26:return{send:send1017_2_VINT,recv:recv1017_2_VINT};case 69:return{send:send1055_1_VINT,recv:recv1055_1_VINT};case 96:return{send:sendDIGITALINPUT_PORT,recv:recvDIGITALINPUT_PORT};case 97:return{send:sendDIGITALOUTPUT_PORT,recv:recvDIGITALOUTPUT_PORT};case 98:return{send:sendDIGITALOUTPUT_PORT_FAILSAFE,recv:recvDIGITALOUTPUT_PORT_FAILSAFE};case 99:return{send:sendVOLTAGEINPUT_PORT,recv:recvVOLTAGEINPUT_PORT};case 100:return{send:sendVOLTAGEINPUT_PORT_5V25,recv:recvVOLTAGEINPUT_PORT_5V25};case 101:return{send:sendVOLTAGEINPUT_PORT_V2,recv:recvVOLTAGEINPUT_PORT_V2};case 102:return{send:sendVOLTAGERATIOINPUT_PORT,recv:recvVOLTAGERATIOINPUT_PORT};case 103:return{send:sendVOLTAGERATIOINPUT_PORT_V2,recv:recvVOLTAGERATIOINPUT_PORT_V2};case 104:return{send:sendADP1000,recv:recvADP1000};case 111:return{send:sendDAQ1000,recv:recvDAQ1000};case 112:return{send:sendDAQ1000_5V25,recv:recvDAQ1000_5V25};case 113:return{send:sendOUT1000,recv:recvOUT1000};case 114:return{send:sendOUT1000_Failsafe,recv:recvOUT1000_Failsafe};case 115:return{send:sendOUT1001,recv:recvOUT1001};case 116:return{send:sendOUT1001_Failsafe,recv:recvOUT1001_Failsafe};case 117:return{send:sendOUT1002,recv:recvOUT1002};case 118:return{send:sendOUT1002_Failsafe,recv:recvOUT1002_Failsafe};case 121:return{send:sendDAQ1200,recv:recvDAQ1200};case 122:return{send:sendOUT1100,recv:recvOUT1100};case 123:return{send:sendOUT1100_Failsafe,recv:recvOUT1100_Failsafe};case 124:return{send:sendOUT1100_Failsafe_Frequency,recv:recvOUT1100_Failsafe_Frequency};case 125:return{send:sendDAQ1300,recv:recvDAQ1300};case 126:return{send:sendDAQ1301,recv:recvDAQ1301};case 127:return{send:sendDAQ1400,recv:recvDAQ1400};case 128:return{send:sendDAQ1400_120,recv:recvDAQ1400_120};case 129:return{send:sendDAQ1500,recv:recvDAQ1500};case 131:return{send:sendVCP1100,recv:recvVCP1100};case 133:return{send:sendDCC1000,recv:recvDCC1000};case 134:return{send:sendDCC1000_POSITIONCONTROL,recv:recvDCC1000_POSITIONCONTROL};case 135:return{send:sendDCC1000_POSITIONCONTROL_FAILSAFE,recv:recvDCC1000_POSITIONCONTROL_FAILSAFE};case 141:return{send:sendDCC1001,recv:recvDCC1001};case 142:return{send:sendDCC1001_Failsafe,recv:recvDCC1001_Failsafe};case 143:return{send:sendDCC1002,recv:recvDCC1002};case 144:return{send:sendDCC1002_Failsafe,recv:recvDCC1002_Failsafe};case 145:return{send:sendDCC1003,recv:recvDCC1003};case 146:return{send:sendDCC1003_Failsafe,recv:recvDCC1003_Failsafe};case 147:return{send:sendDCC1100,recv:recvDCC1100};case 148:return{send:sendDCC1100_Failsafe,recv:recvDCC1100_Failsafe};case 152:return{send:sendDST1000,recv:recvDST1000};case 153:return{send:sendDST1001,recv:recvDST1001};case 154:return{send:sendDST1002,recv:recvDST1002};case 155:return{send:sendDST1200,recv:recvDST1200};case 156:return{send:sendENC1000,recv:recvENC1000};case 157:return{send:sendENC1001,recv:recvENC1001};case 158:return{send:sendHIN1101,recv:recvHIN1101};case 159:return{send:sendHIN1000,recv:recvHIN1000};case 160:return{send:sendHIN1001,recv:recvHIN1001};case 161:return{send:sendHIN1100,recv:recvHIN1100};case 162:return{send:sendHUM1000,recv:recvHUM1000};case 163:return{send:sendHUM1001,recv:recvHUM1001};case 164:return{send:sendLCD1100,recv:recvLCD1100};case 165:return{send:sendLCD1100_1,recv:recvLCD1100_1};case 166:return{send:sendLED1000,recv:recvLED1000};case 167:return{send:sendLUX1000,recv:recvLUX1000};case 168:return{send:sendHUM1100,recv:recvHUM1100};case 171:return{send:sendMOT1100,recv:recvMOT1100};case 173:return{send:sendMOT0100_VINT,recv:recvMOT0100_VINT};case 174:return{send:sendMOT1101,recv:recvMOT1101};case 175:return{send:sendMOT1102,recv:recvMOT1102};case 176:return{send:sendMOT1102_1,recv:recvMOT1102_1};case 180:return{send:sendMOT0110_VINT,recv:recvMOT0110_VINT};case 181:return{send:sendPRE1000,recv:recvPRE1000};case 182:return{send:sendRCC1000,recv:recvRCC1000};case 183:return{send:sendRCC1000_Failsafe,recv:recvRCC1000_Failsafe};case 184:return{send:sendRCC1000_1,recv:recvRCC1000_1};case 185:return{send:sendREL1000,recv:recvREL1000};case 186:return{send:sendREL1000_Failsafe,recv:recvREL1000_Failsafe};case 187:return{send:sendREL1100,recv:recvREL1100};case 188:return{send:sendREL1100_Failsafe,recv:recvREL1100_Failsafe};case 189:return{send:sendREL1100_Failsafe_Frequency,recv:recvREL1100_Failsafe_Frequency};case 190:return{send:sendREL1101,recv:recvREL1101};case 191:return{send:sendREL1101_Failsafe,recv:recvREL1101_Failsafe};case 192:return{send:sendREL1101_1,recv:recvREL1101_1};case 194:return{send:sendSAF1000,recv:recvSAF1000};case 195:return{send:sendSAF1000_Failsafe,recv:recvSAF1000_Failsafe};case 196:return{send:sendSND1000,recv:recvSND1000};case 197:return{send:sendSTC1000,recv:recvSTC1000};case 198:return{send:sendSTC1000_Failsafe,recv:recvSTC1000_Failsafe};case 199:return{send:sendSTC1001,recv:recvSTC1001};case 200:return{send:sendSTC1001_Failsafe,recv:recvSTC1001_Failsafe};case 201:return{send:sendSTC1002,recv:recvSTC1002};case 202:return{send:sendSTC1002_Failsafe,recv:recvSTC1002_Failsafe};case 203:return{send:sendSTC1003,recv:recvSTC1003};case 204:return{send:sendSTC1003_Failsafe,recv:recvSTC1003_Failsafe};case 205:return{send:sendSTC1003_1,recv:recvSTC1003_1};case 206:return{send:sendSTC1005_0,recv:recvSTC1005_0};case 207:return{send:sendSTC1005_0_110,recv:recvSTC1005_0_110};case 209:return{send:sendTMP1000,recv:recvTMP1000};case 210:return{send:sendTMP1100,recv:recvTMP1100};case 211:return{send:sendTMP1101,recv:recvTMP1101};case 212:return{send:sendTMP1101_1,recv:recvTMP1101_1};case 213:return{send:sendTMP1200,recv:recvTMP1200};case 214:return{send:sendTMP1200_1,recv:recvTMP1200_1};case 215:return{send:sendTMP1200_2,recv:recvTMP1200_2};case 218:return{send:sendVCP1000,recv:recvVCP1000};case 219:return{send:sendVCP1001,recv:recvVCP1001};case 220:return{send:sendVCP1001_110,recv:recvVCP1001_110};case 221:return{send:sendVCP1002,recv:recvVCP1002};case 222:return{send:sendVCP1002_110,recv:recvVCP1002_110};case 242:return{send:sendFIRMWARE_UPGRADE_STM32F0,recv:recvFIRMWARE_UPGRADE_STM32F0};case 243:return{send:sendFIRMWARE_UPGRADE_STM32G0_BLBug,recv:recvFIRMWARE_UPGRADE_STM32G0_BLBug};case 244:return{send:sendFIRMWARE_UPGRADE_STM32G0,recv:recvFIRMWARE_UPGRADE_STM32G0};case 245:return{send:sendFIRMWARE_UPGRADE_STM32F3,recv:recvFIRMWARE_UPGRADE_STM32F3};case 246:return{send:sendFIRMWARE_UPGRADE_STM8S,recv:recvFIRMWARE_UPGRADE_STM8S};case 254:return{send:sendUNKNOWNVINT,recv:recvUNKNOWNVINT};default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}const VINT_DATA_wCHANNEL=64,NUM_VINT_SUPPORTED_SPEEDS=10,supportedSpeeds=[1e4,25e3,5e4,1e5,16e4,25e4,4e5,5e5,8e5,1e6];class VINTDevice extends LocalDevice{constructor(e,t){super(e,t);const r=getVINTIO(this.devDef.uid);if(null==r)throw new Error("Invalid VINT Device UID");this.vintIO=r,this.opened=!1,this.openCnt=0}async open(){this.opened||(this.openCnt=0,await this.parent.open(),this.opened=!0),this.openCnt++}async close(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.opened&&(e&&(this.openCnt=1),this.openCnt--,this.openCnt>0?logdebug("Leaving VINT device open, as open count is: "+this.openCnt):(this.opened=!1,this.openCnt=0,await this.parent.close()))}async lock(){await this.parent.lock()}unlock(){this.parent.unlock()}async bridgeInput(e,t){const r=this.parent;switch(t.vpkt){case 111:await e.sendVINTDataPacket(250),await r.setPortMode(this.hubPort,HubPortMode.VINT),await r.packetTrackers.waitForPendingPackets(this.hubPort);break;case 34:{let t=HubPortMode.VINT;if(e.isHubPort)switch(e.class){case ChannelClass.DIGITAL_INPUT:t=HubPortMode.DIGITAL_INPUT;break;case ChannelClass.DIGITAL_OUTPUT:t=HubPortMode.DIGITAL_OUTPUT;break;case ChannelClass.VOLTAGE_INPUT:t=HubPortMode.VOLTAGE_INPUT;break;case ChannelClass.VOLTAGE_RATIO_INPUT:t=HubPortMode.VOLTAGE_RATIO_INPUT}await r.setPortMode(e.parent.hubPort,t),await e.sendVINTDataPacket(250);break}case 143:await e.sendVINTDataPacket(251);break;default:await this.vintIO.send(e,t)}}dataInput(e){let t,r,i;64&e.getUint8(0)?(i=(63&e.getUint8(0))-1,t=e.getUint8(1),r=2):(i=63&e.getUint8(0),t=0,r=1);const a=this.getChannel(t);a&&this.vintIO.recv(a,new DataView(e.buffer,r+e.byteOffset,i))}makePacket(e,t,r,i){const a=new Uint8Array(new ArrayBuffer(128));let s=0;switch(null==i&&(i=new Uint8Array(0)),t){case 0:e.uniqueIndex?(a.set([64|i.length+2],s++),a.set([e.uniqueIndex],s++),a.set([r],s++)):(a.set([i.length+1],s++),a.set([r],s++)),i&&a.set(i,s);break;case 131:case 139:case 140:a.set([t],s++);break;case 143:if(4!==i.length)throw new PhidgetError(ErrorCode.UNEXPECTED);a.set([t],s++),a.set(i,s);break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET)}return a.slice(0,s+i.length)}async sendpacket(e){if(e.length>128)throw new PhidgetError(ErrorCode.UNEXPECTED,"BufferIn length too big in sendpacket");const t=this.parent,r=await t.packetTrackers.getPacketTrackerWait(t,21*this.hubPort+1,21*(this.hubPort+1),this.hubPort,500);logverbose("Claimed Hub packet ID "+r.id+", Port "+this.hubPort);try{const i=t.makePacket(this,r.id,e);await t.claimPacketSpace(this.hubPort,i.byteLength),r.pt.setPacketLength(i.byteLength),await this.sendpacketWithTracking(i,r.pt),r.pt.releasePacketTracker(!1),t.packetOutCounter[this.hubPort]++,logverbose("Packet "+r.id+" send successfully, Port "+this.hubPort)}catch(e){throw logverbose("Packet "+r.id+" failed, Port "+this.hubPort,e),r.pt.releasePacketTracker(!0),e}}async sendpacketWithTracking(e,t){if(t.signalled){if(t.returnCode!=ErrorCode.SUCCESS)throw new PhidgetError(t.returnCode);return}await this.parent.transferPacket(6,0,0,e),t.sent=!0;const r=await t.waitForPendingPacket(1e3);if(r!=ErrorCode.SUCCESS)throw new PhidgetError(r)}async setHubPortSpeed(e,t){let r;const i=this.parent.hubPortProps[this.hubPort];if(255===i.portProto||this.vintDeviceProps.vintProto<2||255===this.vintDeviceProps.vintProto||this.vintDeviceProps.vintProto<2)throw new PhidgetError(ErrorCode.UNSUPPORTED,"VINT Port and Device must support VINT2 protocol.");if(!i.portSuppSetSpeed)throw new PhidgetError(ErrorCode.UNSUPPORTED,"VINT Port does not support High Speed.");if(t===Phidget.AUTO_HUBPORTSPEED&&!i.portSuppAutoSetSpeed)throw new PhidgetError(ErrorCode.UNSUPPORTED,"VINT Port does not support Auto Set Speed.");if(!this.vintDeviceProps.suppSetSpeed)throw new PhidgetError(ErrorCode.UNSUPPORTED,"VINT Device does not support High Speed.");if(t===Phidget.AUTO_HUBPORTSPEED&&!this.vintDeviceProps.suppAutoSetSpeed)throw new PhidgetError(ErrorCode.UNSUPPORTED,"VINT Device does not support Auto Set Speed.");if(t>i.portMaxSpeed)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Speed must be <= Port max speed of: "+i.portMaxSpeed+"Hz.");if(t>this.vintDeviceProps.maxSpeed)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Speed must be <= Device max speed of: "+this.vintDeviceProps.maxSpeed+"Hz.");if(t!==Phidget.AUTO_HUBPORTSPEED){for(r=9;r>=0&&!(t>=supportedSpeeds[r]);r--);t!==supportedSpeeds[r]&&loginfo("Requested VINT speed of "+t+"HZ is not supported.  Setting nearest lower speed of "+supportedSpeeds[r]+"Hz instead."),t=supportedSpeeds[r]}const a=new DataView(new ArrayBuffer(4));a.setUint32(0,t),await e.sendVINTPacket(143,0,new Uint8Array(a.buffer)),this.vintDeviceProps.commSpeed=t;for(let t=0;t<64;t++){const r=this.getChannel(t);if(null!=r&&r!==e){const e=new BridgePacket;e.set({name:"0",type:"u",value:this.vintDeviceProps.commSpeed}),e.sendToChannel(r,176)}}}async reboot(e){await e.sendVINTPacket(131)}async rebootFirmwareUpgrade(e,t){const r=this.parent,i=new Uint8Array([255&t,t>>8&255]);await r.sendHubPortPacket(this.hubPort,1,i),await e.sendVINTPacket(131)}}class LocalChannel extends Channel{constructor(e,t,r){super(e,t,r),this.name=this.chDef.t,this.class=this.chDef.c}async open(e){var t;const r=this.parent;if(r instanceof VINTDevice)for(const e of values(i=this.conn.A).call(i)){var i;if(e.parent!=r&&(e.isopen&&e.parent.parentId===r.parentId&&e.parent.hubPort===r.hubPort))throw new PhidgetError(ErrorCode.BUSY,"Failed to open Channel "+this+" on local device: "+r+" because Channel: "+e+" is opened on the same Hub Port, and these channels are mutually exclusive.")}if(null!=this.chDef.e)for(const e in this.parent.channels){const t=this.parent.channels[e];if(t!==this&&(t.isopen&&t.chDef.e===this.chDef.e))throw new PhidgetError(ErrorCode.BUSY,"Failed to open Channel "+this+" on local device: "+r+" because Channel: "+t+" is opened, and these channels are mutually exclusive.")}e.g=!0;let a=!1;try{await r.lock(),await r.open(),a=!0,this.isopen=!0,this.userphid=e,e.Z=this,e.N=!0,e.dt(),e.P=!0}catch(t){try{a&&await r.close()}finally{e.g=!1,e.N=!1,e.P=!1,this.isopen=!1}throw t}finally{r.unlock()}try{const r=new BridgePacket;if(await r.send(this,34,!1),await e.ut(),e.onAttach)try{await e.onAttach(e)}catch(e){logEventException(e)}if(await r.send(this,143,!1),e.lt(),e.g=!1,e.fe())e.ee(),null===(t=e.se)||void 0===t||t.call(e);else{e.Pe=()=>{var t;e.ee(),null===(t=e.se)||void 0===t||t.call(e),delete e.Pe};let t=500;null!=e.re&&void 0!==e.ie&&(t=e.re-(tm()-e.ie)),t>2500&&(t=2500),t<500&&(t=500),setTimeout((()=>{e.Pe&&e.Pe()}),t)}}catch(t){try{await r.lock(),await r.close()}finally{r.unlock(),e.g=!1,e.N=!1,e.P=!1,this.isopen=!1}throw t}}async close(){if(!this.detaching)try{const e=new BridgePacket;await e.send(this,111,!1)}finally{try{await this.parent.lock(),await this.parent.close()}finally{this.userphid&&this.isopen&&(this.userphid.P=!1,this.isopen=!1),this.parent.unlock()}}}async send(e){switch(e.vpkt){case 173:if(!(this.parent instanceof VINTDevice))throw new PhidgetError(ErrorCode.WRONG_DEVICE);await this.parent.setHubPortSpeed(this,e.getNumber(0));break;case 140:if(!(this.parent instanceof PhidgetUSBDevice))throw new PhidgetError(ErrorCode.WRONG_DEVICE);await this.parent.writeLabel(e.getString(0));for(let e=0;e<64;e++){const t=this.parent.getChannel(e);if(t&&t!==this){const e=new BridgePacket;e.set({name:"0",type:"s",value:this.parent.label}),e.sendToChannel(t,172)}}break;case 139:if(this.parent instanceof VINTDevice)await this.parent.reboot(this);else{if(!(this.parent instanceof PhidgetUSBDevice))throw new PhidgetError(ErrorCode.WRONG_DEVICE);await this.parent.rebootFirmwareUpgrade()}break;case 138:if(this.parent instanceof VINTDevice)await this.parent.rebootFirmwareUpgrade(this,e.getNumber(0));else{if(!(this.parent instanceof PhidgetUSBDevice))throw new PhidgetError(ErrorCode.WRONG_DEVICE);await this.parent.rebootFirmwareUpgrade()}break;default:await this.parent.bridgeInput(this,e)}}async sendVINTPacket(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2?arguments[2]:void 0;const i=this.parent;if(!(i instanceof VINTDevice))throw new PhidgetError(ErrorCode.UNEXPECTED,"Parent device does not exist in sendVINTPacket.");const a=i.makePacket(this,e,t,r);await i.sendpacket(a)}async sendVINTDataPacket(e,t){await this.sendVINTPacket(0,e,t)}}class InterfaceKitDevice extends PhidgetUSBDevice{constructor(e,t,r){switch(super(e,t,r),this.devDef.uid){case 20:case 25:case 28:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}this.data={outputState:new Array(this.numOutputs).fill(2),failsafeState:new Array(this.numOutputs).fill(0),inputState:new Array(this.numInputs).fill(2),voltage:new Array(this.numVoltageInputs).fill(1e300),voltageRatio:new Array(this.numSensors).fill(1e300)}}get numVoltageInputs(){return this.devDef.cn[0]}get numSensors(){return this.devDef.cn[1]}get numInputs(){return this.devDef.cn[2]}get numOutputs(){return this.devDef.cn[3]}get numCapTouches(){return this.devDef.cn[4]}async initAfterOpen(){if(28===this.devDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED,"This Phidget is not yet supported via direct USB connection in JavaScript.");for(let e=0;e<this.numOutputs;e++)this.data.failsafeState[e]=0;const e=await this.transferPacket(3,0,0,1);for(let t=0;t<this.numOutputs;t++)this.data.outputState[t]=e.getUint8(0)&1<<t?1:0}async bridgeInput(e,t){let r;const i=new DataView(new ArrayBuffer(2));switch(e.class){case ChannelClass.DIGITAL_OUTPUT:if(this.data.failsafeState[e.index]&&34!==t.vpkt&&111!==t.vpkt)throw new PhidgetError(ErrorCode.FAILSAFE);switch(t.vpkt){case 82:this.data.outputState[e.index]=t.getNumber(0),i.setUint8(0,this.data.outputState[e.index]),await this.transferPacket(0,10,e.index,new Uint8Array(i.buffer,0,1));break;case 55:if(r=t.getNumber(0),0!==r&&1!==r)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Duty cycle must be either 0 or 1");this.data.outputState[e.index]=r,i.setUint8(0,this.data.outputState[e.index]?255:0),await this.transferPacket(0,10,e.index,new Uint8Array(i.buffer,0,1));break;case 34:case 111:this.data.failsafeState[e.index]=0,await this.transferPacket(0,250,e.index);break;case 143:break;case 146:i.setUint16(0,t.getNumber("0")),await this.transferPacket(0,246,e.index,new Uint8Array(i.buffer,0,2));break;case 147:await this.transferPacket(0,247,e.index);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}break;case ChannelClass.DIGITAL_INPUT:case ChannelClass.VOLTAGE_RATIO_INPUT:case ChannelClass.VOLTAGE_INPUT:throw new Error("Class not implemented");default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected channel class")}}dataInput(e){const t=this.getChannel(e.getUint8(1));if(t){const r=e.getUint8(0),i=new BridgePacket;switch(r){case 13:{const r=e.getUint8(1);this.data.failsafeState[r]=1,i.set({name:"0",type:"d",value:ErrorEventCode.FAILSAFE_CONDITION}),i.set({name:"1",type:"s",value:"Failsafe procedure initiated."}),t.sendErrorEvent(i);break}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}}}}class RFIDDevice extends PhidgetUSBDevice{constructor(e,t,r){throw super(e,t,r),this.devDef.uid,new PhidgetError(ErrorCode.UNSUPPORTED)}get numOutputs(){return this.devDef.cn[0]}async initAfterOpen(){const e=await this.transferPacket(3,5,0,5);this.data.antennaEnabled[0]=1&e.getUint8(0)?1:0,this.data.outputState[0]=2&e.getUint8(0)?1:0,this.data.outputState[1]=4&e.getUint8(0)?1:0,this.data.outputState[2]=8&e.getUint8(0)?1:0}async bridgeInput(e,t){const r=new DataView(new ArrayBuffer(128));let i,a,s,n;switch(e.class){case ChannelClass.DIGITAL_OUTPUT:switch(t.vpkt){case 82:this.data.outputState[e.index]=t.getNumber(0),r.setUint8(0,t.getNumber(0)),await this.transferPacket(0,10,e.uniqueIndex,new Uint8Array(r.buffer,0,1));break;case 55:if(s=t.getNumber(0),0!==s&&1!==s)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Duty cycle myust be 0 or 1.");this.data.outputState[e.index]=s,r.setUint8(0,s),await this.transferPacket(0,10,e.uniqueIndex,new Uint8Array(r.buffer,0,1));break;case 34:case 111:r.setUint8(0,0),await this.transferPacket(0,10,e.uniqueIndex,new Uint8Array(r.buffer,0,1));break;case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}break;case ChannelClass.RFID:if(0!==e.index)throw new PhidgetError(ErrorCode.UNEXPECTED);switch(t.vpkt){case 41:r.setUint8(0,t.getNumber(0)),this.data.antennaEnabled[0]=t.getNumber(0),await this.transferPacket(0,99,e.uniqueIndex,new Uint8Array(r.buffer,0,1));break;case 103:{if(i=t.getNumber(1),i<RFIDProtocol.EM4100||i>RFIDProtocol.PHIDGET_TAG)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid protocol type");if(1!==this.data.antennaEnabled[0])throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Cannot write tag while antenna is off");if(r.setUint8(0,t.getNumber(1)),r.setUint8(1,t.getNumber(2)),a=t.getString(0),i===RFIDProtocol.EM4100&&"x"===a.charAt(1)&&(a=a.slice(2)),a.length>125)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT);for(let e=0;e<a.length;e++)r.setUint8(2+e,a.charCodeAt(e));if(r.setUint8(2+a.length,0),i===RFIDProtocol.EM4100)for(let e=0;e<10;e++){const t=String.fromCharCode(r.getUint8(2+e)).toLowerCase();r.setUint8(2+e,t.charCodeAt(0))}n=a.length+2;const s=e.userphid;s.gt(""),await this.transferPacket(0,98,e.uniqueIndex,new Uint8Array(r.buffer,0,n));try{await s.wt(a,600)}catch(e){throw new PhidgetError(ErrorCode.TIMEOUT,"Timed out waiting for tag to appear after writing. Try again.")}break}case 34:case 111:case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected channel class")}}dataInput(e){const t=e.getUint8(0),r=this.getChannel(0);let i;if(r){const a=new BridgePacket;switch(t){case 96:i="";for(let t=2,r=e.getUint8(t);t<e.byteLength&&"\0"!==String.fromCharCode(r);t++,r=e.getUint8(t))i+=String.fromCharCode(r);r.userphid.gt(i),this.data.tagPresent[0]=1,a.set({name:"0",type:"s",value:i}),a.set({name:"1",type:"d",value:e.getUint8(1)}),a.sendToChannel(r,92);break;case 97:i="";for(let t=2,r=e.getUint8(t);t<e.byteLength&&"\0"!==String.fromCharCode(r);t++,r=e.getUint8(t))i+=String.fromCharCode(r);this.data.tagPresent[0]=0,a.set({name:"0",type:"s",value:i}),a.set({name:"1",type:"d",value:e.getUint8(1)}),a.sendToChannel(r,93);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}}}}const ZERO_GYRO_TIME=2e3,MIN_DATA_RATE=1e3,ACCEL_CHANNEL=0,GYRO_CHANNEL=1,MAG_CHANNEL=2,SPT_CHANNEL=3,TMP_CHANNEL=4,ACCEL_SEND_FLAG=1,GYRO_SEND_FLAG=2,MAG_SEND_FLAG=4,SPT_SEND_FLAG=8,TMP_SEND_FLAG=16;class SpatialDevice extends PhidgetUSBDevice{constructor(e,t,r){switch(super(e,t,r),this.devDef.uid){case 178:case 179:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}this.data=this.initData()}get numAccelAxes(){return this.devDef.cn[0]}get numGyroAxes(){return this.devDef.cn[1]}get numCompassAxes(){return this.devDef.cn[2]}get numSpatialInputs(){return this.devDef.cn[3]}get numTempInputs(){return this.devDef.cn[4]}updateTimestamp(e){if(null!=this.data.lastTimeCounter){const t=e-this.data.lastTimeCounter&65535;this.data.timestamp[0]+=t}this.data.lastTimeCounter=e}updateLatestDataTime(e){this.data.latestDataTime=this.data.timestamp[0]+(e+1)*this.data.dataRateMax}timestampDiff(e,t){return e-t}initData(){return{timestamp:[0],acceleration:[new Array(this.numAccelAxes).fill(1e300)],angularRate:[new Array(this.numGyroAxes).fill(1e300)],magneticField:[new Array(this.numCompassAxes).fill(1e300)],temperature:new Array(this.numTempInputs).fill(1e300),quaternion:[null],dataInterval:0,temperatureDataInterval:0,accelerationChangeTrigger:0,magneticFieldChangeTrigger:0,temperatureChangeTrigger:0,accelAxisLastTrigger:new Array(this.numAccelAxes).fill(1e300),gyroCorrection:new Array(this.numGyroAxes).fill(0),magAxisLastTrigger:new Array(this.numCompassAxes).fill(1e300),lastEventTime:0,latestDataTime:0,doZeroGyro:!1,dataBuffer:[],accelerationMax:0,accelerationMin:0,interruptRate:0,dataRateMax:0,dataRateMin:0,angularRateMax:0,angularRateMin:0,magneticFieldMax:0,magneticFieldMin:0,AHRSMagGain:0,userMagField:0,calDataValid:!1,algorithm:0,temperatureMax:0,temperatureMin:0,lastTemperatureEventTime:0,temperatureLastTrigger:1e300,heatingEnabled:!1}}async initAfterOpen(){this.data=this.initData(),this.data.accelerationMax=8,this.data.accelerationMin=-8,this.data.interruptRate=4,this.data.dataRateMin=1e3,this.data.dataInterval=8,this.data.temperatureDataInterval=100,this.data.dataRateMax=4,this.data.angularRateMax=2e3,this.data.angularRateMin=-2e3,this.data.magneticFieldMax=5e3,this.data.magneticFieldMin=-5e3,this.data.userMagField=1,this.data.calDataValid=!1,this.data.AHRSMagGain=.005,this.data.algorithm=SpatialAlgorithm.AHRS,this.data.temperatureMax=85,this.data.temperatureMin=-40}async bridgeInput(e,t){let r;const i=new DataView(new ArrayBuffer(24));let a;switch(this.devDef.uid){case 178:switch(e.class){case ChannelClass.ACCELEROMETER:if(0!==e.index)throw new PhidgetError(ErrorCode.INVALID);switch(t.vpkt){case 54:this.setDataRate(e,t.getNumber(0));break;case 46:this.data.accelerationChangeTrigger=t.getNumber(0);break;case 145:await this.setPrecision(t.getNumber(0));break;case 170:r=new Uint8Array([t.getNumber(0)]),await this.transferPacket(0,18,e.uniqueIndex,r);break;case 34:case 111:await this.transferPacket(0,17,e.uniqueIndex);break;case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;case ChannelClass.GYROSCOPE:if(0!==e.index)throw new PhidgetError(ErrorCode.INVALID);switch(t.vpkt){case 54:this.setDataRate(e,t.getNumber(0));break;case 106:await this.zeroGyro();break;case 145:await this.setPrecision(t.getNumber(0));break;case 170:r=new Uint8Array([t.getNumber(0)]),await this.transferPacket(0,18,e.uniqueIndex,r);break;case 34:case 111:await this.transferPacket(0,17,e.uniqueIndex);break;case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;case ChannelClass.MAGNETOMETER:if(0!==e.index)throw new PhidgetError(ErrorCode.INVALID);switch(t.vpkt){case 54:this.setDataRate(e,t.getNumber(0));break;case 46:this.data.magneticFieldChangeTrigger=t.getNumber(0);break;case 37:await this.saveCompassCorrectionParameters();break;case 35:await this.resetCompassCorrectionParameters();break;case 50:{const e={magField:t.getNumber(0),offset0:t.getNumber(1),offset1:t.getNumber(2),offset2:t.getNumber(3),gain0:t.getNumber(4),gain1:t.getNumber(5),gain2:t.getNumber(6),T0:t.getNumber(7),T1:t.getNumber(8),T2:t.getNumber(9),T3:t.getNumber(10),T4:t.getNumber(11),T5:t.getNumber(12)};await this.setCompassCorrectionParameters(e);break}case 170:r=new Uint8Array([t.getNumber(0)]),await this.transferPacket(0,18,e.uniqueIndex,r);break;case 34:case 111:await this.transferPacket(0,17,e.uniqueIndex);break;case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;case ChannelClass.SPATIAL:if(0!==e.index)throw new PhidgetError(ErrorCode.INVALID);switch(t.vpkt){case 54:this.setDataRate(e,t.getNumber(0));break;case 106:await this.zeroGyro();break;case 37:await this.saveCompassCorrectionParameters();break;case 35:await this.resetCompassCorrectionParameters();break;case 50:{const e={magField:t.getNumber(0),offset0:t.getNumber(1),offset1:t.getNumber(2),offset2:t.getNumber(3),gain0:t.getNumber(4),gain1:t.getNumber(5),gain2:t.getNumber(6),T0:t.getNumber(7),T1:t.getNumber(8),T2:t.getNumber(9),T3:t.getNumber(10),T4:t.getNumber(11),T5:t.getNumber(12)};await this.setCompassCorrectionParameters(e);break}case 145:await this.setPrecision(t.getNumber(0));break;case 150:await this.zeroAHRS();break;case 149:this.data.algorithm=t.getNumber(0),await this.configureAlgorithm();break;case 151:this.data.AHRSMagGain=t.getNumber(0),await this.configureAlgorithm();break;case 170:r=new Uint8Array([t.getNumber(0)]),await this.transferPacket(0,18,e.uniqueIndex,r);break;case 174:{const i=new ArrayBuffer(24);r=new DataView(i),r.setFloat32(0,t.getNumber(0),!0),r.setFloat32(4,t.getNumber(1),!0),r.setFloat32(8,t.getNumber(2),!0),r.setFloat32(12,t.getNumber(3),!0),r.setFloat32(16,t.getNumber(4),!0),r.setFloat32(20,t.getNumber(5),!0),await this.transferPacket(0,18,e.uniqueIndex,r);break}case 34:case 111:await this.transferPacket(0,17,e.uniqueIndex);break;case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;case ChannelClass.TEMPERATURE_SENSOR:if(0!==e.index)throw new PhidgetError(ErrorCode.INVALID);switch(t.vpkt){case 54:this.setTemperatureDataRate(t.getNumber(0));break;case 46:this.data.temperatureChangeTrigger=t.getNumber(0);break;case 34:case 111:await this.transferPacket(0,17,e.uniqueIndex);break;case 143:break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;case 179:switch(e.chDef.uid){case 379:a=e.userphid,await a.st.acquire();try{switch(t.vpkt){case 54:i.setUint16(0,this.at(t,1)),await this.transferPacket(0,252,e.uniqueIndex,new Uint8Array(i.buffer,0,2));break;case 106:await this.transferPacket(0,51,e.uniqueIndex);break;case 35:await this.transferPacket(0,77,e.uniqueIndex);break;case 37:await this.transferPacket(0,79,e.uniqueIndex);break;case 50:{const e={magField:t.getNumber(0),offset0:t.getNumber(1),offset1:t.getNumber(2),offset2:t.getNumber(3),gain0:t.getNumber(4),gain1:t.getNumber(5),gain2:t.getNumber(6),T0:t.getNumber(7),T1:t.getNumber(8),T2:t.getNumber(9),T3:t.getNumber(10),T4:t.getNumber(11),T5:t.getNumber(12)};await this.setCompassCorrectionParameters(e)}break;case 150:await this.transferPacket(0,80,e.uniqueIndex);break;case 149:this.data.algorithm=t.getNumber(0),i.setUint8(0,t.getNumber(0)),await this.transferPacket(0,81,e.uniqueIndex,new Uint8Array(i.buffer,0,1));break;case 151:this.data.AHRSMagGain=t.getNumber(0),i.setFloat32(0,t.getNumber(0),!0),await this.transferPacket(0,82,e.uniqueIndex,new Uint8Array(i.buffer,0,4));break;case 174:i.setFloat32(0,t.getNumber(0),!0),i.setFloat32(4,t.getNumber(1),!0),i.setFloat32(8,t.getNumber(2),!0),i.setFloat32(12,t.getNumber(3),!0),i.setFloat32(16,t.getNumber(4),!0),i.setFloat32(20,t.getNumber(5),!0),await this.transferPacket(0,84,e.uniqueIndex,i);break;case 170:this.data.heatingEnabled=t.getBoolean(0),i.setUint8(0,t.getNumber(0)),await this.transferPacket(0,85,e.uniqueIndex,new Uint8Array(i.buffer,0,1));break;case 34:case 111:await this.transferPacket(0,250,e.uniqueIndex);break;case 143:await this.transferPacket(0,251,e.uniqueIndex);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}}finally{a.st.release()}break;case 378:a=e.userphid,await a.transactionLock.acquire();try{switch(t.vpkt){case 54:i.setUint16(0,this.at(t,1)),await this.transferPacket(0,252,e.uniqueIndex,new Uint8Array(i.buffer,0,2));break;case 46:this.data.magneticFieldChangeTrigger=t.getNumber(0),i.setFloat32(0,t.getNumber(0),!0),await this.transferPacket(0,195,e.uniqueIndex,new Uint8Array(i.buffer,0,4));break;case 35:await this.transferPacket(0,77,e.uniqueIndex);break;case 37:await this.transferPacket(0,79,e.uniqueIndex);break;case 50:{const e={magField:t.getNumber(0),offset0:t.getNumber(1),offset1:t.getNumber(2),offset2:t.getNumber(3),gain0:t.getNumber(4),gain1:t.getNumber(5),gain2:t.getNumber(6),T0:t.getNumber(7),T1:t.getNumber(8),T2:t.getNumber(9),T3:t.getNumber(10),T4:t.getNumber(11),T5:t.getNumber(12)};await this.setCompassCorrectionParameters(e)}break;case 170:this.data.heatingEnabled=t.getBoolean(0),i.setUint8(0,t.getNumber(0)),await this.transferPacket(0,85,e.uniqueIndex,new Uint8Array(i.buffer,0,1));break;case 34:case 111:await this.transferPacket(0,250,e.uniqueIndex);break;case 143:await this.transferPacket(0,251,e.uniqueIndex);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}}finally{a.transactionLock.release()}break;case 377:switch(t.vpkt){case 54:i.setUint16(0,this.at(t,1)),await this.transferPacket(0,252,e.uniqueIndex,new Uint8Array(i.buffer,0,2));break;case 106:await this.transferPacket(0,51,e.uniqueIndex);break;case 170:this.data.heatingEnabled=t.getBoolean(0),i.setUint8(0,t.getNumber(0)),await this.transferPacket(0,85,e.uniqueIndex,new Uint8Array(i.buffer,0,1));break;case 34:case 111:await this.transferPacket(0,250,e.uniqueIndex);break;case 143:await this.transferPacket(0,251,e.uniqueIndex);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;case 376:switch(t.vpkt){case 54:i.setUint16(0,this.at(t,1)),await this.transferPacket(0,252,e.uniqueIndex,new Uint8Array(i.buffer,0,2));break;case 46:this.data.accelerationChangeTrigger=t.getNumber(0),i.setFloat32(0,t.getNumber(0),!0),await this.transferPacket(0,195,e.uniqueIndex,new Uint8Array(i.buffer,0,4));break;case 170:this.data.heatingEnabled=t.getBoolean(0),i.setUint8(0,t.getNumber(0)),await this.transferPacket(0,85,e.uniqueIndex,new Uint8Array(i.buffer,0,1));break;case 34:case 111:await this.transferPacket(0,250,e.uniqueIndex);break;case 143:await this.transferPacket(0,251,e.uniqueIndex);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;case 380:switch(t.vpkt){case 54:i.setUint16(0,this.at(t,1)),await this.transferPacket(0,252,e.uniqueIndex,new Uint8Array(i.buffer,0,2));break;case 46:this.data.temperatureChangeTrigger=t.getNumber(0),i.setFloat32(0,t.getNumber(0),!0),await this.transferPacket(0,58,e.uniqueIndex,new Uint8Array(i.buffer,0,4));break;case 34:case 111:await this.transferPacket(0,250,e.uniqueIndex);break;case 143:await this.transferPacket(0,251,e.uniqueIndex);break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}}dataInput(e){let t,r=0,i=!1;const a=[0,0,0],s=[0,0,0],n=[0,0,0],o=[0,0,0,0],h=[];let c,d;const u=this.data.dataInterval;let l=1e300;const g={acceleration:[],angularRate:[],magneticField:[],quaternion:[],timestamp:0,temperature:0};switch(this.devDef.uid){case 179:{let r=1;const i=e.getUint8(0),a={acceleration:[],angularRate:[],magneticField:[],quaternion:[],timestamp:0,temperature:0};if(a.timestamp=e.getUint32(1),r+=4,1&i||8&i){for(let t=0;t<3;t++)a.acceleration[t]=e.getFloat32(r+4*t,!0),Number.isNaN(a.acceleration[t])||(a.acceleration[t]=RoundDouble(a.acceleration[t],6));r+=12}if(2&i||8&i){for(let t=0;t<3;t++)a.angularRate[t]=e.getFloat32(r+4*t,!0),Number.isNaN(a.angularRate[t])||(a.angularRate[t]=RoundDouble(a.angularRate[t],6));r+=12}if(4&i||8&i){for(let t=0;t<3;t++)a.magneticField[t]=e.getFloat32(r+4*t,!0),Number.isNaN(a.magneticField[t])||(a.magneticField[t]=RoundDouble(a.magneticField[t],6));r+=12}8&i&&(a.quaternion[0]=e.getFloat32(r,!0),a.quaternion[1]=e.getFloat32(r+4,!0),a.quaternion[2]=e.getFloat32(r+8,!0),a.quaternion[3]=e.getFloat32(r+12,!0),r+=16),16&i&&(a.temperature=e.getFloat32(r,!0),Number.isNaN(a.temperature)||(a.temperature=RoundDouble(a.temperature,3)),r+=4);for(let s=0;s<5;s++)if(0!=(i&1<<s)&&null!==(t=this.getChannel(s)))switch(t.chDef.uid){case 379:{if(e.byteLength>r&&32&e.getUint8(r)){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"One or more spatial readings is out of range."}),t.sendErrorEvent(e)}let i=new BridgePacket;i.set({name:"0",type:"G",value:a.acceleration}),i.set({name:"1",type:"G",value:a.angularRate}),i.set({name:"2",type:"G",value:a.magneticField}),i.set({name:"3",type:"g",value:a.timestamp}),i.sendToChannel(t,89),i=new BridgePacket,i.set({name:"0",type:"G",value:a.quaternion}),i.set({name:"1",type:"g",value:a.timestamp}),i.sendToChannel(t,148)}break;case 378:{if(e.byteLength>r&&4&e.getUint8(r)){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"One or more magnetometer readings is out of range."}),t.sendErrorEvent(e)}const i=new BridgePacket;i.set({name:"0",type:"G",value:a.magneticField}),i.set({name:"1",type:"g",value:a.timestamp}),i.sendToChannel(t,18)}break;case 377:{if(e.byteLength>r&&2&e.getUint8(r)){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"One or more gyroscope readings is out of range."}),t.sendErrorEvent(e)}const i=new BridgePacket;i.set({name:"0",type:"G",value:a.angularRate}),i.set({name:"1",type:"g",value:a.timestamp}),i.sendToChannel(t,2)}break;case 376:{if(e.byteLength>r&&1&e.getUint8(r)){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"One or more accelerometer readings is out of range."}),t.sendErrorEvent(e)}const i=new BridgePacket;i.set({name:"0",type:"G",value:a.acceleration}),i.set({name:"1",type:"g",value:a.timestamp}),i.sendToChannel(t,1)}break;case 380:{if(e.byteLength>r){const i=new BridgePacket;switch(24&e.getUint8(r)){case 8:i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION}),i.set({name:"1",type:"s",value:"Temperature is too low to be accurately measured."});break;case 16:i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),i.set({name:"1",type:"s",value:"Temperature is too high to be accurately measured."});break;case 24:i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),i.set({name:"1",type:"s",value:"Temperature is unknown."})}t.sendErrorEvent(i)}const i=new BridgePacket;i.set({name:"0",type:"g",value:a.temperature}),i.sendToChannel(t,95)}}}break;case 178:{const w=e.getUint32(1,!0);for(this.updateTimestamp(65535&w),r=0;r<3;r++){const t=4*r;g.acceleration.push(e.getFloat32(5+t,!0)),g.angularRate.push(e.getFloat32(17+t,!0)),g.magneticField.push(e.getFloat32(29+t,!0))}if(g.quaternion.push(e.getFloat32(41,!0)),g.quaternion.push(e.getFloat32(45,!0)),g.quaternion.push(e.getFloat32(49,!0)),g.quaternion.push(e.getFloat32(53,!0)),g.temperature=e.getFloat32(57,!0),this.updateLatestDataTime(0),g.timestamp=this.data.latestDataTime,this.data.dataBuffer.push(g),this.data.doZeroGyro&&this.timestampDiff(this.data.latestDataTime,this.data.dataBuffer[0].timestamp)>=2e3){const e=[0,0,0];this.data.dataBuffer.forEach((t=>{e.map(((e,r,i)=>{i[r]+=t.angularRate[r]}))})),this.data.gyroCorrection.forEach(((t,r,i)=>{i[r]=e[r]/this.data.dataBuffer.length})),i=!0}if(this.timestampDiff(this.data.latestDataTime,this.data.lastEventTime)>=u){let e=0,g=[0,0,0],w=[0,0,0],p=[0,0,0],E=0,y=!1;u<this.data.interruptRate&&(y=!0);for(let t=0;;t++){if(0===this.data.dataBuffer.length||t>=16){E=t;break}e=this.data.dataBuffer[0].timestamp,this.data.dataBuffer.forEach((t=>{(!y||this.timestampDiff(t.timestamp,e)<u)&&(a.map(((e,r,i)=>{1e300!==t.acceleration[r]&&(i[r]+=t.acceleration[r],g[r]++)})),s.map(((e,r,i)=>{if(1e300!==t.angularRate[r]){const e=t.angularRate[r]-this.data.gyroCorrection[r];i[r]+=e,w[r]++}})),n.map(((e,r,i)=>{1e300!==t.magneticField[r]&&(i[r]+=t.magneticField[r],p[r]++)})),o.forEach(((e,r,i)=>{i[r]=t.quaternion[r]})),l=t.temperature)})),this.data.dataBuffer=[];const r={acceleration:[],angularRate:[],magneticField:[],quaternion:[],timestamp:0,temperature:0};a.map(((e,t,i)=>{g[t]>0?r.acceleration.push(e/g[t]):r.acceleration.push(1e300),i[t]=0})),s.map(((e,t,a)=>{w[t]>0?this.data.doZeroGyro&&!i?r.angularRate.push(0):r.angularRate.push(e/w[t]):r.angularRate.push(1e300),a[t]=0})),n.map(((e,t,i)=>{p[t]>0?r.magneticField.push(e/p[t]):r.magneticField.push(1e300),i[t]=0})),r.quaternion=o,r.timestamp=e,r.temperature=l,h.push(r)}for(g=[0,0,0],w=[0,0,0],p=[0,0,0],r=0;r<E;r++){for(let e=0;e<this.numAccelAxes;e++)1e300!==h[r].acceleration[e]&&(a[e]+=h[r].acceleration[e],g[e]++);for(let e=0;e<this.numGyroAxes;e++)1e300!==h[r].angularRate[e]&&(s[e]+=h[r].angularRate[e],w[e]++);for(let e=0;e<this.numCompassAxes;e++)1e300!==h[r].magneticField[e]&&(n[e]+=h[r].magneticField[e],p[e]++);h[r].quaternion.forEach(((e,t)=>{o[t]=e})),l=h[r].temperature}for(let e=0;e<this.numAccelAxes;e++)g[e]>0?this.data.acceleration[0][e]=a[e]/g[e]:this.data.acceleration[0][e]=1e300;for(let e=0;e<this.numGyroAxes;e++)w[e]>0?this.data.doZeroGyro&&!i?this.data.angularRate[0][e]=0:this.data.angularRate[0][e]=s[e]/w[e]:this.data.angularRate[0][e]=1e300;for(let e=0;e<this.numCompassAxes;e++)p[e]>0?this.data.magneticField[0][e]=n[e]/p[e]:this.data.magneticField[0][e]=1e300;this.data.quaternion[0]={x:o[0],y:o[1],z:o[2],w:o[3]},this.data.temperature[0]=l;for(let e=0;e<E;e++){if(c=0,this.numSpatialInputs&&null!==(t=this.getChannel(3))){for(let t=0;t<this.numAccelAxes;t++)(h[e].acceleration[t]>this.data.accelerationMax||h[e].acceleration[t]<this.data.accelerationMin)&&(c|=1);for(let t=0;t<this.numGyroAxes;t++)(h[e].angularRate[t]>this.data.angularRateMax||h[e].angularRate[t]<this.data.angularRateMin)&&(c|=2);for(let t=0;t<this.numCompassAxes;t++)1e300!==h[e].magneticField[t]&&(h[e].magneticField[t]>this.data.magneticFieldMax||h[e].magneticField[t]<this.data.magneticFieldMin)&&(c|=4);if(0===c){let r=new BridgePacket;r.set({name:"0",type:"G",value:h[e].acceleration}),r.set({name:"1",type:"G",value:h[e].angularRate}),r.set({name:"2",type:"G",value:h[e].magneticField}),r.set({name:"3",type:"g",value:h[e].timestamp}),r.sendToChannel(t,89),r=new BridgePacket,r.set({name:"0",type:"G",value:h[e].quaternion}),r.set({name:"1",type:"g",value:h[e].timestamp}),r.sendToChannel(t,148)}else{if(1&c){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),e.set({name:"1",type:"s",value:"Accelerometer Saturation Detected."}),t.sendErrorEvent(e)}if(2&c){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),e.set({name:"1",type:"s",value:"Gyroscope Saturation Detected."}),t.sendErrorEvent(e)}if(4&c){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),e.set({name:"1",type:"s",value:"Magnetometer Saturation Detected."}),t.sendErrorEvent(e)}}}if(this.numAccelAxes){const r=0;if(null!==(t=this.getChannel(r))){c=!1,d=!1;for(let t=0;t<this.numAccelAxes;t++)1e300!==h[e].acceleration[t]&&((Math.abs(h[e].acceleration[t]-this.data.accelAxisLastTrigger[t])>=this.data.accelerationChangeTrigger||1e300===this.data.accelAxisLastTrigger[t])&&(d=!0),(h[e].acceleration[t]>this.data.accelerationMax||h[e].acceleration[t]<this.data.accelerationMin)&&(c=!0));if(c){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),e.set({name:"1",type:"s",value:"Accelerometer Saturation Detected."}),t.sendErrorEvent(e)}if(d){const r=new BridgePacket;r.set({name:"0",type:"G",value:h[e].acceleration}),r.set({name:"1",type:"g",value:h[e].timestamp}),r.sendToChannel(t,1);for(let t=0;t<this.numAccelAxes;t++)this.data.accelAxisLastTrigger[t]=h[e].acceleration[t]}}}if(this.numGyroAxes){const r=1;if(null!==(t=this.getChannel(r))){c=!1,d=!1;for(let t=0;t<this.numGyroAxes;t++)1e300!==h[e].angularRate[t]&&(d=!0,(h[e].angularRate[t]>this.data.angularRateMax||h[e].angularRate[t]<this.data.angularRateMin)&&(c=!0));if(c){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),e.set({name:"1",type:"s",value:"Gyroscope Saturation Detected."}),t.sendErrorEvent(e)}if(d){const r=new BridgePacket;r.set({name:"0",type:"G",value:h[e].angularRate}),r.set({name:"1",type:"g",value:h[e].timestamp}),r.sendToChannel(t,2)}}}if(this.numCompassAxes){const r=2;if(null!==(t=this.getChannel(r))){c=!1,d=!1;for(let t=0;t<this.numCompassAxes;t++)1e300!==h[e].magneticField[t]&&((Math.abs(h[e].magneticField[t]-this.data.magAxisLastTrigger[t])>=this.data.magneticFieldChangeTrigger||1e300===this.data.magAxisLastTrigger[t])&&(d=!0),(h[e].magneticField[t]>this.data.magneticFieldMax||h[e].magneticField[t]<this.data.magneticFieldMin)&&(c=!0));if(c){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),e.set({name:"1",type:"s",value:"Magnetometer Saturation Detected."}),t.sendErrorEvent(e)}if(d){const r=new BridgePacket;r.set({name:"0",type:"G",value:h[e].magneticField}),r.set({name:"1",type:"g",value:h[e].timestamp}),r.sendToChannel(t,18);for(let t=0;t<this.numCompassAxes;t++)this.data.magAxisLastTrigger[t]=h[e].magneticField[t]}}}}this.data.lastEventTime=this.data.latestDataTime}if(this.timestampDiff(this.data.latestDataTime,this.data.lastTemperatureEventTime)>=this.data.temperatureDataInterval){if(this.numTempInputs){const e=4;if(null!==(t=this.getChannel(e))){if(c=!1,d=!1,1e300!==this.data.temperature[0]&&((this.data.temperature[0]>this.data.temperatureMax||this.data.temperature[0]<this.data.temperatureMin)&&(c=!0,this.data.temperature[0]=1e300),(Math.abs(this.data.temperature[0]-this.data.temperatureLastTrigger)>=this.data.temperatureChangeTrigger||1e300===this.data.temperatureLastTrigger)&&(d=!0)),c){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.SATURATION}),e.set({name:"1",type:"s",value:"Temperature Saturation Detected."}),t.sendErrorEvent(e)}if(d){const e=new BridgePacket;e.set({name:"0",type:"g",value:this.data.temperature[0]}),e.sendToChannel(t,95),this.data.temperatureLastTrigger=this.data.temperature[0]}}}this.data.lastTemperatureEventTime=this.data.latestDataTime}i&&(this.data.doZeroGyro=!1)}break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}}setDataRate(e,t){t=t<this.data.interruptRate?UpperPowerOfTwo(t):Math.round(t/this.data.interruptRate)*this.data.interruptRate,this.data.dataInterval=t;let r=0;this.numAccelAxes>0&&r++,this.numGyroAxes>0&&r++,this.numCompassAxes>0&&r++,this.numSpatialInputs&&r++,this.numTempInputs&&r++;for(let t=0;t<r;t++){const r=this.getChannel(t);if(null!==r&&r!==e){const e=new BridgePacket;e.set({name:"0",type:"u",value:this.data.dataInterval}),e.sendToChannel(r,10)}}}setTemperatureDataRate(e){e=e<this.data.interruptRate?UpperPowerOfTwo(e):Math.round(e/this.data.interruptRate)*this.data.interruptRate,this.data.temperatureDataInterval=e}async zeroGyro(){await this.transferPacket(2,3,0)}async zeroAHRS(){await this.transferPacket(2,5,0)}async resetAHRS(){await this.transferPacket(2,7,0)}async configureAlgorithm(){const e=new ArrayBuffer(6),t=new DataView(e);t.setUint8(0,this.data.algorithm),t.setFloat32(1,this.data.AHRSMagGain,!0),await this.transferPacket(2,6,0,t)}async setPrecision(e){const t=new Uint8Array([e]);await this.transferPacket(2,2,0,t)}async resetCompassCorrectionParameters(){await this.transferPacket(2,8,0)}async saveCompassCorrectionParameters(){await this.transferPacket(2,9,0)}async setCompassCorrectionParameters(e){const t=new ArrayBuffer(52),r=new DataView(t);if(e.magField<.1||e.magField>1e3)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"magField must be between 0.1 and 1000.");if(e.offset0<-5||e.offset0>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Offset must be between -5 and 5.");if(e.offset1<-5||e.offset1>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Offset must be between -5 and 5.");if(e.offset2<-5||e.offset2>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Offset must be between -5 and 5.");if(e.gain0<0||e.gain0>15)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Gain must be between 0 and 15.");if(e.gain1<0||e.gain1>15)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Gain must be between 0 and 15.");if(e.gain2<0||e.gain2>15)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Gain must be between 0 and 15.");if(e.T0<-5||e.T0>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"T0 must be between -5 and 5.");if(e.T1<-5||e.T1>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"T1 must be between -5 and 5.");if(e.T2<-5||e.T2>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"T2 must be between -5 and 5.");if(e.T3<-5||e.T3>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"T3 must be between -5 and 5.");if(e.T4<-5||e.T4>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"T4 must be between -5 and 5.");if(e.T5<-5||e.T5>5)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"T5 must be between -5 and 5.");r.setFloat32(0,e.magField,!0),r.setFloat32(4,e.offset0,!0),r.setFloat32(8,e.offset1,!0),r.setFloat32(12,e.offset2,!0),r.setFloat32(16,e.gain0,!0),r.setFloat32(20,e.gain1,!0),r.setFloat32(24,e.gain2,!0),r.setFloat32(28,e.T0,!0),r.setFloat32(32,e.T1,!0),r.setFloat32(36,e.T2,!0),r.setFloat32(40,e.T3,!0),r.setFloat32(44,e.T4,!0),r.setFloat32(48,e.T5,!0),await this.transferPacket(2,16,0,r)}}class EncoderDevice extends PhidgetUSBDevice{constructor(e,t,r){switch(super(e,t,r),this.devDef.uid){case 53:case 73:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}this.data={inputState:new Array(this.numInputs).fill(2)}}get numEncoders(){return this.devDef.cn[0]}get numInputs(){return this.devDef.cn[1]}async initAfterOpen(){switch(this.devDef.uid){case 53:case 73:throw new PhidgetError(ErrorCode.UNSUPPORTED,"This Phidget is not yet supported via direct USB connection in JavaScript.")}}dataInput(e){}async bridgeInput(e,t){}}class BridgeDevice extends PhidgetUSBDevice{constructor(e,t,r){if(super(e,t,r),51!==this.devDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);this.data=this.initData()}get numBridgeInputs(){return this.devDef.cn[0]}async updateBridgeIntervals(e,t){let r,i;const a=4*this.numBridgeInputs+1,s=await this.transferPacket(3,0,0,a);for(let e=0;e<this.numBridgeInputs;e++)this.data.enabled[e]=0!=(s.getUint8(0)&1<<e),i=s.getFloat32(4*e+1,!0),this.data.dataInterval[e]=i<=6e4?i:1e300;for(let a=0;a<this.numBridgeInputs;a++){if(i=this.data.dataInterval[a],1e300===i)continue;if(r=RoundDouble(i>0?i:1,0),a==e.index){if(111===t.vpkt)continue;54!==t.vpkt?t.add({name:"",type:"g",value:i}):(t.remove("0"),t.set({name:"0",type:"u",value:r}),t.entryCount>1?(t.remove("1"),t.set({name:"1",type:"g",value:i})):t.add({name:"",type:"g",value:i}))}const s=this.getChannel(a);if(null!==s){const e=new BridgePacket;e.set({name:"0",type:"u",value:r}),e.set({name:"1",type:"g",value:i}),e.sendToChannel(s,10)}}}initData(){return{voltageRatio:new Array(this.numBridgeInputs).fill(1e300),dataInterval:new Array(this.numBridgeInputs).fill(1e300),voltageRatioChangeTrigger:new Array(this.numBridgeInputs).fill(1e300),enabled:new Array(this.numBridgeInputs).fill(!1),gain:new Array(this.numBridgeInputs).fill(2147483647),dataRate:4294967295,enabledEcho:new Array(this.numBridgeInputs).fill(!1),gainEcho:new Array(this.numBridgeInputs).fill(2147483647),bridgeLastTrigger:new Array(this.numBridgeInputs).fill(1e300),dataRateMin:1e300,dataRateMax:1e300,bridgeMin:new Array(this.numBridgeInputs).fill(1e300),bridgeMax:new Array(this.numBridgeInputs).fill(1e300),outOfRange:new Array(this.numBridgeInputs).fill(!1),chEnabledBugNotValid:new Array(this.numBridgeInputs).fill(!1),ch0EnableOverride:!1}}async initAfterOpen(){let e,t;if(this.data=this.initData(),51!==this.devDef.uid)throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected device");this.data.dataRateMin=1e3,this.data.dataRateMax=1,e=4*this.numBridgeInputs+1,t=await this.transferPacket(3,0,0,e);for(let e=0;e<this.numBridgeInputs;e++){this.data.bridgeMax[e]=1,this.data.bridgeMin[e]=-1,this.data.enabled[e]=0!=(t.getUint8(0)&1<<e);const r=t.getFloat32(4*e+1,!0);this.data.dataInterval[e]=r<=6e4?r:1e300}for(let e=0;e<this.numBridgeInputs;e++)this.data.voltageRatioChangeTrigger[e]=.001}dataInput(e){let t,r,i;if(51===this.devDef.uid){if(t=e.getUint8(1),27===e.getUint8(0)){if(this.data.voltageRatio[t]=e.getFloat32(2,!0),r=this.getChannel(t),null!==r){if(e.byteLength>6)switch(e.getInt8(6)){case 1:i=new BridgePacket,i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_HIGH_CONDITION}),i.set({name:"1",type:"s",value:"The sensor reading is too high for the selected gain mode."}),r.sendErrorEvent(i);break;case-1:i=new BridgePacket,i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE_LOW_CONDITION}),i.set({name:"1",type:"s",value:"The sensor reading is too low for the selected gain mode."}),r.sendErrorEvent(i);break;default:i=new BridgePacket,i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),i.set({name:"1",type:"s",value:"Value is unknown."}),r.sendErrorEvent(i)}i=new BridgePacket,i.set({name:"0",type:"g",value:this.data.voltageRatio[t]}),i.sendToChannel(r,102)}return}throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected device")}async bridgeInput(e,t){let r;if(51===this.devDef.uid)switch(t.vpkt){case 56:return r=new Uint8Array([t.getNumber(0)?255:0]),await this.transferPacket(0,30,e.uniqueIndex,r),this.data.enabled[e.index]=0!==r[0],void await this.updateBridgeIntervals(e,t);case 54:return r=new DataView(new ArrayBuffer(4)),t.entryCount>1?r.setFloat32(0,t.getNumber(1),!0):r.setFloat32(0,t.getNumber(0),!0),await this.transferPacket(0,252,e.uniqueIndex,r),r=await this.transferPacket(1,252,e.uniqueIndex,4),this.data.dataInterval[e.index]=r.getFloat32(0,!0),void await this.updateBridgeIntervals(e,t);case 46:return r=new DataView(new ArrayBuffer(4)),r.setUint32(0,2147483648*t.getNumber(0)),void await this.transferPacket(0,26,e.uniqueIndex,r);case 45:return r=new Uint8Array([t.getNumber(0)]),void await this.transferPacket(0,29,e.uniqueIndex,r);case 34:case 111:return this.data.enabled[e.index]=!1,await this.transferPacket(0,250,e.uniqueIndex),void await this.updateBridgeIntervals(e,t);case 143:return void await this.updateBridgeIntervals(e,t);default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type.")}throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected device")}}class DataAdapterDevice extends PhidgetUSBDevice{constructor(e,t,r){throw super(e,t,r),this.devDef.uid,new PhidgetError(ErrorCode.UNSUPPORTED)}get numDataAdapters(){return this.devDef.cn[0]}get numInputs(){return this.devDef.cn[1]}get numOutputs(){return this.devDef.cn[2]}async initAfterOpen(){switch(this.devDef.uid){case 105:case 107:case 109:throw new PhidgetError(ErrorCode.UNSUPPORTED,"This Phidget is not yet supported via direct USB connection in JavaScript.")}}dataInput(e){}async bridgeInput(e,t){}}class GenericDevice extends PhidgetUSBDevice{constructor(e,t,r){switch(super(e,t,r),this.devDef.uid){case 249:case 253:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}this.data={INPacketLength:[this.pusbParams.maxPacketEP1],OUTPacketLength:[0===this.pusbParams.ep2type?this.pusbParams.maxPacketEP0:this.pusbParams.maxPacketEP2],CTRPacketLength:[this.pusbParams.maxPacketEP0]}}async initAfterOpen(){}dataInput(e){}async bridgeInput(e,t){}}const TEMPSENSOR_MAXSENSORS=5,PHIDID_1048_GAIN=80/2.2+5,PHIDID_1048_OFFSET=4.096/6.36;class TemperatureSensorDevice extends PhidgetUSBDevice{constructor(e,t,r){if(super(e,t,r),56!==this.devDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);this.data=this.initData()}get numTempInputs(){return this.devDef.cn[0]}get numVoltageInputs(){return this.devDef.cn[1]}lookup_voltage(e,t){let r;switch(t){case ThermocoupleType.K:r=thermocouple_table_k_type;break;case ThermocoupleType.J:r=thermocouple_table_j_type;break;case ThermocoupleType.E:r=thermocouple_table_e_type;break;case ThermocoupleType.T:r=thermocouple_table_t_type;break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}const i=thermocouple_table_range[t][0];if(RoundDouble(e,0)-i<0)return 1e300;if(RoundDouble(e,0)-(i-1)>=r.length)return 1e300;return(r[RoundDouble(e,0)-i]+(r[RoundDouble(e,0)-(i-1)]-r[RoundDouble(e,0)-i])*(e-RoundDouble(e,0)))/1e3}lookup_temperature(e,t){let r,i=1e300;switch(t){case ThermocoupleType.K:r=thermocouple_table_k_type;break;case ThermocoupleType.J:r=thermocouple_table_j_type;break;case ThermocoupleType.E:r=thermocouple_table_e_type;break;case ThermocoupleType.T:r=thermocouple_table_t_type;break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}const a=thermocouple_table_range[t][0];if((e*=1e3)<r[0])return 1e300;for(let t=0;t<r.length;t++)if(r[t]>e){i=t+(a-1)+(e-r[t-1])/(r[t]-r[t-1]);break}return i}initData(){return{maxTemperature:new Array(this.numTempInputs).fill(1e300),minTemperature:new Array(this.numTempInputs).fill(1e300),temperature:new Array(this.numTempInputs).fill(1e300),voltage:new Array(this.numVoltageInputs).fill(1e300),voltageChangeTrigger:new Array(this.numVoltageInputs).fill(0),lastVoltageTrigger:new Array(this.numVoltageInputs).fill(1e300),potentialMin:RoundDouble(-.010009399405625822,5),potentialMax:RoundDouble(.07741038081415441,5),voltageDeadline:new Array(this.numTempInputs).fill(0),voltageDataInterval:new Array(this.numTempInputs).fill(1e300),thermocoupleType:new Array(this.numTempInputs-1).fill(ThermocoupleType.K),temperatureChangeTrigger:new Array(this.numTempInputs).fill(0),ambientTemperatureIndex:this.numTempInputs-1,temperatureDeadline:new Array(this.numTempInputs).fill(0),temperatureDataInterval:new Array(this.numTempInputs).fill(1e300),interruptRate:32,lastTrigger:new Array(this.numTempInputs).fill(1e300),lastAmbientTrigger:1e300,di_calltm:0}}async initAfterOpen(){this.data=this.initData(),this.data.minTemperature[this.data.ambientTemperatureIndex]=-55,this.data.maxTemperature[this.data.ambientTemperatureIndex]=150}dataInput(e){const t=new Array(5).fill(0),r=new Array(5).fill(0);let i,a,s,n,o,h=0;if(56!==this.devDef.uid)throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected device");s=RoundDouble(e.getFloat32(16,!0),4),h=e.getUint8(20);for(let n=0;n<this.numTempInputs-1;n++)r[n]=RoundDouble(e.getFloat32(4*n,!0),7),i=r[n]+this.lookup_voltage(s,this.data.thermocoupleType[n]),a=this.lookup_temperature(i,this.data.thermocoupleType[n]),t[n]=1e300!=a?RoundDouble(a,4):1e300;if(this.data.di_calltm++,s>this.data.maxTemperature[this.data.ambientTemperatureIndex]){if(this.data.temperature[this.data.ambientTemperatureIndex]=1e300,n=this.getChannel(this.numTempInputs+this.numVoltageInputs),null!==n){const e="Ambient sensor reported a temperature of ".concat(s.toFixed(4),"C which is over the maximum of ").concat(this.data.maxTemperature[this.data.ambientTemperatureIndex].toFixed(4),"C"),t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:e}),n.sendErrorEvent(t)}}else if(s<this.data.minTemperature[this.data.ambientTemperatureIndex]){if(this.data.temperature[this.data.ambientTemperatureIndex]=1e300,n=this.getChannel(this.numTempInputs+this.numVoltageInputs),null!==n){const e="Ambient sensor reported a temperature of ".concat(s.toFixed(4),"C which is below the minimum of ").concat(this.data.minTemperature[this.data.ambientTemperatureIndex].toFixed(4),"C"),t=new BridgePacket;t.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),t.set({name:"1",type:"s",value:e}),n.sendErrorEvent(t)}}else if(this.data.temperature[this.data.ambientTemperatureIndex]=s,56===this.devDef.uid)for(let e=0;e<this.numTempInputs-1;e++)2147483647!==this.data.thermocoupleType[e]&&(o=this.lookup_voltage(thermocouple_useful_range[this.data.thermocoupleType[e]][1]-this.data.temperature[this.data.ambientTemperatureIndex],this.data.thermocoupleType[e]),o>this.data.potentialMax&&(this.data.maxTemperature[e]=10*RoundDouble((this.lookup_temperature(this.data.potentialMax,this.data.thermocoupleType[e])+this.data.temperature[this.data.ambientTemperatureIndex])/10,0)),o=this.lookup_voltage(thermocouple_useful_range[this.data.thermocoupleType[e]][0]-this.data.temperature[this.data.ambientTemperatureIndex],this.data.thermocoupleType[e]),o<this.data.potentialMin&&(this.data.minTemperature[e]=10*RoundDouble((this.lookup_temperature(this.data.potentialMin,this.data.thermocoupleType[e])+this.data.temperature[this.data.ambientTemperatureIndex])/10,0)));for(let e=0;e<this.numTempInputs-1;e++){if(n=this.getChannel(e),0!=(h&1<<e)){if(this.data.temperature[e]=1e300,null!==n){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),e.set({name:"1",type:"s",value:"Input reported a bad connection on this channel.  Check there is a thermocouple attached."}),n.sendErrorEvent(e)}}else if(1e300===this.data.temperature[this.data.ambientTemperatureIndex]){if(this.data.temperature[e]=1e300,null!==n){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"Temperature cannot be calculated because the ambient temperature is unkonwn."}),n.sendErrorEvent(e)}}else if(1e300===t[e]){if(this.data.temperature[e]=1e300,2147483647!==this.data.thermocoupleType[e]&&null!==n){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"Input reported an undefined temperature. Probably there is no thermocouple plugged in."}),n.sendErrorEvent(e)}}else if(t[e]>this.data.maxTemperature[e]){if(this.data.temperature[e]=1e300,null!==n){const r="Input reported a temperature of ".concat(t[e].toFixed(4),"C which is over the maximum of ").concat(this.data.maxTemperature[e].toFixed(4),"C"),i=new BridgePacket;i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),i.set({name:"1",type:"s",value:r}),n.sendErrorEvent(i)}}else if(t[e]<this.data.minTemperature[e]){if(this.data.temperature[e]=1e300,null!==n){const r="Input reported a temperature of ".concat(t[e].toFixed(4),"C which is below the minimum of ").concat(this.data.minTemperature[e].toFixed(4),"C"),i=new BridgePacket;i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),i.set({name:"1",type:"s",value:r}),n.sendErrorEvent(i)}}else this.data.temperature[e]=t[e];if(56===this.devDef.uid)if(n=this.getChannel(e+this.numTempInputs),0!=(h&1<<e)){if(this.data.voltage[e]=1e300,null!==n){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.BAD_CONNECTION_CONDITION}),e.set({name:"1",type:"s",value:"Input reported a bad connection on this channel."}),n.sendErrorEvent(e)}}else if(r[e]>this.data.potentialMax){if(this.data.voltage[e]=1e300,null!==n){const t="Input reported a potential of ".concat(r[e].toFixed(4),"mV which is above the maximum of ").concat(this.data.potentialMax.toFixed(4),"mV"),i=new BridgePacket;i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),i.set({name:"1",type:"s",value:t}),n.sendErrorEvent(i)}}else if(r[e]<this.data.potentialMin){if(this.data.voltage[e]=1e300,null!==n){const t="Input reported a potential of ".concat(r[e].toFixed(4),"mV which is below the minimum of ").concat(this.data.potentialMin.toFixed(4),"mV"),i=new BridgePacket;i.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),i.set({name:"1",type:"s",value:t}),n.sendErrorEvent(i)}}else this.data.voltage[e]=r[e]}const c=this.data.interruptRate*this.data.di_calltm;for(let e=0;e<this.numTempInputs;e++)if(1e300!==this.data.temperature[e]&&!(c<this.data.temperatureDeadline[e])&&(n=this.getChannel(e),null!==n&&(1e300===this.data.lastTrigger[e]||Math.abs(this.data.temperature[e]-this.data.lastTrigger[e])>=this.data.temperatureChangeTrigger[e]))){const t=new BridgePacket;t.set({name:"0",type:"g",value:this.data.temperature[e]}),t.sendToChannel(n,95),this.data.lastTrigger[e]=this.data.temperature[e],this.data.temperatureDeadline[e]=c+this.data.temperatureDataInterval[e]}for(let e=0;e<this.numVoltageInputs;e++)if(1e300!==this.data.voltage[e]&&!(c<this.data.voltageDeadline[e])&&(n=this.getChannel(e+this.numTempInputs),null!==n&&(1e300===this.data.lastVoltageTrigger[e]||Math.abs(this.data.voltage[e]-this.data.lastVoltageTrigger[e])>=this.data.voltageChangeTrigger[e]))){const t=new BridgePacket;t.set({name:"0",type:"g",value:this.data.voltage[e]}),t.sendToChannel(n,101),this.data.lastVoltageTrigger[e]=this.data.voltage[e],this.data.voltageDeadline[e]=c+this.data.voltageDataInterval[e]}}async bridgeInput(e,t){switch(e.class){case ChannelClass.TEMPERATURE_SENSOR:switch(t.vpkt){case 54:return this.data.temperatureDataInterval[e.index]=this.at(t,this.data.interruptRate),void(this.data.temperatureDeadline[e.index]=0);case 46:return void(this.data.temperatureChangeTrigger[e.index]=t.getNumber(0));case 84:{const r=t.getNumber(0);this.data.thermocoupleType[e.index]=r,this.data.maxTemperature[e.index]=thermocouple_useful_range[r][1],this.data.minTemperature[e.index]=thermocouple_useful_range[r][0],1e300!==this.data.temperature[this.data.ambientTemperatureIndex]&&(this.lookup_voltage(this.data.maxTemperature[e.index]-this.data.temperature[this.data.ambientTemperatureIndex],r)>this.data.potentialMax&&(this.data.maxTemperature[e.index]=10*RoundDouble((this.lookup_temperature(this.data.potentialMax,r)+this.data.temperature[this.data.ambientTemperatureIndex])/10,0)),this.lookup_voltage(this.data.minTemperature[e.index]-this.data.temperature[this.data.ambientTemperatureIndex],r)<this.data.potentialMin&&(this.data.minTemperature[e.index]=10*RoundDouble((this.lookup_temperature(this.data.potentialMin,r)+this.data.temperature[this.data.ambientTemperatureIndex])/10,0)))}return;case 34:case 111:if(56===this.devDef.uid)e.index!==this.data.ambientTemperatureIndex&&(this.data.thermocoupleType[e.index]=2147483647,this.data.maxTemperature[e.index]=1e300,this.data.minTemperature[e.index]=1e300);return;case 143:return;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}case ChannelClass.VOLTAGE_INPUT:switch(t.vpkt){case 54:return this.data.voltageDataInterval[e.index]=this.at(t,this.data.interruptRate),void(this.data.voltageDeadline[e.index]=0);case 46:return void(this.data.voltageChangeTrigger[e.index]=t.getNumber(0));case 34:case 111:case 143:return;default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected packet type")}default:throw new PhidgetError(ErrorCode.UNEXPECTED,"Unexpected channel class")}}}const thermocouple_table_range=[[0,0],[-210,1200],[-270,1372],[-270,1e3],[-270,400]],thermocouple_useful_range=[[0,0],[0,750],[-200,1250],[-200,900],[-200,350]],thermocouple_table_e_type=[-9.835,-9.833,-9.831,-9.828,-9.825,-9.821,-9.817,-9.813,-9.808,-9.802,-9.797,-9.79,-9.784,-9.777,-9.77,-9.762,-9.754,-9.746,-9.737,-9.728,-9.718,-9.709,-9.698,-9.688,-9.677,-9.666,-9.654,-9.642,-9.63,-9.617,-9.604,-9.591,-9.577,-9.563,-9.548,-9.534,-9.519,-9.503,-9.487,-9.471,-9.455,-9.438,-9.421,-9.404,-9.386,-9.368,-9.35,-9.331,-9.313,-9.293,-9.274,-9.254,-9.234,-9.214,-9.193,-9.172,-9.151,-9.129,-9.107,-9.085,-9.063,-9.04,-9.017,-8.994,-8.971,-8.947,-8.923,-8.899,-8.874,-8.85,-8.825,-8.799,-8.774,-8.748,-8.722,-8.696,-8.669,-8.643,-8.616,-8.588,-8.561,-8.533,-8.505,-8.477,-8.449,-8.42,-8.391,-8.362,-8.333,-8.303,-8.273,-8.243,-8.213,-8.183,-8.152,-8.121,-8.09,-8.059,-8.027,-7.995,-7.963,-7.931,-7.899,-7.866,-7.833,-7.8,-7.767,-7.733,-7.7,-7.666,-7.632,-7.597,-7.563,-7.528,-7.493,-7.458,-7.423,-7.387,-7.351,-7.315,-7.279,-7.243,-7.206,-7.17,-7.133,-7.096,-7.058,-7.021,-6.983,-6.945,-6.907,-6.869,-6.831,-6.792,-6.753,-6.714,-6.675,-6.636,-6.596,-6.556,-6.516,-6.476,-6.436,-6.396,-6.355,-6.314,-6.273,-6.232,-6.191,-6.149,-6.107,-6.065,-6.023,-5.981,-5.939,-5.896,-5.853,-5.81,-5.767,-5.724,-5.681,-5.637,-5.593,-5.549,-5.505,-5.461,-5.417,-5.372,-5.327,-5.282,-5.237,-5.192,-5.147,-5.101,-5.055,-5.009,-4.963,-4.917,-4.871,-4.824,-4.777,-4.731,-4.684,-4.636,-4.589,-4.542,-4.494,-4.446,-4.398,-4.35,-4.302,-4.254,-4.205,-4.156,-4.107,-4.058,-4.009,-3.96,-3.911,-3.861,-3.811,-3.761,-3.711,-3.661,-3.611,-3.561,-3.51,-3.459,-3.408,-3.357,-3.306,-3.255,-3.204,-3.152,-3.1,-3.048,-2.996,-2.944,-2.892,-2.84,-2.787,-2.735,-2.682,-2.629,-2.576,-2.523,-2.469,-2.416,-2.362,-2.309,-2.255,-2.201,-2.147,-2.093,-2.038,-1.984,-1.929,-1.874,-1.82,-1.765,-1.709,-1.654,-1.599,-1.543,-1.488,-1.432,-1.376,-1.32,-1.264,-1.208,-1.152,-1.095,-1.039,-.982,-.925,-.868,-.811,-.754,-.697,-.639,-.582,-.524,-.466,-.408,-.35,-.292,-.234,-.176,-.117,-.059,0,.059,.118,.176,.235,.294,.354,.413,.472,.532,.591,.651,.711,.77,.83,.89,.95,1.01,1.071,1.131,1.192,1.252,1.313,1.373,1.434,1.495,1.556,1.617,1.678,1.74,1.801,1.862,1.924,1.986,2.047,2.109,2.171,2.233,2.295,2.357,2.42,2.482,2.545,2.607,2.67,2.733,2.795,2.858,2.921,2.984,3.048,3.111,3.174,3.238,3.301,3.365,3.429,3.492,3.556,3.62,3.685,3.749,3.813,3.877,3.942,4.006,4.071,4.136,4.2,4.265,4.33,4.395,4.46,4.526,4.591,4.656,4.722,4.788,4.853,4.919,4.985,5.051,5.117,5.183,5.249,5.315,5.382,5.448,5.514,5.581,5.648,5.714,5.781,5.848,5.915,5.982,6.049,6.117,6.184,6.251,6.319,6.386,6.454,6.522,6.59,6.658,6.725,6.794,6.862,6.93,6.998,7.066,7.135,7.203,7.272,7.341,7.409,7.478,7.547,7.616,7.685,7.754,7.823,7.892,7.962,8.031,8.101,8.17,8.24,8.309,8.379,8.449,8.519,8.589,8.659,8.729,8.799,8.869,8.94,9.01,9.081,9.151,9.222,9.292,9.363,9.434,9.505,9.576,9.647,9.718,9.789,9.86,9.931,10.003,10.074,10.145,10.217,10.288,10.36,10.432,10.503,10.575,10.647,10.719,10.791,10.863,10.935,11.007,11.08,11.152,11.224,11.297,11.369,11.442,11.514,11.587,11.66,11.733,11.805,11.878,11.951,12.024,12.097,12.17,12.243,12.317,12.39,12.463,12.537,12.61,12.684,12.757,12.831,12.904,12.978,13.052,13.126,13.199,13.273,13.347,13.421,13.495,13.569,13.644,13.718,13.792,13.866,13.941,14.015,14.09,14.164,14.239,14.313,14.388,14.463,14.537,14.612,14.687,14.762,14.837,14.912,14.987,15.062,15.137,15.212,15.287,15.362,15.438,15.513,15.588,15.664,15.739,15.815,15.89,15.966,16.041,16.117,16.193,16.269,16.344,16.42,16.496,16.572,16.648,16.724,16.8,16.876,16.952,17.028,17.104,17.181,17.257,17.333,17.409,17.486,17.562,17.639,17.715,17.792,17.868,17.945,18.021,18.098,18.175,18.252,18.328,18.405,18.482,18.559,18.636,18.713,18.79,18.867,18.944,19.021,19.098,19.175,19.252,19.33,19.407,19.484,19.561,19.639,19.716,19.794,19.871,19.948,20.026,20.103,20.181,20.259,20.336,20.414,20.492,20.569,20.647,20.725,20.803,20.88,20.958,21.036,21.114,21.192,21.27,21.348,21.426,21.504,21.582,21.66,21.739,21.817,21.895,21.973,22.051,22.13,22.208,22.286,22.365,22.443,22.522,22.6,22.678,22.757,22.835,22.914,22.993,23.071,23.15,23.228,23.307,23.386,23.464,23.543,23.622,23.701,23.78,23.858,23.937,24.016,24.095,24.174,24.253,24.332,24.411,24.49,24.569,24.648,24.727,24.806,24.885,24.964,25.044,25.123,25.202,25.281,25.36,25.44,25.519,25.598,25.678,25.757,25.836,25.916,25.995,26.075,26.154,26.233,26.313,26.392,26.472,26.552,26.631,26.711,26.79,26.87,26.95,27.029,27.109,27.189,27.268,27.348,27.428,27.507,27.587,27.667,27.747,27.827,27.907,27.986,28.066,28.146,28.226,28.306,28.386,28.466,28.546,28.626,28.706,28.786,28.866,28.946,29.026,29.106,29.186,29.266,29.346,29.427,29.507,29.587,29.667,29.747,29.827,29.908,29.988,30.068,30.148,30.229,30.309,30.389,30.47,30.55,30.63,30.711,30.791,30.871,30.952,31.032,31.112,31.193,31.273,31.354,31.434,31.515,31.595,31.676,31.756,31.837,31.917,31.998,32.078,32.159,32.239,32.32,32.4,32.481,32.562,32.642,32.723,32.803,32.884,32.965,33.045,33.126,33.207,33.287,33.368,33.449,33.529,33.61,33.691,33.772,33.852,33.933,34.014,34.095,34.175,34.256,34.337,34.418,34.498,34.579,34.66,34.741,34.822,34.902,34.983,35.064,35.145,35.226,35.307,35.387,35.468,35.549,35.63,35.711,35.792,35.873,35.954,36.034,36.115,36.196,36.277,36.358,36.439,36.52,36.601,36.682,36.763,36.843,36.924,37.005,37.086,37.167,37.248,37.329,37.41,37.491,37.572,37.653,37.734,37.815,37.896,37.977,38.058,38.139,38.22,38.3,38.381,38.462,38.543,38.624,38.705,38.786,38.867,38.948,39.029,39.11,39.191,39.272,39.353,39.434,39.515,39.596,39.677,39.758,39.839,39.92,40.001,40.082,40.163,40.243,40.324,40.405,40.486,40.567,40.648,40.729,40.81,40.891,40.972,41.053,41.134,41.215,41.296,41.377,41.457,41.538,41.619,41.7,41.781,41.862,41.943,42.024,42.105,42.185,42.266,42.347,42.428,42.509,42.59,42.671,42.751,42.832,42.913,42.994,43.075,43.156,43.236,43.317,43.398,43.479,43.56,43.64,43.721,43.802,43.883,43.963,44.044,44.125,44.206,44.286,44.367,44.448,44.529,44.609,44.69,44.771,44.851,44.932,45.013,45.093,45.174,45.255,45.335,45.416,45.497,45.577,45.658,45.738,45.819,45.9,45.98,46.061,46.141,46.222,46.302,46.383,46.463,46.544,46.624,46.705,46.785,46.866,46.946,47.027,47.107,47.188,47.268,47.349,47.429,47.509,47.59,47.67,47.751,47.831,47.911,47.992,48.072,48.152,48.233,48.313,48.393,48.474,48.554,48.634,48.715,48.795,48.875,48.955,49.035,49.116,49.196,49.276,49.356,49.436,49.517,49.597,49.677,49.757,49.837,49.917,49.997,50.077,50.157,50.238,50.318,50.398,50.478,50.558,50.638,50.718,50.798,50.878,50.958,51.038,51.118,51.197,51.277,51.357,51.437,51.517,51.597,51.677,51.757,51.837,51.916,51.996,52.076,52.156,52.236,52.315,52.395,52.475,52.555,52.634,52.714,52.794,52.873,52.953,53.033,53.112,53.192,53.272,53.351,53.431,53.51,53.59,53.67,53.749,53.829,53.908,53.988,54.067,54.147,54.226,54.306,54.385,54.465,54.544,54.624,54.703,54.782,54.862,54.941,55.021,55.1,55.179,55.259,55.338,55.417,55.497,55.576,55.655,55.734,55.814,55.893,55.972,56.051,56.131,56.21,56.289,56.368,56.447,56.526,56.606,56.685,56.764,56.843,56.922,57.001,57.08,57.159,57.238,57.317,57.396,57.475,57.554,57.633,57.712,57.791,57.87,57.949,58.028,58.107,58.186,58.265,58.343,58.422,58.501,58.58,58.659,58.738,58.816,58.895,58.974,59.053,59.131,59.21,59.289,59.367,59.446,59.525,59.604,59.682,59.761,59.839,59.918,59.997,60.075,60.154,60.232,60.311,60.39,60.468,60.547,60.625,60.704,60.782,60.86,60.939,61.017,61.096,61.174,61.253,61.331,61.409,61.488,61.566,61.644,61.723,61.801,61.879,61.958,62.036,62.114,62.192,62.271,62.349,62.427,62.505,62.583,62.662,62.74,62.818,62.896,62.974,63.052,63.13,63.208,63.286,63.364,63.442,63.52,63.598,63.676,63.754,63.832,63.91,63.988,64.066,64.144,64.222,64.3,64.377,64.455,64.533,64.611,64.689,64.766,64.844,64.922,65,65.077,65.155,65.233,65.31,65.388,65.465,65.543,65.621,65.698,65.776,65.853,65.931,66.008,66.086,66.163,66.241,66.318,66.396,66.473,66.55,66.628,66.705,66.782,66.86,66.937,67.014,67.092,67.169,67.246,67.323,67.4,67.478,67.555,67.632,67.709,67.786,67.863,67.94,68.017,68.094,68.171,68.248,68.325,68.402,68.479,68.556,68.633,68.71,68.787,68.863,68.94,69.017,69.094,69.171,69.247,69.324,69.401,69.477,69.554,69.631,69.707,69.784,69.86,69.937,70.013,70.09,70.166,70.243,70.319,70.396,70.472,70.548,70.625,70.701,70.777,70.854,70.93,71.006,71.082,71.159,71.235,71.311,71.387,71.463,71.539,71.615,71.692,71.768,71.844,71.92,71.996,72.072,72.147,72.223,72.299,72.375,72.451,72.527,72.603,72.678,72.754,72.83,72.906,72.981,73.057,73.133,73.208,73.284,73.36,73.435,73.511,73.586,73.662,73.738,73.813,73.889,73.964,74.04,74.115,74.19,74.266,74.341,74.417,74.492,74.567,74.643,74.718,74.793,74.869,74.944,75.019,75.095,75.17,75.245,75.32,75.395,75.471,75.546,75.621,75.696,75.771,75.847,75.922,75.997,76.072,76.147,76.223,76.298,76.373],thermocouple_table_t_type=[-6.258,-6.256,-6.255,-6.253,-6.251,-6.248,-6.245,-6.242,-6.239,-6.236,-6.232,-6.228,-6.223,-6.219,-6.214,-6.209,-6.204,-6.198,-6.193,-6.187,-6.18,-6.174,-6.167,-6.16,-6.153,-6.146,-6.138,-6.13,-6.122,-6.114,-6.105,-6.096,-6.087,-6.078,-6.068,-6.059,-6.049,-6.038,-6.028,-6.017,-6.007,-5.996,-5.985,-5.973,-5.962,-5.95,-5.938,-5.926,-5.914,-5.901,-5.888,-5.876,-5.863,-5.85,-5.836,-5.823,-5.809,-5.795,-5.782,-5.767,-5.753,-5.739,-5.724,-5.71,-5.695,-5.68,-5.665,-5.65,-5.634,-5.619,-5.603,-5.587,-5.571,-5.555,-5.539,-5.523,-5.506,-5.489,-5.473,-5.456,-5.439,-5.421,-5.404,-5.387,-5.369,-5.351,-5.334,-5.316,-5.297,-5.279,-5.261,-5.242,-5.224,-5.205,-5.186,-5.167,-5.148,-5.128,-5.109,-5.089,-5.07,-5.05,-5.03,-5.01,-4.989,-4.969,-4.949,-4.928,-4.907,-4.886,-4.865,-4.844,-4.823,-4.802,-4.78,-4.759,-4.737,-4.715,-4.693,-4.671,-4.648,-4.626,-4.604,-4.581,-4.558,-4.535,-4.512,-4.489,-4.466,-4.443,-4.419,-4.395,-4.372,-4.348,-4.324,-4.3,-4.275,-4.251,-4.226,-4.202,-4.177,-4.152,-4.127,-4.102,-4.077,-4.052,-4.026,-4,-3.975,-3.949,-3.923,-3.897,-3.871,-3.844,-3.818,-3.791,-3.765,-3.738,-3.711,-3.684,-3.657,-3.629,-3.602,-3.574,-3.547,-3.519,-3.491,-3.463,-3.435,-3.407,-3.379,-3.35,-3.322,-3.293,-3.264,-3.235,-3.206,-3.177,-3.148,-3.118,-3.089,-3.059,-3.03,-3,-2.97,-2.94,-2.91,-2.879,-2.849,-2.818,-2.788,-2.757,-2.726,-2.695,-2.664,-2.633,-2.602,-2.571,-2.539,-2.507,-2.476,-2.444,-2.412,-2.38,-2.348,-2.316,-2.283,-2.251,-2.218,-2.186,-2.153,-2.12,-2.087,-2.054,-2.021,-1.987,-1.954,-1.92,-1.887,-1.853,-1.819,-1.785,-1.751,-1.717,-1.683,-1.648,-1.614,-1.579,-1.545,-1.51,-1.475,-1.44,-1.405,-1.37,-1.335,-1.299,-1.264,-1.228,-1.192,-1.157,-1.121,-1.085,-1.049,-1.013,-.976,-.94,-.904,-.867,-.83,-.794,-.757,-.72,-.683,-.646,-.608,-.571,-.534,-.496,-.459,-.421,-.383,-.345,-.307,-.269,-.231,-.193,-.154,-.116,-.077,-.039,0,.039,.078,.117,.156,.195,.234,.273,.312,.352,.391,.431,.47,.51,.549,.589,.629,.669,.709,.749,.79,.83,.87,.911,.951,.992,1.033,1.074,1.114,1.155,1.196,1.238,1.279,1.32,1.362,1.403,1.445,1.486,1.528,1.57,1.612,1.654,1.696,1.738,1.78,1.823,1.865,1.908,1.95,1.993,2.036,2.079,2.122,2.165,2.208,2.251,2.294,2.338,2.381,2.425,2.468,2.512,2.556,2.6,2.643,2.687,2.732,2.776,2.82,2.864,2.909,2.953,2.998,3.043,3.087,3.132,3.177,3.222,3.267,3.312,3.358,3.403,3.448,3.494,3.539,3.585,3.631,3.677,3.722,3.768,3.814,3.86,3.907,3.953,3.999,4.046,4.092,4.138,4.185,4.232,4.279,4.325,4.372,4.419,4.466,4.513,4.561,4.608,4.655,4.702,4.75,4.798,4.845,4.893,4.941,4.988,5.036,5.084,5.132,5.18,5.228,5.277,5.325,5.373,5.422,5.47,5.519,5.567,5.616,5.665,5.714,5.763,5.812,5.861,5.91,5.959,6.008,6.057,6.107,6.156,6.206,6.255,6.305,6.355,6.404,6.454,6.504,6.554,6.604,6.654,6.704,6.754,6.805,6.855,6.905,6.956,7.006,7.057,7.107,7.158,7.209,7.26,7.31,7.361,7.412,7.463,7.515,7.566,7.617,7.668,7.72,7.771,7.823,7.874,7.926,7.977,8.029,8.081,8.133,8.185,8.237,8.289,8.341,8.393,8.445,8.497,8.55,8.602,8.654,8.707,8.759,8.812,8.865,8.917,8.97,9.023,9.076,9.129,9.182,9.235,9.288,9.341,9.395,9.448,9.501,9.555,9.608,9.662,9.715,9.769,9.822,9.876,9.93,9.984,10.038,10.092,10.146,10.2,10.254,10.308,10.362,10.417,10.471,10.525,10.58,10.634,10.689,10.743,10.798,10.853,10.907,10.962,11.017,11.072,11.127,11.182,11.237,11.292,11.347,11.403,11.458,11.513,11.569,11.624,11.68,11.735,11.791,11.846,11.902,11.958,12.013,12.069,12.125,12.181,12.237,12.293,12.349,12.405,12.461,12.518,12.574,12.63,12.687,12.743,12.799,12.856,12.912,12.969,13.026,13.082,13.139,13.196,13.253,13.31,13.366,13.423,13.48,13.537,13.595,13.652,13.709,13.766,13.823,13.881,13.938,13.995,14.053,14.11,14.168,14.226,14.283,14.341,14.399,14.456,14.514,14.572,14.63,14.688,14.746,14.804,14.862,14.92,14.978,15.036,15.095,15.153,15.211,15.27,15.328,15.386,15.445,15.503,15.562,15.621,15.679,15.738,15.797,15.856,15.914,15.973,16.032,16.091,16.15,16.209,16.268,16.327,16.387,16.446,16.505,16.564,16.624,16.683,16.742,16.802,16.861,16.921,16.98,17.04,17.1,17.159,17.219,17.279,17.339,17.399,17.458,17.518,17.578,17.638,17.698,17.759,17.819,17.879,17.939,17.999,18.06,18.12,18.18,18.241,18.301,18.362,18.422,18.483,18.543,18.604,18.665,18.725,18.786,18.847,18.908,18.969,19.03,19.091,19.152,19.213,19.274,19.335,19.396,19.457,19.518,19.579,19.641,19.702,19.763,19.825,19.886,19.947,20.009,20.07,20.132,20.193,20.255,20.317,20.378,20.44,20.502,20.563,20.625,20.687,20.748,20.81,20.872],thermocouple_table_j_type=[-8.095,-8.076,-8.057,-8.037,-8.017,-7.996,-7.976,-7.955,-7.934,-7.912,-7.89,-7.868,-7.846,-7.824,-7.801,-7.778,-7.755,-7.731,-7.707,-7.683,-7.659,-7.634,-7.61,-7.585,-7.559,-7.534,-7.508,-7.482,-7.456,-7.429,-7.403,-7.376,-7.348,-7.321,-7.293,-7.265,-7.237,-7.209,-7.181,-7.152,-7.123,-7.094,-7.064,-7.035,-7.005,-6.975,-6.944,-6.914,-6.883,-6.853,-6.821,-6.79,-6.759,-6.727,-6.695,-6.663,-6.631,-6.598,-6.566,-6.533,-6.5,-6.467,-6.433,-6.4,-6.366,-6.332,-6.298,-6.263,-6.229,-6.194,-6.159,-6.124,-6.089,-6.054,-6.018,-5.982,-5.946,-5.91,-5.874,-5.838,-5.801,-5.764,-5.727,-5.69,-5.653,-5.616,-5.578,-5.541,-5.503,-5.465,-5.426,-5.388,-5.35,-5.311,-5.272,-5.233,-5.194,-5.155,-5.116,-5.076,-5.037,-4.997,-4.957,-4.917,-4.877,-4.836,-4.796,-4.755,-4.714,-4.674,-4.633,-4.591,-4.55,-4.509,-4.467,-4.425,-4.384,-4.342,-4.3,-4.257,-4.215,-4.173,-4.13,-4.088,-4.045,-4.002,-3.959,-3.916,-3.872,-3.829,-3.786,-3.742,-3.698,-3.654,-3.61,-3.566,-3.522,-3.478,-3.434,-3.389,-3.344,-3.3,-3.255,-3.21,-3.165,-3.12,-3.075,-3.029,-2.984,-2.938,-2.893,-2.847,-2.801,-2.755,-2.709,-2.663,-2.617,-2.571,-2.524,-2.478,-2.431,-2.385,-2.338,-2.291,-2.244,-2.197,-2.15,-2.103,-2.055,-2.008,-1.961,-1.913,-1.865,-1.818,-1.77,-1.722,-1.674,-1.626,-1.578,-1.53,-1.482,-1.433,-1.385,-1.336,-1.288,-1.239,-1.19,-1.142,-1.093,-1.044,-.995,-.946,-.896,-.847,-.798,-.749,-.699,-.65,-.6,-.55,-.501,-.451,-.401,-.351,-.301,-.251,-.201,-.151,-.101,-.05,0,.05,.101,.151,.202,.253,.303,.354,.405,.456,.507,.558,.609,.66,.711,.762,.814,.865,.916,.968,1.019,1.071,1.122,1.174,1.226,1.277,1.329,1.381,1.433,1.485,1.537,1.589,1.641,1.693,1.745,1.797,1.849,1.902,1.954,2.006,2.059,2.111,2.164,2.216,2.269,2.322,2.374,2.427,2.48,2.532,2.585,2.638,2.691,2.744,2.797,2.85,2.903,2.956,3.009,3.062,3.116,3.169,3.222,3.275,3.329,3.382,3.436,3.489,3.543,3.596,3.65,3.703,3.757,3.81,3.864,3.918,3.971,4.025,4.079,4.133,4.187,4.24,4.294,4.348,4.402,4.456,4.51,4.564,4.618,4.672,4.726,4.781,4.835,4.889,4.943,4.997,5.052,5.106,5.16,5.215,5.269,5.323,5.378,5.432,5.487,5.541,5.595,5.65,5.705,5.759,5.814,5.868,5.923,5.977,6.032,6.087,6.141,6.196,6.251,6.306,6.36,6.415,6.47,6.525,6.579,6.634,6.689,6.744,6.799,6.854,6.909,6.964,7.019,7.074,7.129,7.184,7.239,7.294,7.349,7.404,7.459,7.514,7.569,7.624,7.679,7.734,7.789,7.844,7.9,7.955,8.01,8.065,8.12,8.175,8.231,8.286,8.341,8.396,8.452,8.507,8.562,8.618,8.673,8.728,8.783,8.839,8.894,8.949,9.005,9.06,9.115,9.171,9.226,9.282,9.337,9.392,9.448,9.503,9.559,9.614,9.669,9.725,9.78,9.836,9.891,9.947,10.002,10.057,10.113,10.168,10.224,10.279,10.335,10.39,10.446,10.501,10.557,10.612,10.668,10.723,10.779,10.834,10.89,10.945,11.001,11.056,11.112,11.167,11.223,11.278,11.334,11.389,11.445,11.501,11.556,11.612,11.667,11.723,11.778,11.834,11.889,11.945,12,12.056,12.111,12.167,12.222,12.278,12.334,12.389,12.445,12.5,12.556,12.611,12.667,12.722,12.778,12.833,12.889,12.944,13,13.056,13.111,13.167,13.222,13.278,13.333,13.389,13.444,13.5,13.555,13.611,13.666,13.722,13.777,13.833,13.888,13.944,13.999,14.055,14.11,14.166,14.221,14.277,14.332,14.388,14.443,14.499,14.554,14.609,14.665,14.72,14.776,14.831,14.887,14.942,14.998,15.053,15.109,15.164,15.219,15.275,15.33,15.386,15.441,15.496,15.552,15.607,15.663,15.718,15.773,15.829,15.884,15.94,15.995,16.05,16.106,16.161,16.216,16.272,16.327,16.383,16.438,16.493,16.549,16.604,16.659,16.715,16.77,16.825,16.881,16.936,16.991,17.046,17.102,17.157,17.212,17.268,17.323,17.378,17.434,17.489,17.544,17.599,17.655,17.71,17.765,17.82,17.876,17.931,17.986,18.041,18.097,18.152,18.207,18.262,18.318,18.373,18.428,18.483,18.538,18.594,18.649,18.704,18.759,18.814,18.87,18.925,18.98,19.035,19.09,19.146,19.201,19.256,19.311,19.366,19.422,19.477,19.532,19.587,19.642,19.697,19.753,19.808,19.863,19.918,19.973,20.028,20.083,20.139,20.194,20.249,20.304,20.359,20.414,20.469,20.525,20.58,20.635,20.69,20.745,20.8,20.855,20.911,20.966,21.021,21.076,21.131,21.186,21.241,21.297,21.352,21.407,21.462,21.517,21.572,21.627,21.683,21.738,21.793,21.848,21.903,21.958,22.014,22.069,22.124,22.179,22.234,22.289,22.345,22.4,22.455,22.51,22.565,22.62,22.676,22.731,22.786,22.841,22.896,22.952,23.007,23.062,23.117,23.172,23.228,23.283,23.338,23.393,23.449,23.504,23.559,23.614,23.67,23.725,23.78,23.835,23.891,23.946,24.001,24.057,24.112,24.167,24.223,24.278,24.333,24.389,24.444,24.499,24.555,24.61,24.665,24.721,24.776,24.832,24.887,24.943,24.998,25.053,25.109,25.164,25.22,25.275,25.331,25.386,25.442,25.497,25.553,25.608,25.664,25.72,25.775,25.831,25.886,25.942,25.998,26.053,26.109,26.165,26.22,26.276,26.332,26.387,26.443,26.499,26.555,26.61,26.666,26.722,26.778,26.834,26.889,26.945,27.001,27.057,27.113,27.169,27.225,27.281,27.337,27.393,27.449,27.505,27.561,27.617,27.673,27.729,27.785,27.841,27.897,27.953,28.01,28.066,28.122,28.178,28.234,28.291,28.347,28.403,28.46,28.516,28.572,28.629,28.685,28.741,28.798,28.854,28.911,28.967,29.024,29.08,29.137,29.194,29.25,29.307,29.363,29.42,29.477,29.534,29.59,29.647,29.704,29.761,29.818,29.874,29.931,29.988,30.045,30.102,30.159,30.216,30.273,30.33,30.387,30.444,30.502,30.559,30.616,30.673,30.73,30.788,30.845,30.902,30.96,31.017,31.074,31.132,31.189,31.247,31.304,31.362,31.419,31.477,31.535,31.592,31.65,31.708,31.766,31.823,31.881,31.939,31.997,32.055,32.113,32.171,32.229,32.287,32.345,32.403,32.461,32.519,32.577,32.636,32.694,32.752,32.81,32.869,32.927,32.985,33.044,33.102,33.161,33.219,33.278,33.337,33.395,33.454,33.513,33.571,33.63,33.689,33.748,33.807,33.866,33.925,33.984,34.043,34.102,34.161,34.22,34.279,34.338,34.397,34.457,34.516,34.575,34.635,34.694,34.754,34.813,34.873,34.932,34.992,35.051,35.111,35.171,35.23,35.29,35.35,35.41,35.47,35.53,35.59,35.65,35.71,35.77,35.83,35.89,35.95,36.01,36.071,36.131,36.191,36.252,36.312,36.373,36.433,36.494,36.554,36.615,36.675,36.736,36.797,36.858,36.918,36.979,37.04,37.101,37.162,37.223,37.284,37.345,37.406,37.467,37.528,37.59,37.651,37.712,37.773,37.835,37.896,37.958,38.019,38.081,38.142,38.204,38.265,38.327,38.389,38.45,38.512,38.574,38.636,38.698,38.76,38.822,38.884,38.946,39.008,39.07,39.132,39.194,39.256,39.318,39.381,39.443,39.505,39.568,39.63,39.693,39.755,39.818,39.88,39.943,40.005,40.068,40.131,40.193,40.256,40.319,40.382,40.445,40.508,40.57,40.633,40.696,40.759,40.822,40.886,40.949,41.012,41.075,41.138,41.201,41.265,41.328,41.391,41.455,41.518,41.581,41.645,41.708,41.772,41.835,41.899,41.962,42.026,42.09,42.153,42.217,42.281,42.344,42.408,42.472,42.536,42.599,42.663,42.727,42.791,42.855,42.919,42.983,43.047,43.111,43.175,43.239,43.303,43.367,43.431,43.495,43.559,43.624,43.688,43.752,43.817,43.881,43.945,44.01,44.074,44.139,44.203,44.267,44.332,44.396,44.461,44.525,44.59,44.655,44.719,44.784,44.848,44.913,44.977,45.042,45.107,45.171,45.236,45.301,45.365,45.43,45.494,45.559,45.624,45.688,45.753,45.818,45.882,45.947,46.011,46.076,46.141,46.205,46.27,46.334,46.399,46.464,46.528,46.593,46.657,46.722,46.786,46.851,46.915,46.98,47.044,47.109,47.173,47.238,47.302,47.367,47.431,47.495,47.56,47.624,47.688,47.753,47.817,47.881,47.946,48.01,48.074,48.138,48.202,48.267,48.331,48.395,48.459,48.523,48.587,48.651,48.715,48.779,48.843,48.907,48.971,49.034,49.098,49.162,49.226,49.29,49.353,49.417,49.481,49.544,49.608,49.672,49.735,49.799,49.862,49.926,49.989,50.052,50.116,50.179,50.243,50.306,50.369,50.432,50.495,50.559,50.622,50.685,50.748,50.811,50.874,50.937,51,51.063,51.126,51.188,51.251,51.314,51.377,51.439,51.502,51.565,51.627,51.69,51.752,51.815,51.877,51.94,52.002,52.064,52.127,52.189,52.251,52.314,52.376,52.438,52.5,52.562,52.624,52.686,52.748,52.81,52.872,52.934,52.996,53.057,53.119,53.181,53.243,53.304,53.366,53.427,53.489,53.55,53.612,53.673,53.735,53.796,53.857,53.919,53.98,54.041,54.102,54.164,54.225,54.286,54.347,54.408,54.469,54.53,54.591,54.652,54.713,54.773,54.834,54.895,54.956,55.016,55.077,55.138,55.198,55.259,55.319,55.38,55.44,55.501,55.561,55.622,55.682,55.742,55.803,55.863,55.923,55.983,56.043,56.104,56.164,56.224,56.284,56.344,56.404,56.464,56.524,56.584,56.643,56.703,56.763,56.823,56.883,56.942,57.002,57.062,57.121,57.181,57.24,57.3,57.36,57.419,57.479,57.538,57.597,57.657,57.716,57.776,57.835,57.894,57.953,58.013,58.072,58.131,58.19,58.249,58.309,58.368,58.427,58.486,58.545,58.604,58.663,58.722,58.781,58.84,58.899,58.957,59.016,59.075,59.134,59.193,59.252,59.31,59.369,59.428,59.487,59.545,59.604,59.663,59.721,59.78,59.838,59.897,59.956,60.014,60.073,60.131,60.19,60.248,60.307,60.365,60.423,60.482,60.54,60.599,60.657,60.715,60.774,60.832,60.89,60.949,61.007,61.065,61.123,61.182,61.24,61.298,61.356,61.415,61.473,61.531,61.589,61.647,61.705,61.763,61.822,61.88,61.938,61.996,62.054,62.112,62.17,62.228,62.286,62.344,62.402,62.46,62.518,62.576,62.634,62.692,62.75,62.808,62.866,62.924,62.982,63.04,63.098,63.156,63.214,63.271,63.329,63.387,63.445,63.503,63.561,63.619,63.677,63.734,63.792,63.85,63.908,63.966,64.024,64.081,64.139,64.197,64.255,64.313,64.37,64.428,64.486,64.544,64.602,64.659,64.717,64.775,64.833,64.89,64.948,65.006,65.064,65.121,65.179,65.237,65.295,65.352,65.41,65.468,65.525,65.583,65.641,65.699,65.756,65.814,65.872,65.929,65.987,66.045,66.102,66.16,66.218,66.275,66.333,66.391,66.448,66.506,66.564,66.621,66.679,66.737,66.794,66.852,66.91,66.967,67.025,67.082,67.14,67.198,67.255,67.313,67.37,67.428,67.486,67.543,67.601,67.658,67.716,67.773,67.831,67.888,67.946,68.003,68.061,68.119,68.176,68.234,68.291,68.348,68.406,68.463,68.521,68.578,68.636,68.693,68.751,68.808,68.865,68.923,68.98,69.037,69.095,69.152,69.209,69.267,69.324,69.381,69.439,69.496,69.553],thermocouple_table_k_type=[-6.458,-6.457,-6.456,-6.455,-6.453,-6.452,-6.45,-6.448,-6.446,-6.444,-6.441,-6.438,-6.435,-6.432,-6.429,-6.425,-6.421,-6.417,-6.413,-6.408,-6.404,-6.399,-6.393,-6.388,-6.382,-6.377,-6.37,-6.364,-6.358,-6.351,-6.344,-6.337,-6.329,-6.322,-6.314,-6.306,-6.297,-6.289,-6.28,-6.271,-6.262,-6.252,-6.243,-6.233,-6.223,-6.213,-6.202,-6.192,-6.181,-6.17,-6.158,-6.147,-6.135,-6.123,-6.111,-6.099,-6.087,-6.074,-6.061,-6.048,-6.035,-6.021,-6.007,-5.994,-5.98,-5.965,-5.951,-5.936,-5.922,-5.907,-5.891,-5.876,-5.861,-5.845,-5.829,-5.813,-5.797,-5.78,-5.763,-5.747,-5.73,-5.713,-5.695,-5.678,-5.66,-5.642,-5.624,-5.606,-5.588,-5.569,-5.55,-5.531,-5.512,-5.493,-5.474,-5.454,-5.435,-5.415,-5.395,-5.374,-5.354,-5.333,-5.313,-5.292,-5.271,-5.25,-5.228,-5.207,-5.185,-5.163,-5.141,-5.119,-5.097,-5.074,-5.052,-5.029,-5.006,-4.983,-4.96,-4.936,-4.913,-4.889,-4.865,-4.841,-4.817,-4.793,-4.768,-4.744,-4.719,-4.694,-4.669,-4.644,-4.618,-4.593,-4.567,-4.542,-4.516,-4.49,-4.463,-4.437,-4.411,-4.384,-4.357,-4.33,-4.303,-4.276,-4.249,-4.221,-4.194,-4.166,-4.138,-4.11,-4.082,-4.054,-4.025,-3.997,-3.968,-3.939,-3.911,-3.882,-3.852,-3.823,-3.794,-3.764,-3.734,-3.705,-3.675,-3.645,-3.614,-3.584,-3.554,-3.523,-3.492,-3.462,-3.431,-3.4,-3.368,-3.337,-3.306,-3.274,-3.243,-3.211,-3.179,-3.147,-3.115,-3.083,-3.05,-3.018,-2.986,-2.953,-2.92,-2.887,-2.854,-2.821,-2.788,-2.755,-2.721,-2.688,-2.654,-2.62,-2.587,-2.553,-2.519,-2.485,-2.45,-2.416,-2.382,-2.347,-2.312,-2.278,-2.243,-2.208,-2.173,-2.138,-2.103,-2.067,-2.032,-1.996,-1.961,-1.925,-1.889,-1.854,-1.818,-1.782,-1.745,-1.709,-1.673,-1.637,-1.6,-1.564,-1.527,-1.49,-1.453,-1.417,-1.38,-1.343,-1.305,-1.268,-1.231,-1.194,-1.156,-1.119,-1.081,-1.043,-1.006,-.968,-.93,-.892,-.854,-.816,-.778,-.739,-.701,-.663,-.624,-.586,-.547,-.508,-.47,-.431,-.392,-.353,-.314,-.275,-.236,-.197,-.157,-.118,-.079,-.039,0,.039,.079,.119,.158,.198,.238,.277,.317,.357,.397,.437,.477,.517,.557,.597,.637,.677,.718,.758,.798,.838,.879,.919,.96,1,1.041,1.081,1.122,1.163,1.203,1.244,1.285,1.326,1.366,1.407,1.448,1.489,1.53,1.571,1.612,1.653,1.694,1.735,1.776,1.817,1.858,1.899,1.941,1.982,2.023,2.064,2.106,2.147,2.188,2.23,2.271,2.312,2.354,2.395,2.436,2.478,2.519,2.561,2.602,2.644,2.685,2.727,2.768,2.81,2.851,2.893,2.934,2.976,3.017,3.059,3.1,3.142,3.184,3.225,3.267,3.308,3.35,3.391,3.433,3.474,3.516,3.557,3.599,3.64,3.682,3.723,3.765,3.806,3.848,3.889,3.931,3.972,4.013,4.055,4.096,4.138,4.179,4.22,4.262,4.303,4.344,4.385,4.427,4.468,4.509,4.55,4.591,4.633,4.674,4.715,4.756,4.797,4.838,4.879,4.92,4.961,5.002,5.043,5.084,5.124,5.165,5.206,5.247,5.288,5.328,5.369,5.41,5.45,5.491,5.532,5.572,5.613,5.653,5.694,5.735,5.775,5.815,5.856,5.896,5.937,5.977,6.017,6.058,6.098,6.138,6.179,6.219,6.259,6.299,6.339,6.38,6.42,6.46,6.5,6.54,6.58,6.62,6.66,6.701,6.741,6.781,6.821,6.861,6.901,6.941,6.981,7.021,7.06,7.1,7.14,7.18,7.22,7.26,7.3,7.34,7.38,7.42,7.46,7.5,7.54,7.579,7.619,7.659,7.699,7.739,7.779,7.819,7.859,7.899,7.939,7.979,8.019,8.059,8.099,8.138,8.178,8.218,8.258,8.298,8.338,8.378,8.418,8.458,8.499,8.539,8.579,8.619,8.659,8.699,8.739,8.779,8.819,8.86,8.9,8.94,8.98,9.02,9.061,9.101,9.141,9.181,9.222,9.262,9.302,9.343,9.383,9.423,9.464,9.504,9.545,9.585,9.626,9.666,9.707,9.747,9.788,9.828,9.869,9.909,9.95,9.991,10.031,10.072,10.113,10.153,10.194,10.235,10.276,10.316,10.357,10.398,10.439,10.48,10.52,10.561,10.602,10.643,10.684,10.725,10.766,10.807,10.848,10.889,10.93,10.971,11.012,11.053,11.094,11.135,11.176,11.217,11.259,11.3,11.341,11.382,11.423,11.465,11.506,11.547,11.588,11.63,11.671,11.712,11.753,11.795,11.836,11.877,11.919,11.96,12.001,12.043,12.084,12.126,12.167,12.209,12.25,12.291,12.333,12.374,12.416,12.457,12.499,12.54,12.582,12.624,12.665,12.707,12.748,12.79,12.831,12.873,12.915,12.956,12.998,13.04,13.081,13.123,13.165,13.206,13.248,13.29,13.331,13.373,13.415,13.457,13.498,13.54,13.582,13.624,13.665,13.707,13.749,13.791,13.833,13.874,13.916,13.958,14,14.042,14.084,14.126,14.167,14.209,14.251,14.293,14.335,14.377,14.419,14.461,14.503,14.545,14.587,14.629,14.671,14.713,14.755,14.797,14.839,14.881,14.923,14.965,15.007,15.049,15.091,15.133,15.175,15.217,15.259,15.301,15.343,15.385,15.427,15.469,15.511,15.554,15.596,15.638,15.68,15.722,15.764,15.806,15.849,15.891,15.933,15.975,16.017,16.059,16.102,16.144,16.186,16.228,16.27,16.313,16.355,16.397,16.439,16.482,16.524,16.566,16.608,16.651,16.693,16.735,16.778,16.82,16.862,16.904,16.947,16.989,17.031,17.074,17.116,17.158,17.201,17.243,17.285,17.328,17.37,17.413,17.455,17.497,17.54,17.582,17.624,17.667,17.709,17.752,17.794,17.837,17.879,17.921,17.964,18.006,18.049,18.091,18.134,18.176,18.218,18.261,18.303,18.346,18.388,18.431,18.473,18.516,18.558,18.601,18.643,18.686,18.728,18.771,18.813,18.856,18.898,18.941,18.983,19.026,19.068,19.111,19.154,19.196,19.239,19.281,19.324,19.366,19.409,19.451,19.494,19.537,19.579,19.622,19.664,19.707,19.75,19.792,19.835,19.877,19.92,19.962,20.005,20.048,20.09,20.133,20.175,20.218,20.261,20.303,20.346,20.389,20.431,20.474,20.516,20.559,20.602,20.644,20.687,20.73,20.772,20.815,20.857,20.9,20.943,20.985,21.028,21.071,21.113,21.156,21.199,21.241,21.284,21.326,21.369,21.412,21.454,21.497,21.54,21.582,21.625,21.668,21.71,21.753,21.796,21.838,21.881,21.924,21.966,22.009,22.052,22.094,22.137,22.179,22.222,22.265,22.307,22.35,22.393,22.435,22.478,22.521,22.563,22.606,22.649,22.691,22.734,22.776,22.819,22.862,22.904,22.947,22.99,23.032,23.075,23.117,23.16,23.203,23.245,23.288,23.331,23.373,23.416,23.458,23.501,23.544,23.586,23.629,23.671,23.714,23.757,23.799,23.842,23.884,23.927,23.97,24.012,24.055,24.097,24.14,24.182,24.225,24.267,24.31,24.353,24.395,24.438,24.48,24.523,24.565,24.608,24.65,24.693,24.735,24.778,24.82,24.863,24.905,24.948,24.99,25.033,25.075,25.118,25.16,25.203,25.245,25.288,25.33,25.373,25.415,25.458,25.5,25.543,25.585,25.627,25.67,25.712,25.755,25.797,25.84,25.882,25.924,25.967,26.009,26.052,26.094,26.136,26.179,26.221,26.263,26.306,26.348,26.39,26.433,26.475,26.517,26.56,26.602,26.644,26.687,26.729,26.771,26.814,26.856,26.898,26.94,26.983,27.025,27.067,27.109,27.152,27.194,27.236,27.278,27.32,27.363,27.405,27.447,27.489,27.531,27.574,27.616,27.658,27.7,27.742,27.784,27.826,27.869,27.911,27.953,27.995,28.037,28.079,28.121,28.163,28.205,28.247,28.289,28.332,28.374,28.416,28.458,28.5,28.542,28.584,28.626,28.668,28.71,28.752,28.794,28.835,28.877,28.919,28.961,29.003,29.045,29.087,29.129,29.171,29.213,29.255,29.297,29.338,29.38,29.422,29.464,29.506,29.548,29.589,29.631,29.673,29.715,29.757,29.798,29.84,29.882,29.924,29.965,30.007,30.049,30.09,30.132,30.174,30.216,30.257,30.299,30.341,30.382,30.424,30.466,30.507,30.549,30.59,30.632,30.674,30.715,30.757,30.798,30.84,30.881,30.923,30.964,31.006,31.047,31.089,31.13,31.172,31.213,31.255,31.296,31.338,31.379,31.421,31.462,31.504,31.545,31.586,31.628,31.669,31.71,31.752,31.793,31.834,31.876,31.917,31.958,32,32.041,32.082,32.124,32.165,32.206,32.247,32.289,32.33,32.371,32.412,32.453,32.495,32.536,32.577,32.618,32.659,32.7,32.742,32.783,32.824,32.865,32.906,32.947,32.988,33.029,33.07,33.111,33.152,33.193,33.234,33.275,33.316,33.357,33.398,33.439,33.48,33.521,33.562,33.603,33.644,33.685,33.726,33.767,33.808,33.848,33.889,33.93,33.971,34.012,34.053,34.093,34.134,34.175,34.216,34.257,34.297,34.338,34.379,34.42,34.46,34.501,34.542,34.582,34.623,34.664,34.704,34.745,34.786,34.826,34.867,34.908,34.948,34.989,35.029,35.07,35.11,35.151,35.192,35.232,35.273,35.313,35.354,35.394,35.435,35.475,35.516,35.556,35.596,35.637,35.677,35.718,35.758,35.798,35.839,35.879,35.92,35.96,36,36.041,36.081,36.121,36.162,36.202,36.242,36.282,36.323,36.363,36.403,36.443,36.484,36.524,36.564,36.604,36.644,36.685,36.725,36.765,36.805,36.845,36.885,36.925,36.965,37.006,37.046,37.086,37.126,37.166,37.206,37.246,37.286,37.326,37.366,37.406,37.446,37.486,37.526,37.566,37.606,37.646,37.686,37.725,37.765,37.805,37.845,37.885,37.925,37.965,38.005,38.044,38.084,38.124,38.164,38.204,38.243,38.283,38.323,38.363,38.402,38.442,38.482,38.522,38.561,38.601,38.641,38.68,38.72,38.76,38.799,38.839,38.878,38.918,38.958,38.997,39.037,39.076,39.116,39.155,39.195,39.235,39.274,39.314,39.353,39.393,39.432,39.471,39.511,39.55,39.59,39.629,39.669,39.708,39.747,39.787,39.826,39.866,39.905,39.944,39.984,40.023,40.062,40.101,40.141,40.18,40.219,40.259,40.298,40.337,40.376,40.415,40.455,40.494,40.533,40.572,40.611,40.651,40.69,40.729,40.768,40.807,40.846,40.885,40.924,40.963,41.002,41.042,41.081,41.12,41.159,41.198,41.237,41.276,41.315,41.354,41.393,41.431,41.47,41.509,41.548,41.587,41.626,41.665,41.704,41.743,41.781,41.82,41.859,41.898,41.937,41.976,42.014,42.053,42.092,42.131,42.169,42.208,42.247,42.286,42.324,42.363,42.402,42.44,42.479,42.518,42.556,42.595,42.633,42.672,42.711,42.749,42.788,42.826,42.865,42.903,42.942,42.98,43.019,43.057,43.096,43.134,43.173,43.211,43.25,43.288,43.327,43.365,43.403,43.442,43.48,43.518,43.557,43.595,43.633,43.672,43.71,43.748,43.787,43.825,43.863,43.901,43.94,43.978,44.016,44.054,44.092,44.13,44.169,44.207,44.245,44.283,44.321,44.359,44.397,44.435,44.473,44.512,44.55,44.588,44.626,44.664,44.702,44.74,44.778,44.816,44.853,44.891,44.929,44.967,45.005,45.043,45.081,45.119,45.157,45.194,45.232,45.27,45.308,45.346,45.383,45.421,45.459,45.497,45.534,45.572,45.61,45.647,45.685,45.723,45.76,45.798,45.836,45.873,45.911,45.948,45.986,46.024,46.061,46.099,46.136,46.174,46.211,46.249,46.286,46.324,46.361,46.398,46.436,46.473,46.511,46.548,46.585,46.623,46.66,46.697,46.735,46.772,46.809,46.847,46.884,46.921,46.958,46.995,47.033,47.07,47.107,47.144,47.181,47.218,47.256,47.293,47.33,47.367,47.404,47.441,47.478,47.515,47.552,47.589,47.626,47.663,47.7,47.737,47.774,47.811,47.848,47.884,47.921,47.958,47.995,48.032,48.069,48.105,48.142,48.179,48.216,48.252,48.289,48.326,48.363,48.399,48.436,48.473,48.509,48.546,48.582,48.619,48.656,48.692,48.729,48.765,48.802,48.838,48.875,48.911,48.948,48.984,49.021,49.057,49.093,49.13,49.166,49.202,49.239,49.275,49.311,49.348,49.384,49.42,49.456,49.493,49.529,49.565,49.601,49.637,49.674,49.71,49.746,49.782,49.818,49.854,49.89,49.926,49.962,49.998,50.034,50.07,50.106,50.142,50.178,50.214,50.25,50.286,50.322,50.358,50.393,50.429,50.465,50.501,50.537,50.572,50.608,50.644,50.68,50.715,50.751,50.787,50.822,50.858,50.894,50.929,50.965,51,51.036,51.071,51.107,51.142,51.178,51.213,51.249,51.284,51.32,51.355,51.391,51.426,51.461,51.497,51.532,51.567,51.603,51.638,51.673,51.708,51.744,51.779,51.814,51.849,51.885,51.92,51.955,51.99,52.025,52.06,52.095,52.13,52.165,52.2,52.235,52.27,52.305,52.34,52.375,52.41,52.445,52.48,52.515,52.55,52.585,52.62,52.654,52.689,52.724,52.759,52.794,52.828,52.863,52.898,52.932,52.967,53.002,53.037,53.071,53.106,53.14,53.175,53.21,53.244,53.279,53.313,53.348,53.382,53.417,53.451,53.486,53.52,53.555,53.589,53.623,53.658,53.692,53.727,53.761,53.795,53.83,53.864,53.898,53.932,53.967,54.001,54.035,54.069,54.104,54.138,54.172,54.206,54.24,54.274,54.308,54.343,54.377,54.411,54.445,54.479,54.513,54.547,54.581,54.615,54.649,54.683,54.717,54.751,54.785,54.819,54.852,54.886];class AccelerometerDevice extends PhidgetUSBDevice{constructor(e,t,r){if(super(e,t,r),172!==this.devDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);this.data=this.initData()}get numAccelAxes(){return this.devDef.cn[0]}initData(){return{timestamp:[0],acceleration:[new Array(this.numAccelAxes).fill(1e300)],accelerationChangeTrigger:new Array(this.numAccelAxes).fill(1e300),accelerationMax:0,accelerationMin:0,interruptRate:0,accelDataInterval:[0,0,0],accelDeadLine:[0,0,0],dataBuffer:[],callcnt:0,accelerationLastTrigger:new Array(this.numAccelAxes).fill(1e300)}}async initAfterOpen(){this.data=this.initData(),this.data.accelerationMax=1e300,this.data.accelerationMin=1e300,this.data.interruptRate=4294967295}async bridgeInput(e,t){const r=new DataView(new ArrayBuffer(25));if(172===this.devDef.uid){if(352===e.chDef.uid)switch(t.vpkt){case 54:return r.setUint16(0,this.at(t,1)),void await this.transferPacket(0,252,e.uniqueIndex,new Uint8Array(r.buffer,0,2));case 46:return r.setFloat32(0,t.getNumber(0),!0),void await this.transferPacket(0,195,e.uniqueIndex,new Uint8Array(r.buffer,0,4));case 34:case 111:return void await this.transferPacket(0,250,e.uniqueIndex);case 143:return void await this.transferPacket(0,251,e.uniqueIndex);default:throw new PhidgetError(ErrorCode.UNEXPECTED)}throw new PhidgetError(ErrorCode.UNEXPECTED)}throw new PhidgetError(ErrorCode.UNEXPECTED)}dataInput(e){const t=new Array(this.numAccelAxes).fill(0);let r,i,a;if(172!==this.devDef.uid)throw new PhidgetError(ErrorCode.UNEXPECTED);a=0,i=e.getUint32(0),a+=4;for(let r=0;r<this.numAccelAxes;r++)t[r]=e.getFloat32(a+4*r,!0),isNaN(t[r])||(t[r]=RoundDouble(t[r],6));if(a+=12,null!==(r=this.getChannel(0))){if(352!==r.chDef.uid)throw new PhidgetError(ErrorCode.UNEXPECTED);{if(e.byteLength>a&&1&e.getUint8(a)){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"One or more accelerometer readings is out of range."}),r.sendErrorEvent(e)}const s=new BridgePacket;s.set({name:"0",type:"G",value:t}),s.set({name:"1",type:"g",value:i}),s.sendToChannel(r,1)}}}}const UNKNOWN_USB_ID=175;async function CreateUSBDevice(e,t){try{await t.open();const r=await GetPhidgetUSBData(t),i=Object.assign({type:"USB"},r);let a;try{a=findPhidgetUniqueDevice(i)}catch(e){logwarn("A USB Phidget (PID: "+i.productID+" Version: "+i.version+") was found which is not supported by the library. A library upgrade is required to work with this Phidget"),i.productID=175,a=findPhidgetUniqueDevice(i)}const s=Object.assign(Object.assign({},r),{type:"OTHER",id:a.uid+"_"+r.serialNumber+"_v"+r.version,devDef:a});let n;try{switch(a.c){case DeviceClass.ACCELEROMETER:n=new AccelerometerDevice(e,s,t);break;case DeviceClass.BRIDGE:n=new BridgeDevice(e,s,t);break;case DeviceClass.DATA_ADAPTER:n=new DataAdapterDevice(e,s,t);break;case DeviceClass.ENCODER:n=new EncoderDevice(e,s,t);break;case DeviceClass.GENERIC:n=new GenericDevice(e,s,t);break;case DeviceClass.HUB:n=new HubDevice(e,s,t);break;case DeviceClass.INTERFACE_KIT:n=new InterfaceKitDevice(e,s,t);break;case DeviceClass.RFID:n=new RFIDDevice(e,s,t);break;case DeviceClass.SPATIAL:n=new SpatialDevice(e,s,t);break;case DeviceClass.TEMPERATURE_SENSOR:n=new TemperatureSensorDevice(e,s,t);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}catch(e){if(e instanceof PhidgetError&&e.errorCode===ErrorCode.UNSUPPORTED)throw new PhidgetError(ErrorCode.UNSUPPORTED,"This USB Phidget is not yet supported in JavaScript: "+a.s+" ("+a.t+")");throw e}return n.initAfterCreate&&await n.initAfterCreate(),await t.close(),n}finally{try{await t.close()}catch(e){}}}let USBConnectionCnt=0;class USBConnectionBase extends PhidgetConnection{constructor(e,t,r){if(USBConnectionCnt>=1)throw new PhidgetError(ErrorCode.DUPLICATE,"Only one USB Connection may be active at a time.");USBConnectionCnt++;const i={};null!=r&&(r.onError&&(i.onError=r.onError),r.name?i.name=r.name:i.name="webusb"),super(i),this._=0,this.nt=t,this.Et=e,this.yt=0}delete(){super.delete(),USBConnectionCnt--}close(){!0===this.connected&&(this.Pt&&this.Et.removeEventListener("disconnect",this.Pt),delete this.Pt,null!=this.ft&&(clearTimeout(this.ft),delete this.ft),this.$(),this.connected=!1)}async connect(){if(!0===this.connected)return;this.connected=!0,this.Pt=this.Ct.bind(this),this.Et.addEventListener("disconnect",this.Pt),this.connected;const e=()=>{this.connected&&(logverbose("Next scan in: "+(250+this.yt)),this.ft=setTimeout(t,250+this.yt))},t=()=>{delete this.ft,this.vt().then((()=>{e()})).catch((t=>{logerr("Error during USB scan",t),this.yt=100*Math.random(),e()}))};t()}B(e){return super.B(e)}async vt(){if(!this.connected)throw new PhidgetError(ErrorCode.NOT_ATTACHED,"Not connected");const e=await this.bt();this.yt=0,await promise.all(e.map((async e=>{const t=this.kt(e);let r=this.Tt(e);if(null==r)try{r=await CreateUSBDevice(this,e),this.St(r),this.ct(r)}catch(e){return(t?logwarn:logverbose)("Error scanning device",e),void(this.yt=100*Math.random())}if(r instanceof HubDevice)try{await r.lock();let e=!1;try{await r.open(!1),e=!0,await r.scanVINTDevices()}finally{e&&await r.close(!1,!1)}r.scanError=0}catch(e){return(0==r.scanError?logwarn:logverbose)("Error scanning device",e),r.scanError++,void(this.yt=100*Math.random())}finally{r.unlock()}})))}Ct(e){var t,r;logdebug("USB Device disconnect: "+e.device.productName),this.Dt(e.device);const i=this.Tt(e.device);if(null==i)return void logdebug("Device is not known. Moving on.");const a=Array.from(values(t=this.U).call(t)).find((e=>e===i&&null==e.parent));if(null==a)return void logdebug("couldn't find detaching device in Devices list!");const s=Array.from(values(r=this.U).call(r)).filter((e=>e.parent===a));for(const e of s)this.m(e);this.m(a),this.It(i)}ct(e){var t;this.C(e);let r=0;for(const i of e.devDef.ch)for(let a=0;a<(null!==(t=i.n)&&void 0!==t?t:1);a++,r++){const t={id:i.c+"_"+e.serialNumber+"_"+e.hubPort+"_"+r+"_"+(e.class===DeviceClass.VINT?"1":"0")+"_"+(e.isHubPort?"1":"0"),chDef:i,uniqueIndex:r,index:a+i.i},s=new LocalChannel(this,e,t);e.channels[r]=s,this.k(s)}}m(e){super.m(e),e.lock().then((()=>e.close(!0))).then((()=>{e.unlock()})).catch((t=>{logwarn("Error closing during detach",t),e.unlock()}))}ht(e){var t;logwarn("Detaching device because of USB error.");const r=Array.from(values(t=this.U).call(t)).filter((t=>t.parent===e));for(const e of r)this.m(e);this.m(e),this.It(e)}}class USBConnection extends USBConnectionBase{constructor(e){if(!("navigator"in window)||null==navigator||null==navigator.usb)throw new PhidgetError(ErrorCode.UNSUPPORTED,"USB Support not detected. Make sure your browser supports WebUSB.");super(navigator.usb,0,e),this.Rt=new Set,this.At=new Map}close(){super.close(),this.Rt=new Set,this.At=new Map}async requestWebUSBDeviceAccess(){if(!this.connected)throw new PhidgetError(ErrorCode.NOT_ATTACHED,"Not connected");const e={vendorId:1730,classCode:255};try{await this.Et.requestDevice({filters:[e]}),await this.vt()}catch(e){}}kt(e){return!this.Rt.has(e)&&(this.Rt.add(e),!0)}Dt(e){this.Rt.delete(e)}Tt(e){return this.At.get(e)}St(e){this.At.set(e.usbDevice,e)}It(e){this.At.delete(e.usbDevice)}ot(e,t,r){}bt(){return this.Et.getDevices()}}class VoltageRatioInputBase extends PhidgetChannel{constructor(e){super(e),this.onVoltageRatioChange=null,this.onSensorChange=null,this.we=ChannelClass.VOLTAGE_RATIO_INPUT,this.name="VoltageRatioInput",this.data=this.Ut()}ye(e){switch(e.vpkt){case 56:this.data.bridgeEnabled=e.entries[0].v,this.he("BridgeEnabled",e);break;case 45:this.data.bridgeGain=e.entries[0].v,this.he("BridgeGain",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 79:this.data.sensorType=e.entries[0].v,this.he("SensorType",e);break;case 122:this.data.sensorValueChangeTrigger=e.entries[0].v,this.he("SensorValueChangeTrigger",e);break;case 46:this.data.voltageRatioChangeTrigger=e.entries[0].v,this.he("VoltageRatioChangeTrigger",e);break;case 115:{this.data.sensorValue=e.entries[0].v;const t={unit:e.entries["UnitInfo.unit"].v,name:e.entries["UnitInfo.name"].v,symbol:e.entries["UnitInfo.symbol"].v};if(this.data.sensorUnit=t,this.ce&&this.onSensorChange)try{this.onSensorChange(this.data.sensorValue,this.data.sensorUnit)}catch(e){logEventException(e)}break}default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{bridgeEnabled:2,bridgeGain:2147483647,dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,sensorType:2147483647,sensorUnit:null,sensorValue:1e300,voltageRatio:1e300,minVoltageRatio:1e300,maxVoltageRatio:1e300,voltageRatioChangeTrigger:1e300,minVoltageRatioChangeTrigger:1e300,maxVoltageRatioChangeTrigger:1e300,sensorValueChangeTrigger:1e300}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 46:this.data.dataInterval=256,this.data.minDataInterval=1,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.sensorType=VoltageRatioSensorType.VOLTAGE_RATIO,this.data.voltageRatio=this.Z.parent.data.voltageRatio[this.Z.index],this.data.minVoltageRatio=0,this.data.maxVoltageRatio=1,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=1,this.data.sensorValueChangeTrigger=0;break;case 99:this.data.bridgeEnabled=1,this.data.bridgeGain=BridgeGain.GAIN_128X,this.data.dataInterval=250,this.data.minDataInterval=1,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1200,this.data.voltageRatio=this.Z.parent.data.voltageRatio[this.Z.index],this.data.minVoltageRatio=-.85,this.data.maxVoltageRatio=.85,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=.5;break;case 199:case 200:this.data.dataInterval=250,this.data.minDataInterval=1,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=1e3,this.data.sensorType=VoltageRatioSensorType.VOLTAGE_RATIO,this.data.minVoltageRatio=0,this.data.maxVoltageRatio=1,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=1,this.data.sensorValueChangeTrigger=0;break;case 221:case 223:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.sensorType=VoltageRatioSensorType.VOLTAGE_RATIO,this.data.minVoltageRatio=0,this.data.maxVoltageRatio=1,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=1,this.data.sensorValueChangeTrigger=0;break;case 246:this.data.bridgeEnabled=1,this.data.bridgeGain=BridgeGain.GAIN_128X,this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.minVoltageRatio=-.5,this.data.maxVoltageRatio=.5,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=.5;break;case 251:case 256:case 262:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.sensorType=VoltageRatioSensorType.VOLTAGE_RATIO,this.data.minVoltageRatio=0,this.data.maxVoltageRatio=1,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=1,this.data.sensorValueChangeTrigger=0;break;case 340:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=50,this.data.minVoltageRatio=-1,this.data.maxVoltageRatio=1,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=2;break;case 350:this.data.dataInterval=100,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minVoltageRatio=0,this.data.maxVoltageRatio=1,this.data.voltageRatioChangeTrigger=0,this.data.minVoltageRatioChangeTrigger=0,this.data.maxVoltageRatioChangeTrigger=1;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 46:case 199:case 200:case 221:case 223:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.sensorType}),await e.send(this.Z,79),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageRatioChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.sensorValueChangeTrigger}),await e.send(this.Z,122);break;case 99:case 246:e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.bridgeEnabled}),await e.send(this.Z,56),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.bridgeGain}),await e.send(this.Z,45),e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageRatioChangeTrigger}),await e.send(this.Z,46);break;case 251:case 256:case 262:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.sensorType}),await e.send(this.Z,79),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.sensorValueChangeTrigger}),await e.send(this.Z,122);break;case 340:case 350:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageRatioChangeTrigger}),await e.send(this.Z,46);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get bridgeEnabled(){return this.getBridgeEnabled()}get bridgeGain(){return this.getBridgeGain()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get sensorType(){return this.getSensorType()}get sensorUnit(){return this.getSensorUnit()}get sensorValue(){return this.getSensorValue()}get sensorValueChangeTrigger(){return this.getSensorValueChangeTrigger()}get voltageRatio(){return this.getVoltageRatio()}get minVoltageRatio(){return this.getMinVoltageRatio()}get maxVoltageRatio(){return this.getMaxVoltageRatio()}get voltageRatioChangeTrigger(){return this.getVoltageRatioChangeTrigger()}get minVoltageRatioChangeTrigger(){return this.getMinVoltageRatioChangeTrigger()}get maxVoltageRatioChangeTrigger(){return this.getMaxVoltageRatioChangeTrigger()}getBridgeEnabled(){if(this.le(),2===this.data.bridgeEnabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.bridgeEnabled}async setBridgeEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,56)}getBridgeGain(){if(this.le(),2147483647===this.data.bridgeGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.bridgeGain}async setBridgeGain(e){this.le();const t=new BridgePacket;if(!supportedBridgeGain(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified BridgeGain is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,45)}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getSensorType(){if(this.le(),2147483647===this.data.sensorType)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorType}async setSensorType(e){this.le();const t=new BridgePacket;if(!supportedVoltageRatioSensorType(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified VoltageRatioSensorType is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,79)}getSensorUnit(){if(this.le(),null===this.data.sensorUnit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorUnit}getSensorValue(){if(this.le(),1e300===this.data.sensorValue)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorValue}getSensorValueChangeTrigger(){if(this.le(),1e300===this.data.sensorValueChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorValueChangeTrigger}async setSensorValueChangeTrigger(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,122)}getVoltageRatio(){if(this.le(),1e300===this.data.voltageRatio||Number.isNaN(this.data.voltageRatio))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.voltageRatio>this.data.maxVoltageRatio)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.voltageRatio<this.data.minVoltageRatio)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.voltageRatio}getMinVoltageRatio(){if(this.le(),1e300===this.data.minVoltageRatio)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVoltageRatio}getMaxVoltageRatio(){if(this.le(),1e300===this.data.maxVoltageRatio)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVoltageRatio}getVoltageRatioChangeTrigger(){if(this.le(),1e300===this.data.voltageRatioChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.voltageRatioChangeTrigger}async setVoltageRatioChangeTrigger(e){if(this.le(),e<this.data.minVoltageRatioChangeTrigger||e>this.data.maxVoltageRatioChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minVoltageRatioChangeTrigger+" - "+this.data.maxVoltageRatioChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinVoltageRatioChangeTrigger(){if(this.le(),1e300===this.data.minVoltageRatioChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVoltageRatioChangeTrigger}getMaxVoltageRatioChangeTrigger(){if(this.le(),1e300===this.data.maxVoltageRatioChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVoltageRatioChangeTrigger}}const Units=[{unit:Unit.NONE,name:"none",symbol:""},{unit:Unit.BOOLEAN,name:"boolean",symbol:""},{unit:Unit.PERCENT,name:"percent",symbol:"%"},{unit:Unit.DECIBEL,name:"decibel",symbol:"dB"},{unit:Unit.MILLIMETER,name:"millimeter",symbol:"mm"},{unit:Unit.CENTIMETER,name:"centimeter",symbol:"cm"},{unit:Unit.METER,name:"meter",symbol:"m"},{unit:Unit.GRAM,name:"gram",symbol:"g"},{unit:Unit.KILOGRAM,name:"kilogram",symbol:"kg"},{unit:Unit.MILLIAMPERE,name:"milliampere",symbol:"mA"},{unit:Unit.AMPERE,name:"ampere",symbol:"A"},{unit:Unit.KILOPASCAL,name:"kilopascal",symbol:"kPa"},{unit:Unit.VOLT,name:"volt",symbol:"V"},{unit:Unit.DEGREE_CELCIUS,name:"degree Celsius",symbol:"Â°C"},{unit:Unit.LUX,name:"lux",symbol:"lx"},{unit:Unit.GAUSS,name:"gauss",symbol:"G"},{unit:Unit.PH,name:"pH",symbol:""},{unit:Unit.WATT,name:"watt",symbol:"W"}];class VoltageRatioInput extends VoltageRatioInputBase{ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval"),this.he("DataRate");break;case 27:this.data.minDataInterval=e.getNumber(0),this.he("MinDataInterval");break;case 79:super.ye(e),this._t();break;case 102:this.data.voltageRatio=e.getNumber("0");if(this._t(!0)&&this.Z.conn.u)throw new PhidgetError(ErrorCode.UNSUPPORTED);break;case 45:if(super.ye(e),99===this.Z.chDef.uid){switch(this.data.bridgeGain){case BridgeGain.GAIN_1X:this.data.maxVoltageRatio=.85,this.data.minVoltageRatio=-.85;break;case BridgeGain.GAIN_8X:this.data.maxVoltageRatio=1/8,this.data.minVoltageRatio=-1/8;break;case BridgeGain.GAIN_16X:this.data.maxVoltageRatio=1/16,this.data.minVoltageRatio=-1/16;break;case BridgeGain.GAIN_32X:this.data.maxVoltageRatio=1/32,this.data.minVoltageRatio=-1/32;break;case BridgeGain.GAIN_64X:this.data.maxVoltageRatio=1/64,this.data.minVoltageRatio=-1/64;break;case BridgeGain.GAIN_128X:this.data.maxVoltageRatio=1/128,this.data.minVoltageRatio=-1/128}this.he("MinVoltageRatio",e),this.he("MaxVoltageRatio",e)}break;default:super.ye(e)}}Ee(e){if(e===ErrorEventCode.SATURATION)this.data.voltageRatio=1e300,this.data.sensorValue=1e300,this.Vt=!0}dt(){super.dt(),2147483647===this.data.sensorType&&(this.data.sensorType=VoltageRatioSensorType.VOLTAGE_RATIO),this.data.sensorUnit=this.Ot(this.data.sensorType),this.data.sensorValue=this.Bt(this.data.voltageRatio,this.data.sensorType)}fe(){return!(1e300==this.data.voltageRatio&&!this.Vt)&&super.fe()}lt(){if(this.data.sensorType!=VoltageRatioSensorType.VOLTAGE_RATIO){if(1e300!=this.data.sensorValue&&null!=this.data.sensorUnit&&this.onSensorChange)try{this.onSensorChange(this.data.sensorValue,this.data.sensorUnit)}catch(e){logEventException(e)}}else if(1e300!=this.data.voltageRatio&&this.onVoltageRatioChange)try{this.onVoltageRatioChange(this.data.voltageRatio)}catch(e){logEventException(e)}super.lt()}_t(){let e,t,r=arguments.length>0&&void 0!==arguments[0]&&arguments[0],i=!1;const a=new BridgePacket;if(this.Z.supportedBridgePacket(115)&&this.Z.conn.h&&this.data.sensorType!==VoltageRatioSensorType.VOLTAGE_RATIO)e=this.Bt(this.data.voltageRatio,this.data.sensorType),this.$t(e,this.data.sensorType)?(1e300===this.data.sensorValue||Math.abs(e-this.data.sensorValue)>=this.data.sensorValueChangeTrigger)&&(this.data.sensorValue=e,this.ce&&(t=this.Ot(this.data.sensorType),a.set({name:"0",type:"g",value:e}),a.set({name:"UnitInfo.unit",type:"g",value:t.unit}),a.set({name:"UnitInfo.name",type:"s",value:t.name}),a.set({name:"UnitInfo.symbol",type:"s",value:t.symbol}),a.sendToChannel(this.Z,115))):(this.data.sensorValue=1e300,this.ce&&(a.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),a.set({name:"1",type:"s",value:"Sensor value is ouside the valid range for this sensor."}),this.Z.sendErrorEvent(a))),i=!0;else if(r&&(this.data.sensorUnit=this.Ot(this.data.sensorType),this.data.sensorValue=this.Bt(this.data.voltageRatio,this.data.sensorType),this.ce&&this.onVoltageRatioChange))try{this.onVoltageRatioChange(this.data.voltageRatio)}catch(e){logEventException(e)}return i}Bt(e,t){if(1e300===e)return 1e300;switch(t){case VoltageRatioSensorType.PN_1101_SHARP2D120X:case VoltageRatioSensorType.PN_3520:return RoundDouble(2.076/(e-.011),2);case VoltageRatioSensorType.PN_1101_SHARP2Y0A21:case VoltageRatioSensorType.PN_3521:return RoundDouble(4.8/(e-.02),2);case VoltageRatioSensorType.PN_1101_SHARP2Y0A02:case VoltageRatioSensorType.PN_3522:return RoundDouble(9.462/(e-.01692),2);case VoltageRatioSensorType.PN_1102:return e<.4?1:0;case VoltageRatioSensorType.PN_1103:return e<.1?1:0;case VoltageRatioSensorType.PN_1104:return RoundDouble(2*e-1,5);case VoltageRatioSensorType.PN_1105:case VoltageRatioSensorType.PN_1106:return e;case VoltageRatioSensorType.PN_1107:return RoundDouble(190.6*e-40.2,3);case VoltageRatioSensorType.PN_1108:return RoundDouble(1e3*(.5-e),2);case VoltageRatioSensorType.PN_1109:return e;case VoltageRatioSensorType.PN_1110:return e<.5?1:0;case VoltageRatioSensorType.PN_1111:return RoundDouble(2*e-1,5);case VoltageRatioSensorType.PN_1112:return e;case VoltageRatioSensorType.PN_1113:return RoundDouble(2*e-1,5);case VoltageRatioSensorType.PN_1115:return RoundDouble(e/.004+10,3);case VoltageRatioSensorType.PN_1116:return e;case VoltageRatioSensorType.PN_1118_AC:return RoundDouble(69.38*e,3);case VoltageRatioSensorType.PN_1118_DC:return RoundDouble(e/.008-62.5,3);case VoltageRatioSensorType.PN_1119_AC:return RoundDouble(27.75*e,4);case VoltageRatioSensorType.PN_1119_DC:return RoundDouble(e/.02-25,4);case VoltageRatioSensorType.PN_1120:case VoltageRatioSensorType.PN_1121:return e;case VoltageRatioSensorType.PN_1122_AC:return RoundDouble(42.04*e,3);case VoltageRatioSensorType.PN_1122_DC:return RoundDouble(e/.0132-37.8787,3);case VoltageRatioSensorType.PN_1124:case VoltageRatioSensorType.PN_1125_TEMPERATURE:return RoundDouble(222.2*e-61.111,3);case VoltageRatioSensorType.PN_1125_HUMIDITY:return RoundDouble(190.6*e-40.2,3);case VoltageRatioSensorType.PN_1126:return RoundDouble(e/.018-27.7777,3);case VoltageRatioSensorType.PN_1128:return RoundDouble(1296*e,2);case VoltageRatioSensorType.PN_1129:return e>.5?1:0;case VoltageRatioSensorType.PN_1131:return RoundDouble(15.311*Math.exp(5.199*e),2);case VoltageRatioSensorType.PN_1134:return e;case VoltageRatioSensorType.PN_1136:return RoundDouble(e/.2-2.5,4);case VoltageRatioSensorType.PN_1137:return RoundDouble(e/.057143-8.75,4);case VoltageRatioSensorType.PN_1138:return RoundDouble(e/.018-2.222,3);case VoltageRatioSensorType.PN_1139:return RoundDouble(e/.009-4.444,3);case VoltageRatioSensorType.PN_1140:return RoundDouble(e/.002421+3.478,2);case VoltageRatioSensorType.PN_1141:return RoundDouble(e/.0092+10.652,2);case VoltageRatioSensorType.PN_1146:return RoundDouble(1.3927*Math.exp(1.967*e),2);case VoltageRatioSensorType.PN_3120:return RoundDouble(e/.15432-.647989,4);case VoltageRatioSensorType.PN_3121:return RoundDouble(e/.0617295-1.619971,4);case VoltageRatioSensorType.PN_3122:return RoundDouble(e/.0308647-3.239943,3);case VoltageRatioSensorType.PN_3123:return RoundDouble(e/.0154324-6.479886,3);case VoltageRatioSensorType.PN_3130:return RoundDouble(190.6*e-40.2,3);case VoltageRatioSensorType.VOLTAGE_RATIO:default:return e}}$t(e,t){if(1e300===e)return!1;switch(t){case VoltageRatioSensorType.PN_1101_SHARP2D120X:case VoltageRatioSensorType.PN_3520:return e>=4&&e<=30;case VoltageRatioSensorType.PN_1101_SHARP2Y0A21:case VoltageRatioSensorType.PN_3521:return e>=10&&e<=80;case VoltageRatioSensorType.PN_1101_SHARP2Y0A02:case VoltageRatioSensorType.PN_3522:return e>=20&&e<=150;case VoltageRatioSensorType.PN_1102:case VoltageRatioSensorType.PN_1103:case VoltageRatioSensorType.PN_1104:case VoltageRatioSensorType.PN_1105:case VoltageRatioSensorType.PN_1106:return!0;case VoltageRatioSensorType.PN_1107:return e>=0&&e<=100;case VoltageRatioSensorType.PN_1108:return e>=-500&&e<=500;case VoltageRatioSensorType.PN_1109:case VoltageRatioSensorType.PN_1110:case VoltageRatioSensorType.PN_1111:case VoltageRatioSensorType.PN_1112:return!0;case VoltageRatioSensorType.PN_1113:return e>=-1&&e<=1;case VoltageRatioSensorType.PN_1115:return e>=20&&e<=250;case VoltageRatioSensorType.PN_1116:return!0;case VoltageRatioSensorType.PN_1118_AC:return e>=0&&e<=50;case VoltageRatioSensorType.PN_1118_DC:return e>=-50&&e<=50;case VoltageRatioSensorType.PN_1119_AC:return e>=0&&e<=20;case VoltageRatioSensorType.PN_1119_DC:return e>=-20&&e<=20;case VoltageRatioSensorType.PN_1120:case VoltageRatioSensorType.PN_1121:return!0;case VoltageRatioSensorType.PN_1122_AC:return e>=0&&e<=30;case VoltageRatioSensorType.PN_1122_DC:return e>=-30&&e<=30;case VoltageRatioSensorType.PN_1124:case VoltageRatioSensorType.PN_1125_TEMPERATURE:return e>=-50&&e<=150;case VoltageRatioSensorType.PN_1125_HUMIDITY:return e>=0&&e<=100;case VoltageRatioSensorType.PN_1126:return e>=-25&&e<=25;case VoltageRatioSensorType.PN_1128:return e>=15.24&&e<=6500;case VoltageRatioSensorType.PN_1129:return!0;case VoltageRatioSensorType.PN_1131:return e>=0&&e<=2e3;case VoltageRatioSensorType.PN_1134:return!0;case VoltageRatioSensorType.PN_1136:return e>=-2&&e<=2;case VoltageRatioSensorType.PN_1137:return e>=-7&&e<=7;case VoltageRatioSensorType.PN_1138:return e>=0&&e<=50;case VoltageRatioSensorType.PN_1139:return e>=0&&e<=100;case VoltageRatioSensorType.PN_1140:return e>=20&&e<=400;case VoltageRatioSensorType.PN_1141:return e>=15&&e<=115;case VoltageRatioSensorType.PN_1146:return e>=1.5&&e<=4;case VoltageRatioSensorType.PN_3120:return e>=0&&e<=4.5;case VoltageRatioSensorType.PN_3121:return e>=0&&e<=11.3;case VoltageRatioSensorType.PN_3122:return e>=0&&e<=22.7;case VoltageRatioSensorType.PN_3123:return e>=0&&e<=45.3;case VoltageRatioSensorType.PN_3130:return e>=0&&e<=100;case VoltageRatioSensorType.VOLTAGE_RATIO:default:return!0}}Ot(e){switch(e){case VoltageRatioSensorType.PN_1146:return Units[Unit.MILLIMETER];case VoltageRatioSensorType.PN_1101_SHARP2D120X:case VoltageRatioSensorType.PN_1101_SHARP2Y0A21:case VoltageRatioSensorType.PN_1101_SHARP2Y0A02:case VoltageRatioSensorType.PN_1128:case VoltageRatioSensorType.PN_3520:case VoltageRatioSensorType.PN_3521:case VoltageRatioSensorType.PN_3522:return Units[Unit.CENTIMETER];case VoltageRatioSensorType.PN_1102:case VoltageRatioSensorType.PN_1103:case VoltageRatioSensorType.PN_1110:case VoltageRatioSensorType.PN_1129:return Units[Unit.BOOLEAN];case VoltageRatioSensorType.PN_1107:case VoltageRatioSensorType.PN_1125_HUMIDITY:case VoltageRatioSensorType.PN_3130:return Units[Unit.PERCENT];case VoltageRatioSensorType.PN_1108:return Units[Unit.GAUSS];case VoltageRatioSensorType.PN_1115:case VoltageRatioSensorType.PN_1126:case VoltageRatioSensorType.PN_1136:case VoltageRatioSensorType.PN_1137:case VoltageRatioSensorType.PN_1138:case VoltageRatioSensorType.PN_1139:case VoltageRatioSensorType.PN_1140:case VoltageRatioSensorType.PN_1141:return Units[Unit.KILOPASCAL];case VoltageRatioSensorType.PN_1118_AC:case VoltageRatioSensorType.PN_1119_AC:case VoltageRatioSensorType.PN_1122_AC:case VoltageRatioSensorType.PN_1118_DC:case VoltageRatioSensorType.PN_1119_DC:case VoltageRatioSensorType.PN_1122_DC:return Units[Unit.AMPERE];case VoltageRatioSensorType.PN_1124:case VoltageRatioSensorType.PN_1125_TEMPERATURE:return Units[Unit.DEGREE_CELCIUS];case VoltageRatioSensorType.PN_1131:return Units[Unit.GRAM];case VoltageRatioSensorType.PN_3120:case VoltageRatioSensorType.PN_3121:case VoltageRatioSensorType.PN_3122:case VoltageRatioSensorType.PN_3123:return Units[Unit.KILOGRAM];case VoltageRatioSensorType.VOLTAGE_RATIO:case VoltageRatioSensorType.PN_1104:case VoltageRatioSensorType.PN_1111:case VoltageRatioSensorType.PN_1113:case VoltageRatioSensorType.PN_1105:case VoltageRatioSensorType.PN_1106:case VoltageRatioSensorType.PN_1109:case VoltageRatioSensorType.PN_1112:case VoltageRatioSensorType.PN_1116:case VoltageRatioSensorType.PN_1120:case VoltageRatioSensorType.PN_1121:case VoltageRatioSensorType.PN_1134:default:return Units[Unit.NONE]}}}class DigitalInputBase extends PhidgetChannel{constructor(e){super(e),this.onStateChange=null,this.we=ChannelClass.DIGITAL_INPUT,this.name="DigitalInput",this.data=this.Ut()}ye(e){switch(e.vpkt){case 64:this.data.inputMode=e.entries[0].v,this.he("InputMode",e);break;case 74:this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);break;case 90:if(this.data.state=e.entries[0].v,this.ce&&this.onStateChange)try{this.onStateChange(!!this.data.state)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{state:2,powerSupply:2147483647,inputMode:2147483647}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 47:case 103:case 105:this.data.state=this.Z.parent.data.inputState[this.Z.index];break;case 193:case 232:case 236:case 237:case 336:case 341:break;case 240:case 244:this.data.powerSupply=PowerSupply.VOLTS_12,this.data.inputMode=InputMode.NPN;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 47:case 103:case 105:case 193:case 232:case 236:case 237:case 336:case 341:break;case 240:case 244:e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.powerSupply}),await e.send(this.Z,74),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.inputMode}),await e.send(this.Z,64);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(2==this.data.state&&!this.Mt)}lt(){if(2!=this.data.state&&this.onStateChange)try{this.onStateChange(!!this.data.state)}catch(e){logEventException(e)}}get inputMode(){return this.getInputMode()}get powerSupply(){return this.getPowerSupply()}get state(){return this.getState()}getInputMode(){if(this.le(),2147483647===this.data.inputMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.inputMode}async setInputMode(e){this.le();const t=new BridgePacket;if(!supportedInputMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified InputMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,64)}getPowerSupply(){if(this.le(),2147483647===this.data.powerSupply)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.powerSupply}async setPowerSupply(e){this.le();const t=new BridgePacket;if(!supportedPowerSupply(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified PowerSupply is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,74)}getState(){if(this.le(),2===this.data.state)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.state}}class DigitalInput extends DigitalInputBase{ye(e){switch(e.vpkt){case 181:this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);break;case 182:this.data.inputMode=e.entries[0].v,this.he("InputMode",e);break;default:super.ye(e)}}}class DigitalOutputBase extends PhidgetChannel{constructor(e){super(e),this.we=ChannelClass.DIGITAL_OUTPUT,this.name="DigitalOutput",this.data=this.Ut()}ye(e){switch(e.vpkt){case 55:this.data.dutyCycle=e.entries[0].v,this.he("DutyCycle",e);break;case 146:case 147:break;case 156:this.data.frequency=e.entries[0].v,this.he("Frequency",e);break;case 67:this.data.LEDCurrentLimit=e.entries[0].v,this.he("LEDCurrentLimit",e);break;case 68:this.data.LEDForwardVoltage=e.entries[0].v,this.he("LEDForwardVoltage",e);break;case 82:this.data.state=e.entries[0].v,this.he("State",e);break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dutyCycle:1e300,maxDutyCycle:1e300,minDutyCycle:1e300,LEDCurrentLimit:1e300,minLEDCurrentLimit:1e300,maxLEDCurrentLimit:1e300,LEDForwardVoltage:2147483647,state:2,maxFailsafeTime:4294967295,minFailsafeTime:4294967295,frequency:1e300,maxFrequency:1e300,minFrequency:1e300}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 34:case 35:case 39:case 40:case 234:case 391:case 393:case 396:case 398:this.data.dutyCycle=0,this.data.maxDutyCycle=1,this.data.minDutyCycle=0,this.data.state=0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 48:case 194:case 233:case 390:case 392:case 395:this.data.dutyCycle=0,this.data.maxDutyCycle=1,this.data.minDutyCycle=0,this.data.state=0;break;case 195:this.data.dutyCycle=0,this.data.maxDutyCycle=1,this.data.minDutyCycle=0,this.data.state=0,this.data.maxFailsafeTime=6e4,this.data.minFailsafeTime=100;break;case 235:case 394:this.data.dutyCycle=0,this.data.maxDutyCycle=1,this.data.minDutyCycle=0,this.data.state=0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500,this.data.frequency=15625,this.data.maxFrequency=2e4,this.data.minFrequency=100;break;case 348:this.data.dutyCycle=0,this.data.maxDutyCycle=1,this.data.minDutyCycle=0,this.data.LEDCurrentLimit=.02,this.data.minLEDCurrentLimit=0,this.data.maxLEDCurrentLimit=.04,this.data.LEDForwardVoltage=LEDForwardVoltage.VOLTS_3_2,this.data.state=0;break;case 397:this.data.dutyCycle=0,this.data.maxDutyCycle=1,this.data.minDutyCycle=0,this.data.state=0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500,this.data.frequency=2e4,this.data.maxFrequency=2e4,this.data.minFrequency=100;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){switch(this.Z.chDef.uid){case 34:case 35:case 39:case 40:case 48:case 194:case 195:case 233:case 234:case 235:case 348:case 390:case 391:case 392:case 393:case 394:case 395:case 396:case 397:case 398:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get dutyCycle(){return this.getDutyCycle()}get minDutyCycle(){return this.getMinDutyCycle()}get maxDutyCycle(){return this.getMaxDutyCycle()}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get frequency(){return this.getFrequency()}get minFrequency(){return this.getMinFrequency()}get maxFrequency(){return this.getMaxFrequency()}get LEDCurrentLimit(){return this.getLEDCurrentLimit()}get minLEDCurrentLimit(){return this.getMinLEDCurrentLimit()}get maxLEDCurrentLimit(){return this.getMaxLEDCurrentLimit()}get LEDForwardVoltage(){return this.getLEDForwardVoltage()}get state(){return this.getState()}getDutyCycle(){if(this.le(),1e300===this.data.dutyCycle)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dutyCycle}async setDutyCycle(e){if(this.le(),e<this.data.minDutyCycle||e>this.data.maxDutyCycle)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDutyCycle+" - "+this.data.maxDutyCycle+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,55)}getMinDutyCycle(){if(this.le(),1e300===this.data.minDutyCycle)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDutyCycle}getMaxDutyCycle(){if(this.le(),1e300===this.data.maxDutyCycle)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDutyCycle}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}getFrequency(){if(this.le(),1e300===this.data.frequency)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.frequency}async setFrequency(e){if(this.le(),e<this.data.minFrequency||e>this.data.maxFrequency)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minFrequency+" - "+this.data.maxFrequency+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,156)}getMinFrequency(){if(this.le(),1e300===this.data.minFrequency)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFrequency}getMaxFrequency(){if(this.le(),1e300===this.data.maxFrequency)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFrequency}getLEDCurrentLimit(){if(this.le(),1e300===this.data.LEDCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.LEDCurrentLimit}async setLEDCurrentLimit(e){if(this.le(),e<this.data.minLEDCurrentLimit||e>this.data.maxLEDCurrentLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minLEDCurrentLimit+" - "+this.data.maxLEDCurrentLimit+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,67)}getMinLEDCurrentLimit(){if(this.le(),1e300===this.data.minLEDCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minLEDCurrentLimit}getMaxLEDCurrentLimit(){if(this.le(),1e300===this.data.maxLEDCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxLEDCurrentLimit}getLEDForwardVoltage(){if(this.le(),2147483647===this.data.LEDForwardVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.LEDForwardVoltage}async setLEDForwardVoltage(e){this.le();const t=new BridgePacket;if(!supportedLEDForwardVoltage(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified LEDForwardVoltage is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,68)}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}getState(){if(this.le(),2===this.data.state)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.state}async setState(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,82)}}class DigitalOutput extends DigitalOutputBase{ye(e){switch(e.vpkt){case 55:this.data.state=e.getNumber(0)?1:0,super.ye(e);break;case 82:this.data.dutyCycle=e.getBoolean(0)?1:0,super.ye(e);break;default:super.ye(e)}}Ee(e){switch(e){case ErrorEventCode.FAILSAFE_CONDITION:this.data.state=0,this.data.dutyCycle=0;break;case ErrorEventCode.INVALID_STATE_CONDITION:this.data.state=2,this.data.dutyCycle=1e300}}}class RCServoBase extends PhidgetChannel{constructor(e){super(e),this.onPositionChange=null,this.onVelocityChange=null,this.onTargetPositionReached=null,this.we=ChannelClass.RC_SERVO,this.name="RCServo",this.data=this.Ut()}ye(e){switch(e.vpkt){case 40:this.data.acceleration=e.entries[0].v,this.he("Acceleration",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 57:this.data.engaged=e.entries[0].v,this.he("Engaged",e);break;case 146:case 147:break;case 70:this.data.minPulseWidth=e.entries[0].v,this.he("MinPulseWidth",e);break;case 69:this.data.maxPulseWidth=e.entries[0].v,this.he("MaxPulseWidth",e);break;case 81:this.data.speedRampingState=e.entries[0].v,this.he("SpeedRampingState",e);break;case 83:this.data.targetPosition=e.entries[0].v,this.he("TargetPosition",e);break;case 55:this.data.torque=e.entries[0].v,this.he("Torque",e);break;case 85:this.data.velocityLimit=e.entries[0].v,this.he("VelocityLimit",e);break;case 86:this.data.voltage=e.entries[0].v,this.he("Voltage",e);break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{maxPulseWidthLimit:1e300,maxPulseWidth:1e300,maxPosition:1e300,maxVelocityLimit:1e300,maxAcceleration:1e300,maxTorque:1e300,minTorque:1e300,minPulseWidthLimit:1e300,minPulseWidth:1e300,minPosition:1e300,minVelocityLimit:1e300,minAcceleration:1e300,position:1e300,targetPosition:1e300,velocityLimit:1e300,velocity:1e300,acceleration:1e300,torque:1e300,isMoving:2,engaged:2,speedRampingState:2,voltage:2147483647,dataInterval:1e300,maxDataInterval:4294967295,minDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxFailsafeTime:4294967295,minFailsafeTime:4294967295}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 387:this.data.maxPulseWidthLimit=4e3,this.data.maxPulseWidth=2450,this.data.maxPosition=180,this.data.maxVelocityLimit=781250,this.data.maxAcceleration=3906250,this.data.minPulseWidthLimit=.063,this.data.minPulseWidth=550,this.data.minPosition=0,this.data.minVelocityLimit=0,this.data.minAcceleration=156.25,this.data.velocityLimit=1900,this.data.acceleration=3800,this.data.engaged=0,this.data.speedRampingState=1,this.data.voltage=RCServoVoltage.VOLTS_5_0;break;case 388:this.data.maxPulseWidthLimit=4e3,this.data.maxPulseWidth=2450,this.data.maxPosition=180,this.data.maxVelocityLimit=781250,this.data.maxAcceleration=3906250,this.data.minPulseWidthLimit=.063,this.data.minPulseWidth=550,this.data.minPosition=0,this.data.minVelocityLimit=0,this.data.minAcceleration=156.25,this.data.velocityLimit=1900,this.data.acceleration=3800,this.data.engaged=0,this.data.speedRampingState=1,this.data.voltage=RCServoVoltage.VOLTS_5_0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 389:this.data.maxPulseWidthLimit=4e3,this.data.maxPulseWidth=2450,this.data.maxPosition=180,this.data.maxVelocityLimit=781250,this.data.maxAcceleration=3906250,this.data.minPulseWidthLimit=.063,this.data.minPulseWidth=550,this.data.minPosition=0,this.data.minVelocityLimit=0,this.data.minAcceleration=156.25,this.data.targetPosition=1500,this.data.velocityLimit=1900,this.data.acceleration=3800,this.data.isMoving=0,this.data.engaged=0,this.data.speedRampingState=1,this.data.voltage=RCServoVoltage.VOLTS_5_0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 387:case 388:break;case 389:e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.targetPosition}),await e.send(this.Z,83);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get acceleration(){return this.getAcceleration()}get minAcceleration(){return this.getMinAcceleration()}get maxAcceleration(){return this.getMaxAcceleration()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get engaged(){return this.getEngaged()}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get isMoving(){return this.getIsMoving()}get position(){return this.getPosition()}get minPosition(){return this.getMinPosition()}set minPosition(e){this.setMinPosition(e)}get maxPosition(){return this.getMaxPosition()}set maxPosition(e){this.setMaxPosition(e)}get minPulseWidth(){return this.getMinPulseWidth()}get maxPulseWidth(){return this.getMaxPulseWidth()}get minPulseWidthLimit(){return this.getMinPulseWidthLimit()}get maxPulseWidthLimit(){return this.getMaxPulseWidthLimit()}get speedRampingState(){return this.getSpeedRampingState()}get targetPosition(){return this.getTargetPosition()}get torque(){return this.getTorque()}get minTorque(){return this.getMinTorque()}get maxTorque(){return this.getMaxTorque()}get velocity(){return this.getVelocity()}get velocityLimit(){return this.getVelocityLimit()}get minVelocityLimit(){return this.getMinVelocityLimit()}get maxVelocityLimit(){return this.getMaxVelocityLimit()}get voltage(){return this.getVoltage()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getEngaged(){if(this.le(),2===this.data.engaged)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.engaged}async setEngaged(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,57)}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}getIsMoving(){if(this.le(),2===this.data.isMoving)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.isMoving}getMinPosition(){if(this.le(),1e300===this.data.minPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPosition}getMaxPosition(){if(this.le(),1e300===this.data.maxPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPosition}async setMinPulseWidth(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,70)}getMinPulseWidth(){if(this.le(),1e300===this.data.minPulseWidth)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPulseWidth}async setMaxPulseWidth(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,69)}getMaxPulseWidth(){if(this.le(),1e300===this.data.maxPulseWidth)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPulseWidth}getMinPulseWidthLimit(){if(this.le(),1e300===this.data.minPulseWidthLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPulseWidthLimit}getMaxPulseWidthLimit(){if(this.le(),1e300===this.data.maxPulseWidthLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPulseWidthLimit}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}getSpeedRampingState(){if(this.le(),2===this.data.speedRampingState)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.speedRampingState}async setSpeedRampingState(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,81)}getTorque(){if(this.le(),1e300===this.data.torque)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.torque}async setTorque(e){if(this.le(),e<this.data.minTorque||e>this.data.maxTorque)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minTorque+" - "+this.data.maxTorque+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,55)}getMinTorque(){if(this.le(),1e300===this.data.minTorque)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minTorque}getMaxTorque(){if(this.le(),1e300===this.data.maxTorque)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxTorque}getVoltage(){if(this.le(),2147483647===this.data.voltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.voltage}async setVoltage(e){this.le();const t=new BridgePacket;if(!supportedRCServoVoltage(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified RCServoVoltage is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,86)}}class RCServo extends RCServoBase{ye(e){switch(e.vpkt){case 57:!0===e.getBoolean(0)&&0!==this.data.velocityLimit&&this.data.position!==this.data.targetPosition&&(this.data.isMoving=1),super.ye(e);break;case 85:this.data.engaged&&0!==e.getNumber(0)&&this.data.position!==this.data.targetPosition&&(this.data.isMoving=1),super.ye(e);break;case 83:this.data.engaged&&0!==this.data.velocityLimit&&this.data.position!==e.getNumber(0)&&(this.data.isMoving=1),super.ye(e);break;case 29:if(this.data.position=e.getNumber(0),this.ce&&this.onPositionChange)try{this.onPositionChange(this.xt(this.data.position))}catch(e){logEventException(e)}break;case 100:if(this.data.velocity=e.getNumber(0),this.ce&&this.onVelocityChange)try{this.onVelocityChange(this.Nt(this.data.velocity))}catch(e){logEventException(e)}break;case 94:if(this.data.position=e.getNumber(0),this.data.isMoving=0,this.ce&&this.onTargetPositionReached)try{this.onTargetPositionReached(this.xt(this.data.position))}catch(e){logEventException(e)}break;default:super.ye(e)}}xt(e){return this.data.minPosition+(e-this.data.minPulseWidth)/(this.data.maxPulseWidth-this.data.minPulseWidth)*this.data.maxPosition-this.data.minPosition}Lt(e){return this.data.maxPosition>this.data.minPosition?this.data.minPulseWidth+(this.data.maxPulseWidth-this.data.minPulseWidth)*(e-this.data.minPosition)/(this.data.maxPosition-this.data.minPosition):this.data.maxPulseWidth+(this.data.maxPulseWidth-this.data.minPulseWidth)*(e-this.data.maxPosition)/(this.data.maxPosition-this.data.minPosition)}Nt(e){return Math.abs(this.data.maxPosition-this.data.minPosition)*e/(this.data.maxPulseWidth-this.data.minPulseWidth)}Ft(e){return(this.data.maxPulseWidth-this.data.minPulseWidth)*e/Math.abs(this.data.maxPosition-this.data.minPosition)}Gt(e){return Math.abs(this.data.maxPosition-this.data.minPosition)*e/(this.data.maxPulseWidth-this.data.minPulseWidth)}Ht(e){return(this.data.maxPulseWidth-this.data.minPulseWidth)*e/Math.abs(this.data.maxPosition-this.data.minPosition)}getAcceleration(){if(this.le(),1e300===this.data.acceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Gt(this.data.acceleration)}getMinAcceleration(){if(this.le(),1e300===this.data.minAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Gt(this.data.minAcceleration)}getMaxAcceleration(){if(this.le(),1e300===this.data.maxAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Gt(this.data.maxAcceleration)}getPosition(){if(this.le(),1e300===this.data.position)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.xt(this.data.position)}setMaxPosition(e){this.le(),this.data.maxPosition=e}setMinPosition(e){this.le(),this.data.minPosition=e}getTargetPosition(){if(this.le(),1e300===this.data.targetPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.xt(this.data.targetPosition)}getVelocity(){if(this.le(),1e300===this.data.velocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Nt(this.data.velocity)}getVelocityLimit(){if(this.le(),1e300===this.data.velocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Nt(this.data.velocityLimit)}getMinVelocityLimit(){if(this.le(),1e300===this.data.minVelocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Nt(this.data.minVelocityLimit)}getMaxVelocityLimit(){if(this.le(),1e300===this.data.maxVelocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.Nt(this.data.maxVelocityLimit)}async setAcceleration(e){if(this.le(),(e=this.Ht(e))<this.data.minAcceleration||e>this.data.maxAcceleration)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minAcceleration+" - "+this.maxAcceleration+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,40)}async setTargetPosition(e){if(this.le(),(e=this.Lt(e))<this.data.minPulseWidth||e>this.data.maxPulseWidth)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minPosition+" - "+this.maxPosition+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,83)}async setVelocityLimit(e){if(this.le(),(e=this.Ft(e))<this.data.minVelocityLimit||e>this.data.maxVelocityLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minVelocityLimit+" - "+this.maxVelocityLimit+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,85)}}class VoltageOutputBase extends PhidgetChannel{constructor(e){super(e),this.we=ChannelClass.VOLTAGE_OUTPUT,this.name="VoltageOutput",this.data=this.Ut()}ye(e){switch(e.vpkt){case 56:this.data.enabled=e.entries[0].v,this.he("Enabled",e);break;case 146:case 147:break;case 86:this.data.voltage=e.entries[0].v,this.he("Voltage",e);break;case 87:this.data.voltageOutputRange=e.entries[0].v,this.he("VoltageOutputRange",e);break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{enabled:2,maxVoltage:1e300,minVoltage:1e300,voltage:1e300,voltageOutputRange:2147483647,maxFailsafeTime:4294967295,minFailsafeTime:4294967295}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 225:this.data.enabled=1,this.data.maxVoltage=4.2,this.data.minVoltage=0,this.data.voltage=0;break;case 226:this.data.enabled=1,this.data.maxVoltage=4.2,this.data.minVoltage=0,this.data.voltage=0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 227:case 229:this.data.enabled=1,this.data.voltage=0,this.data.voltageOutputRange=VoltageOutputRange.VOLTS_10;break;case 228:case 230:this.data.enabled=1,this.data.voltage=0,this.data.voltageOutputRange=VoltageOutputRange.VOLTS_10,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 225:case 226:e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.enabled}),await e.send(this.Z,56),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltage}),await e.send(this.Z,86);break;case 227:case 228:case 229:case 230:e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.voltageOutputRange}),await e.send(this.Z,87);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get enabled(){return this.getEnabled()}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get voltage(){return this.getVoltage()}get minVoltage(){return this.getMinVoltage()}get maxVoltage(){return this.getMaxVoltage()}get voltageOutputRange(){return this.getVoltageOutputRange()}async setEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,56)}getEnabled(){if(this.le(),2===this.data.enabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.enabled}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}getVoltage(){if(this.le(),1e300===this.data.voltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.voltage}async setVoltage(e){if(this.le(),e<this.data.minVoltage||e>this.data.maxVoltage)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minVoltage+" - "+this.data.maxVoltage+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,86)}getMinVoltage(){if(this.le(),1e300===this.data.minVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVoltage}getMaxVoltage(){if(this.le(),1e300===this.data.maxVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVoltage}getVoltageOutputRange(){if(this.le(),2147483647===this.data.voltageOutputRange)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.voltageOutputRange}async setVoltageOutputRange(e){this.le();const t=new BridgePacket;if(!supportedVoltageOutputRange(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified VoltageOutputRange is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,87)}}class VoltageOutput extends VoltageOutputBase{ye(e){if(87===e.vpkt){switch(super.ye(e),this.data.voltageOutputRange){case VoltageOutputRange.VOLTS_10:this.data.minVoltage=-10,this.data.maxVoltage=10;break;case VoltageOutputRange.VOLTS_5:this.data.minVoltage=0,this.data.maxVoltage=5}this.he("MinVoltage",e),this.he("MaxVoltage",e)}else super.ye(e)}}class AccelerometerBase extends PhidgetChannel{constructor(e){super(e),this.onAccelerationChange=null,this.we=ChannelClass.ACCELEROMETER,this.name="Accelerometer",this.data=this.Ut()}ye(e){switch(e.vpkt){case 46:this.data.accelerationChangeTrigger=e.entries[0].v,this.he("AccelerationChangeTrigger",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 170:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;case 145:this.data.precision=e.entries[0].v,this.he("Precision",e);break;case 1:if(this.data.acceleration=e.entries[0].v,this.data.timestamp=e.entries[1].v,this.ce&&this.onAccelerationChange)try{this.onAccelerationChange(this.data.acceleration,this.data.timestamp)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,timestamp:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxAcceleration:[1e300,1e300,1e300],maxAccelerationChangeTrigger:1e300,minDataInterval:4294967295,minAcceleration:[1e300,1e300,1e300],minAccelerationChangeTrigger:1e300,acceleration:[1e300,1e300,1e300],accelerationChangeTrigger:1e300,axisCount:2147483647,precision:2147483647,heatingEnabled:2}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 351:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=100,this.data.maxAcceleration=[8,8,8],this.data.maxAccelerationChangeTrigger=16,this.data.minDataInterval=10,this.data.minAcceleration=[-8,-8,-8],this.data.minAccelerationChangeTrigger=0,this.data.accelerationChangeTrigger=0,this.data.axisCount=3;break;case 352:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=250,this.data.maxAcceleration=[8,8,8],this.data.maxAccelerationChangeTrigger=8,this.data.minDataInterval=4,this.data.minAcceleration=[-8,-8,-8],this.data.minAccelerationChangeTrigger=0,this.data.acceleration=this.Z.parent.data.acceleration[this.Z.index],this.data.accelerationChangeTrigger=0,this.data.axisCount=3;break;case 353:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=250,this.data.maxAcceleration=[8,8,8],this.data.maxAccelerationChangeTrigger=8,this.data.minDataInterval=4,this.data.minAcceleration=[-8,-8,-8],this.data.minAccelerationChangeTrigger=0,this.data.accelerationChangeTrigger=0,this.data.axisCount=3;break;case 354:case 358:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxAcceleration=[8,8,8],this.data.maxAccelerationChangeTrigger=16,this.data.minDataInterval=20,this.data.minAcceleration=[-8,-8,-8],this.data.minAccelerationChangeTrigger=0,this.data.accelerationChangeTrigger=0,this.data.axisCount=3,this.data.precision=SpatialPrecision.LOW;break;case 362:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxAcceleration=[8,8,8],this.data.maxAccelerationChangeTrigger=8,this.data.minDataInterval=20,this.data.minAcceleration=[-8,-8,-8],this.data.minAccelerationChangeTrigger=0,this.data.accelerationChangeTrigger=0,this.data.axisCount=3,this.data.precision=SpatialPrecision.LOW;break;case 371:this.data.dataInterval=256,this.data.timestamp=this.Z.parent.data.timestamp[this.Z.index],this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=250,this.data.maxAcceleration=[8,8,8],this.data.maxAccelerationChangeTrigger=16,this.data.minDataInterval=4,this.data.minAcceleration=[-8,-8,-8],this.data.minAccelerationChangeTrigger=0,this.data.acceleration=this.Z.parent.data.acceleration[this.Z.index],this.data.accelerationChangeTrigger=0,this.data.axisCount=3,this.data.precision=SpatialPrecision.HYBRID,this.data.heatingEnabled=0;break;case 376:this.data.dataInterval=250,this.data.timestamp=this.Z.parent.data.timestamp[this.Z.index],this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.maxAcceleration=[16,16,16],this.data.maxAccelerationChangeTrigger=16,this.data.minDataInterval=1,this.data.minAcceleration=[-16,-16,-16],this.data.minAccelerationChangeTrigger=0,this.data.acceleration=this.Z.parent.data.acceleration[this.Z.index],this.data.accelerationChangeTrigger=0,this.data.axisCount=3,this.data.precision=SpatialPrecision.HIGH,this.data.heatingEnabled=0;break;case 381:this.data.dataInterval=250,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.maxAcceleration=[16,16,16],this.data.maxAccelerationChangeTrigger=16,this.data.minDataInterval=1,this.data.minAcceleration=[-16,-16,-16],this.data.minAccelerationChangeTrigger=0,this.data.accelerationChangeTrigger=0,this.data.axisCount=3,this.data.precision=SpatialPrecision.HIGH,this.data.heatingEnabled=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 351:case 352:case 353:case 354:case 358:case 362:case 371:case 376:case 381:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.accelerationChangeTrigger}),await e.send(this.Z,46);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!((this.data.acceleration.includes(1e300)||1e300==this.data.timestamp)&&!this.jt)}lt(){if(!this.data.acceleration.includes(1e300)&&1e300!=this.data.timestamp&&this.onAccelerationChange)try{this.onAccelerationChange(this.data.acceleration,this.data.timestamp)}catch(e){logEventException(e)}}get acceleration(){return this.getAcceleration()}get minAcceleration(){return this.getMinAcceleration()}get maxAcceleration(){return this.getMaxAcceleration()}get accelerationChangeTrigger(){return this.getAccelerationChangeTrigger()}get minAccelerationChangeTrigger(){return this.getMinAccelerationChangeTrigger()}get maxAccelerationChangeTrigger(){return this.getMaxAccelerationChangeTrigger()}get axisCount(){return this.getAxisCount()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get heatingEnabled(){return this.getHeatingEnabled()}get precision(){return this.getPrecision()}get timestamp(){return this.getTimestamp()}getAcceleration(){if(this.le(),this.data.acceleration.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.acceleration}getMinAcceleration(){if(this.le(),this.data.minAcceleration.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAcceleration}getMaxAcceleration(){if(this.le(),this.data.maxAcceleration.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAcceleration}getAccelerationChangeTrigger(){if(this.le(),1e300===this.data.accelerationChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.accelerationChangeTrigger}async setAccelerationChangeTrigger(e){if(this.le(),e<this.data.minAccelerationChangeTrigger||e>this.data.maxAccelerationChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minAccelerationChangeTrigger+" - "+this.data.maxAccelerationChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinAccelerationChangeTrigger(){if(this.le(),1e300===this.data.minAccelerationChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAccelerationChangeTrigger}getMaxAccelerationChangeTrigger(){if(this.le(),1e300===this.data.maxAccelerationChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAccelerationChangeTrigger}getAxisCount(){if(this.le(),2147483647===this.data.axisCount)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.axisCount}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getHeatingEnabled(){if(this.le(),2===this.data.heatingEnabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.heatingEnabled}async setHeatingEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,170)}getPrecision(){if(this.le(),2147483647===this.data.precision)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.precision}async setPrecision(e){this.le();const t=new BridgePacket;if(!supportedSpatialPrecision(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified SpatialPrecision is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,145)}getTimestamp(){if(this.le(),1e300===this.data.timestamp)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.timestamp}}class Accelerometer extends AccelerometerBase{ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval"),this.he("DataRate");break;case 179:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;default:super.ye(e)}}Ee(e){if(e===ErrorEventCode.SATURATION)this.data.acceleration=[1e300,1e300,1e300],this.data.timestamp=1e300,this.jt=!0}}var global$1=global$D,aCallable=aCallable$8,toObject=toObject$3,IndexedObject=indexedObject,lengthOfArrayLike=lengthOfArrayLike$3,TypeError$1=global$1.TypeError,createMethod$1=function(e){return function(t,r,i,a){aCallable(r);var s=toObject(t),n=IndexedObject(s),o=lengthOfArrayLike(s),h=e?o-1:0,c=e?-1:1;if(i<2)for(;;){if(h in n){a=n[h],h+=c;break}if(h+=c,e?h<0:o<=h)throw TypeError$1("Reduce of empty array with no initial value")}for(;e?h>=0:o>h;h+=c)h in n&&(a=r(a,n[h],h,s));return a}},arrayReduce={left:createMethod$1(!1),right:createMethod$1(!0)},fails$1=fails$f,arrayMethodIsStrict$1=function(e,t){var r=[][e];return!!r&&fails$1((function(){r.call(null,t||function(){return 1},1)}))},$$1=_export,$reduce=arrayReduce.left,arrayMethodIsStrict=arrayMethodIsStrict$1,CHROME_VERSION=engineV8Version,IS_NODE=engineIsNode,STRICT_METHOD=arrayMethodIsStrict("reduce"),CHROME_BUG=!IS_NODE&&CHROME_VERSION>79&&CHROME_VERSION<83;$$1({target:"Array",proto:!0,forced:!STRICT_METHOD||CHROME_BUG},{reduce:function(e){var t=arguments.length;return $reduce(this,e,t,t>1?arguments[1]:void 0)}});var entryVirtual$1=entryVirtual$4,reduce$3=entryVirtual$1("Array").reduce,isPrototypeOf$1=objectIsPrototypeOf,method$1=reduce$3,ArrayPrototype=Array.prototype,reduce$2=function(e){var t=e.reduce;return e===ArrayPrototype||isPrototypeOf$1(ArrayPrototype,e)&&t===ArrayPrototype.reduce?method$1:t},parent$1=reduce$2,reduce$1=parent$1,reduce=reduce$1;class VoltageInputBase extends PhidgetChannel{constructor(e){super(e),this.onVoltageChange=null,this.onSensorChange=null,this.we=ChannelClass.VOLTAGE_INPUT,this.name="VoltageInput",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 74:this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);break;case 79:this.data.sensorType=e.entries[0].v,this.he("SensorType",e);break;case 122:this.data.sensorValueChangeTrigger=e.entries[0].v,this.he("SensorValueChangeTrigger",e);break;case 46:this.data.voltageChangeTrigger=e.entries[0].v,this.he("VoltageChangeTrigger",e);break;case 87:this.data.voltageRange=e.entries[0].v,this.he("VoltageRange",e);break;case 115:{this.data.sensorValue=e.entries[0].v;const t={unit:e.entries["UnitInfo.unit"].v,name:e.entries["UnitInfo.name"].v,symbol:e.entries["UnitInfo.symbol"].v};if(this.data.sensorUnit=t,this.ce&&this.onSensorChange)try{this.onSensorChange(this.data.sensorValue,this.data.sensorUnit)}catch(e){logEventException(e)}break}default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,powerSupply:2147483647,sensorType:2147483647,sensorUnit:null,sensorValue:1e300,voltage:1e300,minVoltage:1e300,maxVoltage:1e300,voltageChangeTrigger:1e300,minVoltageChangeTrigger:1e300,maxVoltageChangeTrigger:1e300,voltageRange:2147483647,sensorValueChangeTrigger:1e300}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 45:this.data.dataInterval=256,this.data.minDataInterval=1,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.voltage=this.Z.parent.data.voltage[this.Z.index],this.data.minVoltage=0,this.data.maxVoltage=5.456,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=5,this.data.sensorValueChangeTrigger=0;break;case 111:this.data.dataInterval=256,this.data.minDataInterval=32,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=31.25,this.data.voltage=this.Z.parent.data.voltage[this.Z.index],this.data.minVoltage=-.01001,this.data.maxVoltage=.07741,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=.08742;break;case 196:this.data.dataInterval=250,this.data.minDataInterval=1,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=1e3,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.minVoltage=0,this.data.maxVoltage=5,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=5,this.data.sensorValueChangeTrigger=0;break;case 197:case 198:this.data.dataInterval=250,this.data.minDataInterval=1,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=1e3,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.minVoltage=0,this.data.maxVoltage=5.25,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=5,this.data.sensorValueChangeTrigger=0;break;case 202:this.data.dataInterval=250,this.data.minDataInterval=50,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=20,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.minVoltage=-2,this.data.maxVoltage=2,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=4,this.data.voltageRange=VoltageRange.MILLIVOLTS_400,this.data.sensorValueChangeTrigger=0;break;case 222:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.minVoltage=0,this.data.maxVoltage=5,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=5,this.data.sensorValueChangeTrigger=0;break;case 224:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.minVoltage=0,this.data.maxVoltage=5.25,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=5,this.data.sensorValueChangeTrigger=0;break;case 238:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.powerSupply=PowerSupply.VOLTS_12,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.minVoltage=0,this.data.maxVoltage=5,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=5,this.data.sensorValueChangeTrigger=0;break;case 242:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.powerSupply=PowerSupply.VOLTS_12,this.data.sensorType=VoltageSensorType.VOLTAGE,this.data.minVoltage=0,this.data.maxVoltage=5.25,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=5,this.data.sensorValueChangeTrigger=0;break;case 401:case 404:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minVoltage=0,this.data.maxVoltage=40,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=32;break;case 416:case 418:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minVoltage=0,this.data.maxVoltage=40,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=20;break;case 420:this.data.dataInterval=250,this.data.minDataInterval=10,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=100,this.data.minVoltage=0,this.data.maxVoltage=40,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=20;break;case 425:case 428:case 431:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.minVoltage=-.011,this.data.maxVoltage=.079,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=.09;break;case 441:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=80,this.data.voltageRange=VoltageRange.VOLTS_40;break;case 442:this.data.dataInterval=250,this.data.minDataInterval=40,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=25,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=80,this.data.voltageRange=VoltageRange.AUTO;break;case 443:this.data.dataInterval=250,this.data.minDataInterval=12,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=83.33333333333333,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=80,this.data.voltageRange=VoltageRange.AUTO;break;case 444:this.data.dataInterval=250,this.data.minDataInterval=40,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=25,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=2,this.data.voltageRange=VoltageRange.AUTO;break;case 445:this.data.dataInterval=250,this.data.minDataInterval=12,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=83.33333333333333,this.data.voltageChangeTrigger=0,this.data.minVoltageChangeTrigger=0,this.data.maxVoltageChangeTrigger=2,this.data.voltageRange=VoltageRange.AUTO;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 45:case 196:case 197:case 198:case 222:case 224:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.sensorType}),await e.send(this.Z,79),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.sensorValueChangeTrigger}),await e.send(this.Z,122);break;case 111:case 401:case 404:case 416:case 418:case 420:case 425:case 428:case 431:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageChangeTrigger}),await e.send(this.Z,46);break;case 202:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.sensorType}),await e.send(this.Z,79),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.voltageRange}),await e.send(this.Z,87),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.sensorValueChangeTrigger}),await e.send(this.Z,122);break;case 238:case 242:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.powerSupply}),await e.send(this.Z,74),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.sensorType}),await e.send(this.Z,79),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.sensorValueChangeTrigger}),await e.send(this.Z,122);break;case 441:case 442:case 443:case 444:case 445:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.voltageChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.voltageRange}),await e.send(this.Z,87);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get powerSupply(){return this.getPowerSupply()}get sensorType(){return this.getSensorType()}get sensorUnit(){return this.getSensorUnit()}get sensorValue(){return this.getSensorValue()}get sensorValueChangeTrigger(){return this.getSensorValueChangeTrigger()}get voltage(){return this.getVoltage()}get minVoltage(){return this.getMinVoltage()}get maxVoltage(){return this.getMaxVoltage()}get voltageChangeTrigger(){return this.getVoltageChangeTrigger()}get minVoltageChangeTrigger(){return this.getMinVoltageChangeTrigger()}get maxVoltageChangeTrigger(){return this.getMaxVoltageChangeTrigger()}get voltageRange(){return this.getVoltageRange()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getPowerSupply(){if(this.le(),2147483647===this.data.powerSupply)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.powerSupply}async setPowerSupply(e){this.le();const t=new BridgePacket;if(!supportedPowerSupply(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified PowerSupply is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,74)}getSensorType(){if(this.le(),2147483647===this.data.sensorType)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorType}async setSensorType(e){this.le();const t=new BridgePacket;if(!supportedVoltageSensorType(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified VoltageSensorType is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,79)}getSensorUnit(){if(this.le(),null===this.data.sensorUnit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorUnit}getSensorValue(){if(this.le(),1e300===this.data.sensorValue)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorValue}getSensorValueChangeTrigger(){if(this.le(),1e300===this.data.sensorValueChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensorValueChangeTrigger}async setSensorValueChangeTrigger(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,122)}getVoltage(){if(this.le(),1e300===this.data.voltage||Number.isNaN(this.data.voltage))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.voltage>this.data.maxVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.voltage<this.data.minVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.voltage}getMinVoltage(){if(this.le(),1e300===this.data.minVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVoltage}getMaxVoltage(){if(this.le(),1e300===this.data.maxVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVoltage}getVoltageChangeTrigger(){if(this.le(),1e300===this.data.voltageChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.voltageChangeTrigger}async setVoltageChangeTrigger(e){if(this.le(),e<this.data.minVoltageChangeTrigger||e>this.data.maxVoltageChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minVoltageChangeTrigger+" - "+this.data.maxVoltageChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinVoltageChangeTrigger(){if(this.le(),1e300===this.data.minVoltageChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVoltageChangeTrigger}getMaxVoltageChangeTrigger(){if(this.le(),1e300===this.data.maxVoltageChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVoltageChangeTrigger}getVoltageRange(){if(this.le(),2147483647===this.data.voltageRange)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.voltageRange}async setVoltageRange(e){this.le();const t=new BridgePacket;if(!supportedVoltageRange(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified VoltageRange is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,87)}}class VoltageInput extends VoltageInputBase{constructor(e){super(e),this.Kt={voltageBuffer:[],voltageBufferIndex:0,voltageBufferReady:!1,motionSensorCountdown:0,motionSensorBaseline:1e300,VOLTAGE_BUFFER_LEN:25}}ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval",e),this.he("DataRate",e);break;case 27:this.data.minDataInterval=e.getNumber(0),this.he("MinDataInterval",e);break;case 79:switch(super.ye(e),this._t(),this.data.sensorType){case VoltageSensorType.PN_MOT2002_LOW:case VoltageSensorType.PN_MOT2002_MED:case VoltageSensorType.PN_MOT2002_HIGH:{const e=new BridgePacket;e.set({name:"0",type:"u",value:200}),e.sendToChannel(this.Z,54);break}}break;case 101:this.data.voltage=e.getNumber("0"),this.Wt(this.data.voltage);if(this._t(!0)&&this.Z.conn.u)throw new PhidgetError(ErrorCode.UNSUPPORTED);break;case 87:switch(super.ye(e),this.data.voltageRange){case VoltageRange.MILLIVOLTS_10:this.data.minVoltage=-.01,this.data.maxVoltage=.01;break;case VoltageRange.MILLIVOLTS_40:this.data.minVoltage=-.04,this.data.maxVoltage=.04;break;case VoltageRange.MILLIVOLTS_200:this.data.minVoltage=-.2,this.data.maxVoltage=.2;break;case VoltageRange.MILLIVOLTS_312_5:this.data.minVoltage=-.3125,this.data.maxVoltage=.3125;break;case VoltageRange.MILLIVOLTS_400:this.data.minVoltage=-.4,this.data.maxVoltage=.4;break;case VoltageRange.MILLIVOLTS_1000:this.data.minVoltage=-1,this.data.maxVoltage=1;break;case VoltageRange.VOLTS_2:this.data.minVoltage=-2,this.data.maxVoltage=2;break;case VoltageRange.VOLTS_5:this.data.minVoltage=-5,this.data.maxVoltage=5;break;case VoltageRange.VOLTS_15:this.data.minVoltage=-15,this.data.maxVoltage=15;break;case VoltageRange.VOLTS_40:this.data.minVoltage=-40,this.data.maxVoltage=40;break;case VoltageRange.AUTO:switch(this.Z.chDef.uid){case 442:this.data.minVoltage=-40,this.data.maxVoltage=40;break;case 444:this.data.minVoltage=-1,this.data.maxVoltage=1}}this.he("MinVoltage",e),this.he("MaxVoltage",e);break;case 181:this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);break;default:super.ye(e)}}Ee(e){if(e===ErrorEventCode.SATURATION)this.data.voltage=1e300,this.data.sensorValue=1e300,this.qt=!0}dt(){super.dt(),this.Kt={voltageBuffer:[],voltageBufferIndex:0,voltageBufferReady:!1,motionSensorCountdown:0,motionSensorBaseline:1e300,VOLTAGE_BUFFER_LEN:25},2147483647===this.data.sensorType&&(this.data.sensorType=VoltageSensorType.VOLTAGE),this.data.sensorUnit=this.zt(this.data.sensorType),this.data.sensorValue=this.Yt(this.data.voltage,this.data.sensorType)}fe(){return!(1e300==this.data.voltage&&!this.qt)&&super.fe()}lt(){if(this.data.sensorType!=VoltageSensorType.VOLTAGE){if(1e300!=this.data.sensorValue&&null!=this.data.sensorUnit&&this.onSensorChange)try{this.onSensorChange(this.data.sensorValue,this.data.sensorUnit)}catch(e){logEventException(e)}}else if(1e300!=this.data.voltage&&this.onVoltageChange)try{this.onVoltageChange(this.data.voltage)}catch(e){logEventException(e)}super.lt()}_t(){let e,t,r=arguments.length>0&&void 0!==arguments[0]&&arguments[0],i=!1;if(this.Z.supportedBridgePacket(115)&&this.Z.conn.h&&this.data.sensorType!==VoltageSensorType.VOLTAGE){if(e=this.Yt(this.data.voltage,this.data.sensorType),this.$t(e,this.data.sensorType)){if((1e300===this.data.sensorValue||Math.abs(e-this.data.sensorValue)>=this.data.sensorValueChangeTrigger)&&(this.data.sensorValue=e,this.ce)){t=this.zt(this.data.sensorType);const r=new BridgePacket;r.set({name:"0",type:"g",value:e}),r.set({name:"UnitInfo.unit",type:"g",value:t.unit}),r.set({name:"UnitInfo.name",type:"s",value:t.name}),r.set({name:"UnitInfo.symbol",type:"s",value:t.symbol}),r.sendToChannel(this.Z,115)}}else if(this.data.sensorValue=1e300,this.ce){const e=new BridgePacket;e.set({name:"0",type:"d",value:ErrorEventCode.OUT_OF_RANGE}),e.set({name:"1",type:"s",value:"Sensor value is outside the valid range for this sensor."}),this.Z.sendErrorEvent(e)}i=!0}else if(r&&(this.data.sensorUnit=this.zt(this.data.sensorType),this.data.sensorValue=this.Yt(this.data.voltage,this.data.sensorType),this.ce&&this.onVoltageChange))try{this.onVoltageChange(this.data.voltage)}catch(e){logEventException(e)}return i}Wt(e){this.Kt.voltageBuffer.push(e),this.Kt.voltageBuffer.length>=this.Kt.VOLTAGE_BUFFER_LEN&&(this.Kt.voltageBufferReady=!0,this.Kt.voltageBuffer.length>this.Kt.VOLTAGE_BUFFER_LEN&&this.Kt.voltageBuffer.shift())}Yt(e,t){if(1e300===e)return 1e300;switch(t){case VoltageSensorType.PN_1114:return RoundDouble(e/.02-50,3);case VoltageSensorType.PN_1117:case VoltageSensorType.PN_1123:return RoundDouble(12*e-30,3);case VoltageSensorType.PN_1127:return RoundDouble(200*e,2);case VoltageSensorType.PN_1130_PH:return RoundDouble(3.56*e-1.889,4);case VoltageSensorType.PN_1130_ORP:return RoundDouble((2.5-e)/1.037,5);case VoltageSensorType.PN_1132:return RoundDouble(e/.225,4);case VoltageSensorType.PN_1133:return RoundDouble(16.801*Math.log(200*e)+9.872,4);case VoltageSensorType.PN_1135:return RoundDouble((e-2.5)/.0681,3);case VoltageSensorType.PN_1142:return RoundDouble(295.7554*e+33.67076,2);case VoltageSensorType.PN_1143:return RoundDouble(Math.exp(4.77*e-.56905),4);case VoltageSensorType.PN_3500:return RoundDouble(e/.5,4);case VoltageSensorType.PN_3501:return RoundDouble(e/.2,4);case VoltageSensorType.PN_3502:return RoundDouble(e/.1,4);case VoltageSensorType.PN_3503:return RoundDouble(e/.05,3);case VoltageSensorType.PN_3507:case VoltageSensorType.PN_3508:return RoundDouble(50*e,3);case VoltageSensorType.PN_3509:return RoundDouble(40*e,3);case VoltageSensorType.PN_3510:return RoundDouble(15*e,4);case VoltageSensorType.PN_3511:return RoundDouble(2*e,4);case VoltageSensorType.PN_3512:return RoundDouble(20*e,3);case VoltageSensorType.PN_3513:return RoundDouble(200*e,2);case VoltageSensorType.PN_3514:case VoltageSensorType.PN_3515:return RoundDouble(1500*e,1);case VoltageSensorType.PN_3516:case VoltageSensorType.PN_3517:return RoundDouble(250*e,2);case VoltageSensorType.PN_3518:return RoundDouble(110*e,3);case VoltageSensorType.PN_3519:return RoundDouble(330*e,2);case VoltageSensorType.PN_3584:return RoundDouble(10*e,4);case VoltageSensorType.PN_3585:return RoundDouble(20*e,3);case VoltageSensorType.PN_3586:return RoundDouble(50*e,3);case VoltageSensorType.PN_3587:return RoundDouble(20*e-50,3);case VoltageSensorType.PN_3588:return RoundDouble(40*e-100,3);case VoltageSensorType.PN_3589:return RoundDouble(100*e-250,3);case VoltageSensorType.PN_MOT2002_LOW:return this.Xt(.8)?1:0;case VoltageSensorType.PN_MOT2002_MED:return this.Xt(.4)?1:0;case VoltageSensorType.PN_MOT2002_HIGH:return this.Xt(.04)?1:0;case VoltageSensorType.PN_VCP4114:return RoundDouble((e-2.5)/.0625,3);case VoltageSensorType.VOLTAGE:default:return e}}$t(e,t){if(1e300===e)return!1;switch(t){case VoltageSensorType.PN_1114:return e>=-40&&e<=125;case VoltageSensorType.PN_1117:case VoltageSensorType.PN_1123:return e>=-30&&e<=30;case VoltageSensorType.PN_1127:return e>=0&&e<=1e3;case VoltageSensorType.PN_1130_PH:return e>=0&&e<=14;case VoltageSensorType.PN_1130_ORP:return e>=-2&&e<=2;case VoltageSensorType.PN_1132:return e>=4&&e<=20;case VoltageSensorType.PN_1133:return e>=50&&e<=100;case VoltageSensorType.PN_1135:return e>=-30&&e<=30;case VoltageSensorType.PN_1142:return e>=0&&e<=1e3;case VoltageSensorType.PN_1143:return e>=0&&e<=7e4;case VoltageSensorType.PN_3500:return e>=0&&e<=10;case VoltageSensorType.PN_3501:return e>=0&&e<=25;case VoltageSensorType.PN_3502:return e>=0&&e<=50;case VoltageSensorType.PN_3503:return e>=0&&e<=100;case VoltageSensorType.PN_3507:case VoltageSensorType.PN_3508:return e>=0&&e<=250;case VoltageSensorType.PN_3509:return e>=0&&e<=200;case VoltageSensorType.PN_3510:return e>=0&&e<=75;case VoltageSensorType.PN_3511:return e>=0&&e<=10;case VoltageSensorType.PN_3512:return e>=0&&e<=100;case VoltageSensorType.PN_3513:return e>=0&&e<=1e3;case VoltageSensorType.PN_3514:case VoltageSensorType.PN_3515:return e>=0&&e<=7500;case VoltageSensorType.PN_3516:case VoltageSensorType.PN_3517:return e>=0&&e<=1250;case VoltageSensorType.PN_3518:return e>=0&&e<=550;case VoltageSensorType.PN_3519:return e>=0&&e<=1650;case VoltageSensorType.PN_3584:return e>=0&&e<=50;case VoltageSensorType.PN_3585:return e>=0&&e<=100;case VoltageSensorType.PN_3586:return e>=0&&e<=250;case VoltageSensorType.PN_3587:return e>=-50&&e<=50;case VoltageSensorType.PN_3588:return e>=-100&&e<=100;case VoltageSensorType.PN_3589:return e>=-250&&e<=250;case VoltageSensorType.PN_MOT2002_LOW:case VoltageSensorType.PN_MOT2002_MED:case VoltageSensorType.PN_MOT2002_HIGH:return 1e300!==this.Kt.motionSensorBaseline;case VoltageSensorType.PN_VCP4114:return e>=-25&&e<=25;case VoltageSensorType.VOLTAGE:default:return!0}}zt(e){switch(e){case VoltageSensorType.PN_1130_PH:return Units[Unit.PH];case VoltageSensorType.PN_1114:return Units[Unit.DEGREE_CELCIUS];case VoltageSensorType.PN_1127:case VoltageSensorType.PN_1142:case VoltageSensorType.PN_1143:return Units[Unit.LUX];case VoltageSensorType.PN_1132:case VoltageSensorType.PN_3511:case VoltageSensorType.PN_3512:case VoltageSensorType.PN_3513:return Units[Unit.MILLIAMPERE];case VoltageSensorType.PN_1133:return Units[Unit.DECIBEL];case VoltageSensorType.PN_3500:case VoltageSensorType.PN_3501:case VoltageSensorType.PN_3502:case VoltageSensorType.PN_3503:case VoltageSensorType.PN_3584:case VoltageSensorType.PN_3585:case VoltageSensorType.PN_3586:case VoltageSensorType.PN_3587:case VoltageSensorType.PN_3588:case VoltageSensorType.PN_3589:case VoltageSensorType.PN_VCP4114:return Units[Unit.AMPERE];case VoltageSensorType.PN_3514:case VoltageSensorType.PN_3515:case VoltageSensorType.PN_3516:case VoltageSensorType.PN_3517:case VoltageSensorType.PN_3518:case VoltageSensorType.PN_3519:return Units[Unit.WATT];case VoltageSensorType.PN_MOT2002_LOW:case VoltageSensorType.PN_MOT2002_MED:case VoltageSensorType.PN_MOT2002_HIGH:return Units[Unit.BOOLEAN];case VoltageSensorType.PN_1117:case VoltageSensorType.PN_1123:case VoltageSensorType.PN_1130_ORP:case VoltageSensorType.PN_1135:case VoltageSensorType.PN_3507:case VoltageSensorType.PN_3508:case VoltageSensorType.PN_3509:case VoltageSensorType.PN_3510:case VoltageSensorType.VOLTAGE:default:return Units[Unit.VOLT]}}Xt(e){const t=this.Kt,r=t.voltageBuffer,i=t.voltageBufferIndex;let a=0,s=0,n=0,o=0,h=!1;if(t.voltageBufferReady){if(n=reduce(r).call(r,((e,t)=>e+t))/t.VOLTAGE_BUFFER_LEN,o=reduce(r).call(r,((e,t)=>e+Math.abs(t-n)),0)/t.VOLTAGE_BUFFER_LEN,o<.1)t.motionSensorBaseline=n;else if(1e300===t.motionSensorBaseline)return 2;for(let e=0;e<5;e++)a+=Math.abs(r[(i+t.VOLTAGE_BUFFER_LEN-(e+5))%t.VOLTAGE_BUFFER_LEN]-t.motionSensorBaseline),s+=Math.abs(r[(i+t.VOLTAGE_BUFFER_LEN-e)%t.VOLTAGE_BUFFER_LEN]-t.motionSensorBaseline);return a/=5,s/=5,0!==t.motionSensorCountdown&&(t.motionSensorCountdown--,h=!0),a>e&&s>e&&(t.motionSensorCountdown=10,h=!0),h}return 2}}class CapacitiveTouchBase extends PhidgetChannel{constructor(e){super(e),this.onTouch=null,this.onTouchEnd=null,this.we=ChannelClass.CAPACITIVE_TOUCH,this.name="CapacitiveTouch",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 66:this.data.sensitivity=e.entries[0].v,this.he("Sensitivity",e);break;case 46:this.data.touchValueChangeTrigger=e.entries[0].v,this.he("TouchValueChangeTrigger",e);break;case 96:if(this.data.touchValue=e.entries[0].v,this.ce&&this.onTouch)try{this.onTouch(this.data.touchValue)}catch(e){logEventException(e)}break;case 137:if(this.ce&&this.onTouchEnd)try{this.onTouchEnd()}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{touchValueChangeTrigger:1e300,minTouchValueChangeTrigger:1e300,maxTouchValueChangeTrigger:1e300,dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,sensitivity:1e300,minSensitivity:1e300,maxSensitivity:1e300,maxTouchValue:1e300,minTouchValue:1e300,touchValue:1e300,isTouched:2}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 337:this.data.touchValueChangeTrigger=0,this.data.minTouchValueChangeTrigger=0,this.data.maxTouchValueChangeTrigger=1,this.data.dataInterval=25,this.data.minDataInterval=25,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=40,this.data.sensitivity=.2,this.data.minSensitivity=0,this.data.maxSensitivity=1,this.data.maxTouchValue=1,this.data.minTouchValue=0;break;case 338:this.data.touchValueChangeTrigger=0,this.data.minTouchValueChangeTrigger=0,this.data.maxTouchValueChangeTrigger=.5,this.data.dataInterval=20,this.data.minDataInterval=20,this.data.maxDataInterval=250,this.data.minDataRate=4,this.data.maxDataRate=50,this.data.sensitivity=.5,this.data.minSensitivity=0,this.data.maxSensitivity=1,this.data.maxTouchValue=1,this.data.minTouchValue=0;break;case 339:this.data.touchValueChangeTrigger=0,this.data.minTouchValueChangeTrigger=0,this.data.maxTouchValueChangeTrigger=.5,this.data.dataInterval=20,this.data.minDataInterval=20,this.data.maxDataInterval=250,this.data.minDataRate=4,this.data.maxDataRate=50,this.data.sensitivity=.7,this.data.minSensitivity=0,this.data.maxSensitivity=1,this.data.maxTouchValue=1,this.data.minTouchValue=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 337:case 338:case 339:e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.touchValueChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.sensitivity}),await e.send(this.Z,66);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.touchValue&&!this.Qt)}lt(){if(1e300!=this.data.touchValue&&this.onTouch)try{this.onTouch(this.data.touchValue)}catch(e){logEventException(e)}}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get sensitivity(){return this.getSensitivity()}get minSensitivity(){return this.getMinSensitivity()}get maxSensitivity(){return this.getMaxSensitivity()}get isTouched(){return this.getIsTouched()}get touchValue(){return this.getTouchValue()}get minTouchValue(){return this.getMinTouchValue()}get maxTouchValue(){return this.getMaxTouchValue()}get touchValueChangeTrigger(){return this.getTouchValueChangeTrigger()}get minTouchValueChangeTrigger(){return this.getMinTouchValueChangeTrigger()}get maxTouchValueChangeTrigger(){return this.getMaxTouchValueChangeTrigger()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getIsTouched(){if(this.le(),2===this.data.isTouched)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.isTouched}getSensitivity(){if(this.le(),1e300===this.data.sensitivity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.sensitivity}async setSensitivity(e){if(this.le(),e<this.data.minSensitivity||e>this.data.maxSensitivity)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minSensitivity+" - "+this.data.maxSensitivity+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,66)}getMinSensitivity(){if(this.le(),1e300===this.data.minSensitivity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minSensitivity}getMaxSensitivity(){if(this.le(),1e300===this.data.maxSensitivity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxSensitivity}getTouchValue(){if(this.le(),1e300===this.data.touchValue)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.touchValue}getMinTouchValue(){if(this.le(),1e300===this.data.minTouchValue)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minTouchValue}getMaxTouchValue(){if(this.le(),1e300===this.data.maxTouchValue)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxTouchValue}getTouchValueChangeTrigger(){if(this.le(),1e300===this.data.touchValueChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.touchValueChangeTrigger}async setTouchValueChangeTrigger(e){if(this.le(),e<this.data.minTouchValueChangeTrigger||e>this.data.maxTouchValueChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minTouchValueChangeTrigger+" - "+this.data.maxTouchValueChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinTouchValueChangeTrigger(){if(this.le(),1e300===this.data.minTouchValueChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minTouchValueChangeTrigger}getMaxTouchValueChangeTrigger(){if(this.le(),1e300===this.data.maxTouchValueChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxTouchValueChangeTrigger}}class CapacitiveTouch extends CapacitiveTouchBase{ye(e){switch(e.vpkt){case 96:this.data.isTouched=1,super.ye(e);break;case 137:this.data.isTouched=0,super.ye(e);break;default:super.ye(e)}}}class RFIDBase extends PhidgetChannel{constructor(e){super(e),this.onTag=null,this.onTagLost=null,this.we=ChannelClass.RFID,this.name="RFID",this.data=this.Ut()}ye(e){switch(e.vpkt){case 41:this.data.antennaEnabled=e.entries[0].v,this.he("AntennaEnabled",e);break;case 103:break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{lastTagString:null,lastTagProtocol:0,antennaEnabled:2,tagPresent:2}}dt(){throw new PhidgetError(ErrorCode.UNEXPECTED)}async ut(){throw new PhidgetError(ErrorCode.UNEXPECTED)}fe(){return!0}lt(){}get antennaEnabled(){return this.getAntennaEnabled()}get tagPresent(){return this.getTagPresent()}getAntennaEnabled(){if(this.le(),2===this.data.antennaEnabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.antennaEnabled}async setAntennaEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,41)}getTagPresent(){if(this.le(),2===this.data.tagPresent)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.tagPresent}async write(e,t,r){this.le();const i=new BridgePacket;if(i.set({name:"0",type:"s",value:e}),!supportedRFIDProtocol(this.Z,t))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified RFIDProtocol is unsupported by this device.");if(i.set({name:"1",type:"d",value:t}),!1!==r&&!0!==r)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");i.set({name:"2",type:"d",value:r?1:0}),await i.send(this.Z,103)}}class RFID extends RFIDBase{constructor(e){super(e),this.st=new PhidgetLock,this.Kt={latestTagString:""}}dt(){super.dt(),this.Kt={latestTagString:""}}ye(e){switch(e.vpkt){case 92:{this.data.tagPresent=1;const t=e.getString(0),r=e.getNumber(1);if(this.ce&&this.onTag)try{this.onTag(t,r)}catch(e){logEventException(e)}this.data.lastTagString=t,this.data.lastTagProtocol=r;break}case 93:{this.data.tagPresent=0;const t=e.getString(0),r=e.getNumber(1);if(this.ce&&this.onTagLost)try{this.onTagLost(t,r)}catch(e){logEventException(e)}break}case 41:2===this.data.tagPresent&&(this.data.tagPresent=0),super.ye(e);break;default:super.ye(e)}}getLastTag(){if(this.le(),!this.data.lastTagString)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return{tagString:this.data.lastTagString,protocol:this.data.lastTagProtocol}}gt(e){this.Kt.latestTagString=e,this.Kt.resolveLatestTag&&this.Kt.resolveLatestTag(e)}async wt(e,t){await new promise(((r,i)=>{const a=setTimeout(i,t);this.Kt.resolveLatestTag=function(t){e&&e===t&&(clearTimeout(a),r())}}))}}class GenericBase extends PhidgetChannel{constructor(e){super(e),this.we=ChannelClass.GENERIC,this.name="Generic",this.data=this.Ut()}ye(e){throw e.vpkt,new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}Ut(){return{}}dt(){if(this.data=this.Ut(),483!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED)}async ut(){if(483!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED)}fe(){return!0}lt(){}}class Generic extends GenericBase{ye(e){e.vpkt,super.ye(e)}sendChannelPacket(e,t,r){throw new Error("Method not implemented.")}sendDevicePacket(e,t){throw new Error("Method not implemented.")}sendPacket(e){throw new Error("Method not implemented.")}}class GPSBase extends PhidgetChannel{constructor(e){super(e),this.onPositionChange=null,this.onHeadingChange=null,this.onPositionFixStateChange=null,this.we=ChannelClass.GPS,this.name="GPS",this.data=this.Ut()}ye(e){switch(e.vpkt){case 110:if(this.data.heading=e.entries[0].v,this.data.velocity=e.entries[1].v,this.ce&&this.onHeadingChange)try{this.onHeadingChange(this.data.heading,this.data.velocity)}catch(e){logEventException(e)}break;case 29:if(this.data.latitude=e.entries[0].v,this.data.longitude=e.entries[1].v,this.data.altitude=e.entries[2].v,this.ce&&this.onPositionChange)try{this.onPositionChange(this.data.latitude,this.data.longitude,this.data.altitude)}catch(e){logEventException(e)}break;case 30:if(this.data.positionFixState=e.entries[0].v,this.ce&&this.onPositionFixStateChange)try{this.onPositionFixStateChange(!!this.data.positionFixState)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{altitude:1e300,date:null,heading:1e300,latitude:1e300,longitude:1e300,NMEAData:null,positionFixState:2,time:null,velocity:1e300}}dt(){throw new PhidgetError(ErrorCode.UNEXPECTED)}async ut(){throw new PhidgetError(ErrorCode.UNEXPECTED)}fe(){return!!(1e300!=this.data.heading&&1e300!=this.data.velocity||this.Jt)&&(!!(1e300!=this.data.latitude&&1e300!=this.data.longitude&&1e300!=this.data.altitude||this.Zt)&&!(2==this.data.positionFixState&&!this.er))}lt(){if(1e300!=this.data.heading&&1e300!=this.data.velocity&&this.onHeadingChange)try{this.onHeadingChange(this.data.heading,this.data.velocity)}catch(e){logEventException(e)}if(1e300!=this.data.latitude&&1e300!=this.data.longitude&&1e300!=this.data.altitude&&this.onPositionChange)try{this.onPositionChange(this.data.latitude,this.data.longitude,this.data.altitude)}catch(e){logEventException(e)}if(2!=this.data.positionFixState&&this.onPositionFixStateChange)try{this.onPositionFixStateChange(!!this.data.positionFixState)}catch(e){logEventException(e)}}get altitude(){return this.getAltitude()}get date(){return this.getDate()}get dateAndTime(){return this.getDateAndTime()}get heading(){return this.getHeading()}get latitude(){return this.getLatitude()}get longitude(){return this.getLongitude()}get NMEAData(){return this.getNMEAData()}get positionFixState(){return this.getPositionFixState()}get time(){return this.getTime()}get velocity(){return this.getVelocity()}getAltitude(){if(this.le(),1e300===this.data.altitude)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.altitude}getDate(){if(this.le(),null===this.data.date)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.date}getHeading(){if(this.le(),1e300===this.data.heading)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.heading}getLatitude(){if(this.le(),1e300===this.data.latitude)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.latitude}getLongitude(){if(this.le(),1e300===this.data.longitude)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.longitude}getNMEAData(){if(this.le(),null===this.data.NMEAData)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.NMEAData}getPositionFixState(){if(this.le(),2===this.data.positionFixState)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.positionFixState}getTime(){if(this.le(),null===this.data.time)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.time}getVelocity(){if(this.le(),1e300===this.data.velocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.velocity}}function readGPGGA(e){return{latitude:e.getNumber("GPGGA.latitude"),longitude:e.getNumber("GPGGA.longitude"),fixQuality:e.getNumber("GPGGA.fixQuality"),numSatellites:e.getNumber("GPGGA.numSatellites"),horizontalDilution:e.getNumber("GPGGA.horizontalDilution"),altitude:e.getNumber("GPGGA.altitude"),heightOfGeoid:e.getNumber("GPGGA.heightOfGeoid")}}function readGPGSA(e){return{mode:String.fromCharCode(e.getNumber("GPGSA.mode")),fixType:e.getNumber("GPGSA.fixType"),satUsed:e.getArray("GPGSA.satUsed"),posnDilution:e.getNumber("GPGSA.posnDilution"),horizDilution:e.getNumber("GPGSA.horizDilution"),vertDilution:e.getNumber("GPGSA.vertDilution")}}function readGPRMC(e){return{status:String.fromCharCode(e.getNumber("GPRMC.status")),latitude:e.getNumber("GPRMC.latitude"),longitude:e.getNumber("GPRMC.longitude"),speedKnots:e.getNumber("GPRMC.speedKnots"),heading:e.getNumber("GPRMC.heading"),magneticVariation:e.getNumber("GPRMC.magneticVariation"),mode:String.fromCharCode(e.getNumber("GPRMC.mode"))}}function readGPVTG(e){return{trueHeading:e.getNumber("GPVTG.trueHeading"),magneticHeading:e.getNumber("GPVTG.magneticHeading"),speedKnots:e.getNumber("GPVTG.speedKnots"),speed:e.getNumber("GPVTG.speed"),mode:String.fromCharCode(e.getNumber("GPVTG.mode"))}}function readNMEAData(e){return{GGA:readGPGGA(e),GSA:readGPGSA(e),RMC:readGPRMC(e),VTG:readGPVTG(e)}}class GPS extends GPSBase{ye(e){switch(e.vpkt){case 9:this.data.NMEAData=readNMEAData(e);break;case 108:this.data.time={tm_ms:e.getNumber("GPSTime.tm_ms"),tm_sec:e.getNumber("GPSTime.tm_sec"),tm_min:e.getNumber("GPSTime.tm_min"),tm_hour:e.getNumber("GPSTime.tm_hour")};break;case 109:this.data.date={tm_mday:e.getNumber("GPSDate.tm_mday"),tm_mon:e.getNumber("GPSDate.tm_mon"),tm_year:e.getNumber("GPSDate.tm_year")};break;default:super.ye(e)}}getDateAndTime(){if(this.le(),null===this.data.time)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(null===this.data.date)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return new Date(Date.UTC(this.data.date.tm_year,this.data.date.tm_mon,this.data.date.tm_mday,this.data.time.tm_hour,this.data.time.tm_min,this.data.time.tm_sec,this.data.time.tm_ms))}}class GyroscopeBase extends PhidgetChannel{constructor(e){super(e),this.onAngularRateUpdate=null,this.we=ChannelClass.GYROSCOPE,this.name="Gyroscope",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 170:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;case 145:this.data.precision=e.entries[0].v,this.he("Precision",e);break;case 106:break;case 2:if(this.data.angularRate=e.entries[0].v,this.data.timestamp=e.entries[1].v,this.ce&&this.onAngularRateUpdate)try{this.onAngularRateUpdate(this.data.angularRate,this.data.timestamp)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxAngularRate:[1e300,1e300,1e300],minDataInterval:4294967295,minAngularRate:[1e300,1e300,1e300],angularRate:[1e300,1e300,1e300],axisCount:2147483647,timestamp:1e300,precision:2147483647,heatingEnabled:2}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 355:case 359:case 363:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minDataInterval=20,this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.axisCount=3,this.data.precision=SpatialPrecision.LOW;break;case 372:this.data.dataInterval=256,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=250,this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minDataInterval=4,this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.angularRate=this.Z.parent.data.angularRate[this.Z.index],this.data.axisCount=3,this.data.timestamp=this.Z.parent.data.timestamp[this.Z.index],this.data.precision=SpatialPrecision.HYBRID,this.data.heatingEnabled=0;break;case 377:this.data.dataInterval=250,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minDataInterval=1,this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.angularRate=this.Z.parent.data.angularRate[this.Z.index],this.data.axisCount=3,this.data.timestamp=this.Z.parent.data.timestamp[this.Z.index],this.data.precision=SpatialPrecision.HIGH,this.data.heatingEnabled=0;break;case 382:this.data.dataInterval=250,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minDataInterval=1,this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.axisCount=3,this.data.precision=SpatialPrecision.HIGH,this.data.heatingEnabled=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 355:case 359:case 363:case 372:case 377:case 382:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!((this.data.angularRate.includes(1e300)||1e300==this.data.timestamp)&&!this.tr)}lt(){if(!this.data.angularRate.includes(1e300)&&1e300!=this.data.timestamp&&this.onAngularRateUpdate)try{this.onAngularRateUpdate(this.data.angularRate,this.data.timestamp)}catch(e){logEventException(e)}}get angularRate(){return this.getAngularRate()}get minAngularRate(){return this.getMinAngularRate()}get maxAngularRate(){return this.getMaxAngularRate()}get axisCount(){return this.getAxisCount()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get heatingEnabled(){return this.getHeatingEnabled()}get precision(){return this.getPrecision()}get timestamp(){return this.getTimestamp()}getAngularRate(){if(this.le(),this.data.angularRate.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.angularRate}getMinAngularRate(){if(this.le(),this.data.minAngularRate.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAngularRate}getMaxAngularRate(){if(this.le(),this.data.maxAngularRate.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAngularRate}getAxisCount(){if(this.le(),2147483647===this.data.axisCount)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.axisCount}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getHeatingEnabled(){if(this.le(),2===this.data.heatingEnabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.heatingEnabled}async setHeatingEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,170)}getPrecision(){if(this.le(),2147483647===this.data.precision)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.precision}async setPrecision(e){this.le();const t=new BridgePacket;if(!supportedSpatialPrecision(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified SpatialPrecision is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,145)}getTimestamp(){if(this.le(),1e300===this.data.timestamp)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.timestamp}async zero(){this.le();const e=new BridgePacket;await e.send(this.Z,106)}}class Gyroscope extends GyroscopeBase{ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval"),this.he("DataRate");break;case 179:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;default:super.ye(e)}}Ee(e){if(e===ErrorEventCode.SATURATION)this.data.angularRate=[1e300,1e300,1e300],this.data.timestamp=1e300,this.tr=!0}}class MagnetometerBase extends PhidgetChannel{constructor(e){super(e),this.onMagneticFieldChange=null,this.we=ChannelClass.MAGNETOMETER,this.name="Magnetometer",this.data=this.Ut()}ye(e){switch(e.vpkt){case 50:case 35:case 37:break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 170:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;case 46:this.data.magneticFieldChangeTrigger=e.entries[0].v,this.he("MagneticFieldChangeTrigger",e);break;case 18:if(this.data.magneticField=e.entries[0].v,this.data.timestamp=e.entries[1].v,this.ce&&this.onMagneticFieldChange)try{this.onMagneticFieldChange(this.data.magneticField,this.data.timestamp)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxMagneticField:[1e300,1e300,1e300],maxMagneticFieldChangeTrigger:1e300,minDataInterval:4294967295,minMagneticField:[1e300,1e300,1e300],minMagneticFieldChangeTrigger:1e300,magneticField:[1e300,1e300,1e300],magneticFieldChangeTrigger:1e300,axisCount:2147483647,timestamp:1e300,heatingEnabled:2}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 356:case 360:case 364:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxMagneticField=[8,8,8],this.data.maxMagneticFieldChangeTrigger=8,this.data.minDataInterval=20,this.data.minMagneticField=[-8,-8,-8],this.data.minMagneticFieldChangeTrigger=0,this.data.magneticFieldChangeTrigger=0,this.data.axisCount=3;break;case 373:this.data.dataInterval=256,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=250,this.data.maxMagneticField=[50,50,50],this.data.maxMagneticFieldChangeTrigger=100,this.data.minDataInterval=4,this.data.minMagneticField=[-50,-50,-50],this.data.minMagneticFieldChangeTrigger=0,this.data.magneticField=this.Z.parent.data.magneticField[this.Z.index],this.data.magneticFieldChangeTrigger=0,this.data.axisCount=3,this.data.timestamp=this.Z.parent.data.timestamp[this.Z.index],this.data.heatingEnabled=0;break;case 378:this.data.dataInterval=250,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=100,this.data.maxMagneticField=[8,8,8],this.data.maxMagneticFieldChangeTrigger=16,this.data.minDataInterval=10,this.data.minMagneticField=[-8,-8,-8],this.data.minMagneticFieldChangeTrigger=0,this.data.magneticField=this.Z.parent.data.magneticField[this.Z.index],this.data.magneticFieldChangeTrigger=0,this.data.axisCount=3,this.data.timestamp=this.Z.parent.data.timestamp[this.Z.index],this.data.heatingEnabled=0;break;case 383:this.data.dataInterval=250,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=100,this.data.maxMagneticField=[8,8,8],this.data.maxMagneticFieldChangeTrigger=16,this.data.minDataInterval=10,this.data.minMagneticField=[-8,-8,-8],this.data.minMagneticFieldChangeTrigger=0,this.data.magneticFieldChangeTrigger=0,this.data.axisCount=3,this.data.heatingEnabled=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 356:case 360:case 364:case 373:case 378:case 383:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.magneticFieldChangeTrigger}),await e.send(this.Z,46);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!((this.data.magneticField.includes(1e300)||1e300==this.data.timestamp)&&!this.rr)}lt(){if(!this.data.magneticField.includes(1e300)&&1e300!=this.data.timestamp&&this.onMagneticFieldChange)try{this.onMagneticFieldChange(this.data.magneticField,this.data.timestamp)}catch(e){logEventException(e)}}get axisCount(){return this.getAxisCount()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get heatingEnabled(){return this.getHeatingEnabled()}get magneticField(){return this.getMagneticField()}get minMagneticField(){return this.getMinMagneticField()}get maxMagneticField(){return this.getMaxMagneticField()}get magneticFieldChangeTrigger(){return this.getMagneticFieldChangeTrigger()}get minMagneticFieldChangeTrigger(){return this.getMinMagneticFieldChangeTrigger()}get maxMagneticFieldChangeTrigger(){return this.getMaxMagneticFieldChangeTrigger()}get timestamp(){return this.getTimestamp()}getAxisCount(){if(this.le(),2147483647===this.data.axisCount)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.axisCount}async setCorrectionParameters(e,t,r,i,a,s,n,o,h,c,d,u,l){this.le();const g=new BridgePacket;g.set({name:"0",type:"g",value:e}),g.set({name:"1",type:"g",value:t}),g.set({name:"2",type:"g",value:r}),g.set({name:"3",type:"g",value:i}),g.set({name:"4",type:"g",value:a}),g.set({name:"5",type:"g",value:s}),g.set({name:"6",type:"g",value:n}),g.set({name:"7",type:"g",value:o}),g.set({name:"8",type:"g",value:h}),g.set({name:"9",type:"g",value:c}),g.set({name:"10",type:"g",value:d}),g.set({name:"11",type:"g",value:u}),g.set({name:"12",type:"g",value:l}),await g.send(this.Z,50)}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getHeatingEnabled(){if(this.le(),2===this.data.heatingEnabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.heatingEnabled}async setHeatingEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,170)}getMagneticField(){if(this.le(),this.data.magneticField.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.magneticField}getMinMagneticField(){if(this.le(),this.data.minMagneticField.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minMagneticField}getMaxMagneticField(){if(this.le(),this.data.maxMagneticField.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxMagneticField}getMagneticFieldChangeTrigger(){if(this.le(),1e300===this.data.magneticFieldChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.magneticFieldChangeTrigger}async setMagneticFieldChangeTrigger(e){if(this.le(),e<this.data.minMagneticFieldChangeTrigger||e>this.data.maxMagneticFieldChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minMagneticFieldChangeTrigger+" - "+this.data.maxMagneticFieldChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinMagneticFieldChangeTrigger(){if(this.le(),1e300===this.data.minMagneticFieldChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minMagneticFieldChangeTrigger}getMaxMagneticFieldChangeTrigger(){if(this.le(),1e300===this.data.maxMagneticFieldChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxMagneticFieldChangeTrigger}async resetCorrectionParameters(){this.le();const e=new BridgePacket;await e.send(this.Z,35)}async saveCorrectionParameters(){this.le();const e=new BridgePacket;await e.send(this.Z,37)}getTimestamp(){if(this.le(),1e300===this.data.timestamp)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.timestamp}}class Magnetometer extends MagnetometerBase{constructor(e){super(e),this.transactionLock=new PhidgetLock}ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval"),this.he("DataRate");break;case 179:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;default:super.ye(e)}}Ee(e){if(e===ErrorEventCode.SATURATION)this.data.magneticField=[1e300,1e300,1e300],this.data.timestamp=1e300,this.rr=!0}}class SpatialBase extends PhidgetChannel{constructor(e){super(e),this.onSpatialData=null,this.onAlgorithmData=null,this.we=ChannelClass.SPATIAL,this.name="Spatial",this.data=this.Ut()}ye(e){switch(e.vpkt){case 174:case 50:case 35:case 37:case 150:case 106:break;case 149:this.data.algorithm=e.entries[0].v,this.he("Algorithm",e);break;case 151:this.data.algorithmMagnetometerGain=e.entries[0].v,this.he("AlgorithmMagnetometerGain",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 170:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;case 145:this.data.precision=e.entries[0].v,this.he("Precision",e);break;case 89:if(this.ce&&this.onSpatialData)try{this.onSpatialData(e.entries[0].v,e.entries[1].v,e.entries[2].v,e.entries[3].v)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,precision:2147483647,algorithm:2147483647,algorithmMagnetometerGain:1e300,maxAcceleration:[1e300,1e300,1e300],minAcceleration:[1e300,1e300,1e300],maxAngularRate:[1e300,1e300,1e300],minAngularRate:[1e300,1e300,1e300],maxMagneticField:[1e300,1e300,1e300],minMagneticField:[1e300,1e300,1e300],heatingEnabled:2,quaternion:null,eulerAngles:null}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 357:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataInterval=20,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.precision=SpatialPrecision.LOW,this.data.algorithm=SpatialAlgorithm.NONE,this.data.maxAcceleration=[8,8,8],this.data.minAcceleration=[-8,-8,-8],this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.maxMagneticField=[8,8,8],this.data.minMagneticField=[-8,-8,-8];break;case 361:case 365:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataInterval=20,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.precision=SpatialPrecision.LOW,this.data.algorithm=SpatialAlgorithm.AHRS,this.data.algorithmMagnetometerGain=.005,this.data.maxAcceleration=[8,8,8],this.data.minAcceleration=[-8,-8,-8],this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.maxMagneticField=[8,8,8],this.data.minMagneticField=[-8,-8,-8];break;case 374:this.data.dataInterval=256,this.data.maxDataInterval=1e3,this.data.minDataInterval=4,this.data.minDataRate=1,this.data.maxDataRate=250,this.data.precision=SpatialPrecision.HYBRID,this.data.algorithm=SpatialAlgorithm.AHRS,this.data.algorithmMagnetometerGain=.005,this.data.maxAcceleration=[8,8,8],this.data.minAcceleration=[-8,-8,-8],this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.maxMagneticField=[50,50,50],this.data.minMagneticField=[-50,-50,-50],this.data.heatingEnabled=0,this.data.quaternion=this.Z.parent.data.quaternion[this.Z.index];break;case 379:this.data.dataInterval=250,this.data.maxDataInterval=1e3,this.data.minDataInterval=1,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.precision=SpatialPrecision.HIGH,this.data.algorithm=SpatialAlgorithm.AHRS,this.data.maxAcceleration=[16,16,16],this.data.minAcceleration=[-16,-16,-16],this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.maxMagneticField=[8,8,8],this.data.minMagneticField=[-8,-8,-8],this.data.heatingEnabled=0,this.data.quaternion=this.Z.parent.data.quaternion[this.Z.index];break;case 384:this.data.dataInterval=250,this.data.maxDataInterval=1e3,this.data.minDataInterval=2,this.data.minDataRate=1,this.data.maxDataRate=500,this.data.precision=SpatialPrecision.HIGH,this.data.algorithm=SpatialAlgorithm.AHRS,this.data.maxAcceleration=[16,16,16],this.data.minAcceleration=[-16,-16,-16],this.data.maxAngularRate=[2e3,2e3,2e3],this.data.minAngularRate=[-2e3,-2e3,-2e3],this.data.maxMagneticField=[8,8,8],this.data.minMagneticField=[-8,-8,-8],this.data.heatingEnabled=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 357:case 379:case 384:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54);break;case 361:case 365:case 374:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.algorithmMagnetometerGain}),await e.send(this.Z,151);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get minAcceleration(){return this.getMinAcceleration()}get maxAcceleration(){return this.getMaxAcceleration()}get algorithm(){return this.getAlgorithm()}get algorithmMagnetometerGain(){return this.getAlgorithmMagnetometerGain()}get minAngularRate(){return this.getMinAngularRate()}get maxAngularRate(){return this.getMaxAngularRate()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get eulerAngles(){return this.getEulerAngles()}get heatingEnabled(){return this.getHeatingEnabled()}get minMagneticField(){return this.getMinMagneticField()}get maxMagneticField(){return this.getMaxMagneticField()}get precision(){return this.getPrecision()}get quaternion(){return this.getQuaternion()}getMinAcceleration(){if(this.le(),this.data.minAcceleration.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAcceleration}getMaxAcceleration(){if(this.le(),this.data.maxAcceleration.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAcceleration}async setAHRSParameters(e,t,r,i,a,s){this.le();const n=new BridgePacket;n.set({name:"0",type:"g",value:e}),n.set({name:"1",type:"g",value:t}),n.set({name:"2",type:"g",value:r}),n.set({name:"3",type:"g",value:i}),n.set({name:"4",type:"g",value:a}),n.set({name:"5",type:"g",value:s}),await n.send(this.Z,174)}getAlgorithm(){if(this.le(),2147483647===this.data.algorithm)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.algorithm}async setAlgorithm(e){this.le();const t=new BridgePacket;if(!supportedSpatialAlgorithm(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified SpatialAlgorithm is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,149)}getAlgorithmMagnetometerGain(){if(this.le(),1e300===this.data.algorithmMagnetometerGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.algorithmMagnetometerGain}async setAlgorithmMagnetometerGain(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,151)}getMinAngularRate(){if(this.le(),this.data.minAngularRate.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAngularRate}getMaxAngularRate(){if(this.le(),this.data.maxAngularRate.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAngularRate}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getHeatingEnabled(){if(this.le(),2===this.data.heatingEnabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.heatingEnabled}async setHeatingEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,170)}getMinMagneticField(){if(this.le(),this.data.minMagneticField.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minMagneticField}getMaxMagneticField(){if(this.le(),this.data.maxMagneticField.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxMagneticField}async setMagnetometerCorrectionParameters(e,t,r,i,a,s,n,o,h,c,d,u,l){this.le();const g=new BridgePacket;g.set({name:"0",type:"g",value:e}),g.set({name:"1",type:"g",value:t}),g.set({name:"2",type:"g",value:r}),g.set({name:"3",type:"g",value:i}),g.set({name:"4",type:"g",value:a}),g.set({name:"5",type:"g",value:s}),g.set({name:"6",type:"g",value:n}),g.set({name:"7",type:"g",value:o}),g.set({name:"8",type:"g",value:h}),g.set({name:"9",type:"g",value:c}),g.set({name:"10",type:"g",value:d}),g.set({name:"11",type:"g",value:u}),g.set({name:"12",type:"g",value:l}),await g.send(this.Z,50)}getPrecision(){if(this.le(),2147483647===this.data.precision)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.precision}async setPrecision(e){this.le();const t=new BridgePacket;if(!supportedSpatialPrecision(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified SpatialPrecision is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,145)}async resetMagnetometerCorrectionParameters(){this.le();const e=new BridgePacket;await e.send(this.Z,35)}async saveMagnetometerCorrectionParameters(){this.le();const e=new BridgePacket;await e.send(this.Z,37)}async zeroAlgorithm(){this.le();const e=new BridgePacket;await e.send(this.Z,150)}async zeroGyro(){this.le();const e=new BridgePacket;await e.send(this.Z,106)}}class Spatial extends SpatialBase{constructor(e){super(e),this.st=new PhidgetLock}ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval"),this.he("DataRate");break;case 148:{const t=e.getArray(0),r=e.getNumber(1);if(this.data.quaternion={x:t[0],y:t[1],z:t[2],w:t[3]},this.ce&&this.onAlgorithmData)try{this.onAlgorithmData(t,r)}catch(e){logEventException(e)}break}case 179:this.data.heatingEnabled=e.entries[0].v,this.he("HeatingEnabled",e);break;default:super.ye(e)}}fe(){return null!==this.data.quaternion}getQuaternion(){if(this.le(),null===this.data.quaternion)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.quaternion}getEulerAngles(){if(this.le(),null===this.data.quaternion)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);const e=Math.atan2(2*(this.data.quaternion.x*this.data.quaternion.w+this.data.quaternion.y*this.data.quaternion.z),1-2*(this.data.quaternion.x*this.data.quaternion.x+this.data.quaternion.y*this.data.quaternion.y)),t=Math.asin(2*(this.data.quaternion.w*this.data.quaternion.y-this.data.quaternion.z*this.data.quaternion.x));return{heading:180*Math.atan2(2*(this.data.quaternion.w*this.data.quaternion.z+this.data.quaternion.x*this.data.quaternion.y),1-2*(this.data.quaternion.y*this.data.quaternion.y+this.data.quaternion.z*this.data.quaternion.z))/Math.PI,pitch:180*t/Math.PI,roll:180*e/Math.PI}}}class TemperatureSensorBase extends PhidgetChannel{constructor(e){super(e),this.onTemperatureChange=null,this.we=ChannelClass.TEMPERATURE_SENSOR,this.name="TemperatureSensor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 76:this.data.RTDType=e.entries[0].v,this.he("RTDType",e);break;case 77:this.data.RTDWireSetup=e.entries[0].v,this.he("RTDWireSetup",e);break;case 46:this.data.temperatureChangeTrigger=e.entries[0].v,this.he("TemperatureChangeTrigger",e);break;case 84:this.data.thermocoupleType=e.entries[0].v,this.he("ThermocoupleType",e);break;case 95:if(this.data.temperature=e.entries[0].v,this.ce&&this.onTemperatureChange)try{this.onTemperatureChange(this.data.temperature)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxTemperature:1e300,maxTemperatureChangeTrigger:1e300,minDataInterval:4294967295,minTemperature:1e300,minTemperatureChangeTrigger:1e300,temperature:1e300,temperatureChangeTrigger:1e300,RTDType:2147483647,RTDWireSetup:2147483647,thermocoupleType:2147483647}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 109:this.data.dataInterval=256,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=31.25,this.data.maxTemperature=this.Z.parent.data.maxTemperature[this.Z.index],this.data.maxTemperatureChangeTrigger=1e3,this.data.minDataInterval=32,this.data.minTemperature=this.Z.parent.data.minTemperature[this.Z.index],this.data.minTemperatureChangeTrigger=0,this.data.temperature=this.Z.parent.data.temperature[this.Z.index],this.data.temperatureChangeTrigger=0,this.data.thermocoupleType=ThermocoupleType.K;break;case 110:this.data.dataInterval=256,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=31.25,this.data.maxTemperature=150,this.data.maxTemperatureChangeTrigger=100,this.data.minDataInterval=32,this.data.minTemperature=-55,this.data.minTemperatureChangeTrigger=0,this.data.temperature=this.Z.parent.data.temperature[this.Z.index],this.data.temperatureChangeTrigger=0;break;case 252:case 257:case 263:this.data.dataInterval=500,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=2,this.data.maxTemperature=125,this.data.maxTemperatureChangeTrigger=165,this.data.minDataInterval=500,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0;break;case 303:case 306:case 402:case 405:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.maxTemperature=125,this.data.maxTemperatureChangeTrigger=165,this.data.minDataInterval=100,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0;break;case 343:case 422:this.data.dataInterval=500,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=2,this.data.maxTemperature=85,this.data.maxTemperatureChangeTrigger=125,this.data.minDataInterval=500,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0;break;case 345:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=20,this.data.maxTemperature=85,this.data.maxTemperatureChangeTrigger=125,this.data.minDataInterval=50,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0;break;case 375:this.data.dataInterval=256,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=250,this.data.maxTemperature=85,this.data.maxTemperatureChangeTrigger=125,this.data.minDataInterval=4,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperature=this.Z.parent.data.temperature[this.Z.index],this.data.temperatureChangeTrigger=0;break;case 380:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=100,this.data.maxTemperature=85,this.data.maxTemperatureChangeTrigger=125,this.data.minDataInterval=10,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperature=this.Z.parent.data.temperature[this.Z.index],this.data.temperatureChangeTrigger=0;break;case 385:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=100,this.data.maxTemperature=85,this.data.maxTemperatureChangeTrigger=125,this.data.minDataInterval=10,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0;break;case 423:case 426:case 429:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxTemperature=1370,this.data.maxTemperatureChangeTrigger=1640,this.data.minDataInterval=20,this.data.minTemperature=-270,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0,this.data.thermocoupleType=ThermocoupleType.K;break;case 424:case 427:case 430:this.data.dataInterval=500,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=3.3333333333333335,this.data.maxTemperature=85,this.data.maxTemperatureChangeTrigger=125,this.data.minDataInterval=300,this.data.minTemperature=-40,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0;break;case 432:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=4,this.data.maxTemperature=850,this.data.maxTemperatureChangeTrigger=1050,this.data.minDataInterval=250,this.data.minTemperature=-200,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0,this.data.RTDType=RTDType.PT1000_3850,this.data.RTDWireSetup=RTDWireSetup.WIRES_4;break;case 434:this.data.dataInterval=333,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=3.003003003003003,this.data.maxTemperature=850,this.data.maxTemperatureChangeTrigger=1050,this.data.minDataInterval=333,this.data.minTemperature=-200,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0,this.data.RTDType=RTDType.PT1000_3850,this.data.RTDWireSetup=RTDWireSetup.WIRES_4;break;case 436:this.data.dataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=20,this.data.maxTemperature=850,this.data.maxTemperatureChangeTrigger=1050,this.data.minDataInterval=50,this.data.minTemperature=-200,this.data.minTemperatureChangeTrigger=0,this.data.temperatureChangeTrigger=0,this.data.RTDType=RTDType.PT1000_3850,this.data.RTDWireSetup=RTDWireSetup.WIRES_4;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 109:case 423:case 426:case 429:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.temperatureChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.thermocoupleType}),await e.send(this.Z,84);break;case 110:case 303:case 306:case 343:case 345:case 375:case 380:case 385:case 402:case 405:case 424:case 427:case 430:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.temperatureChangeTrigger}),await e.send(this.Z,46);break;case 252:case 257:case 263:case 422:break;case 432:case 434:case 436:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.temperatureChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.RTDType}),await e.send(this.Z,76),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.RTDWireSetup}),await e.send(this.Z,77);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.temperature&&!this.ir)}lt(){if(1e300!=this.data.temperature&&this.onTemperatureChange)try{this.onTemperatureChange(this.data.temperature)}catch(e){logEventException(e)}}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get RTDType(){return this.getRTDType()}get RTDWireSetup(){return this.getRTDWireSetup()}get temperature(){return this.getTemperature()}get minTemperature(){return this.getMinTemperature()}get maxTemperature(){return this.getMaxTemperature()}get temperatureChangeTrigger(){return this.getTemperatureChangeTrigger()}get minTemperatureChangeTrigger(){return this.getMinTemperatureChangeTrigger()}get maxTemperatureChangeTrigger(){return this.getMaxTemperatureChangeTrigger()}get thermocoupleType(){return this.getThermocoupleType()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getRTDType(){if(this.le(),2147483647===this.data.RTDType)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.RTDType}async setRTDType(e){this.le();const t=new BridgePacket;if(!supportedRTDType(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified RTDType is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,76)}getRTDWireSetup(){if(this.le(),2147483647===this.data.RTDWireSetup)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.RTDWireSetup}async setRTDWireSetup(e){this.le();const t=new BridgePacket;if(!supportedRTDWireSetup(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified RTDWireSetup is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,77)}getTemperature(){if(this.le(),1e300===this.data.temperature||Number.isNaN(this.data.temperature))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.temperature>this.data.maxTemperature)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.temperature<this.data.minTemperature)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.temperature}getMinTemperature(){if(this.le(),1e300===this.data.minTemperature)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minTemperature}getMaxTemperature(){if(this.le(),1e300===this.data.maxTemperature)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxTemperature}getTemperatureChangeTrigger(){if(this.le(),1e300===this.data.temperatureChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.temperatureChangeTrigger}async setTemperatureChangeTrigger(e){if(this.le(),e<this.data.minTemperatureChangeTrigger||e>this.data.maxTemperatureChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minTemperatureChangeTrigger+" - "+this.data.maxTemperatureChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinTemperatureChangeTrigger(){if(this.le(),1e300===this.data.minTemperatureChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minTemperatureChangeTrigger}getMaxTemperatureChangeTrigger(){if(this.le(),1e300===this.data.maxTemperatureChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxTemperatureChangeTrigger}getThermocoupleType(){if(this.le(),2147483647===this.data.thermocoupleType)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.thermocoupleType}async setThermocoupleType(e){this.le();const t=new BridgePacket;if(!supportedThermocoupleType(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified ThermocoupleType is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,84)}}class TemperatureSensor extends TemperatureSensorBase{ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval"),this.he("DataRate");break;case 76:this.data.temperature=1e300,super.ye(e);break;case 84:switch(super.ye(e),this.data.temperature=1e300,this.data.thermocoupleType){case ThermocoupleType.J:this.data.minTemperature=0,this.data.maxTemperature=750;break;case ThermocoupleType.K:this.data.minTemperature=-200,this.data.maxTemperature=1250;break;case ThermocoupleType.E:this.data.minTemperature=-200,this.data.maxTemperature=900;break;case ThermocoupleType.T:this.data.minTemperature=-200,this.data.maxTemperature=350}this.he("MinTemperature",e),this.he("MaxTemperature",e);break;case 180:this.data.RTDWireSetup=e.entries[0].v,this.he("RTDWireSetup",e);break;default:super.ye(e)}}Ee(e){switch(e){case ErrorEventCode.SATURATION:case ErrorEventCode.OUT_OF_RANGE:this.data.temperature=1e300,this.ir=!0}}}class EncoderBase extends PhidgetChannel{constructor(e){super(e),this.onPositionChange=null,this.we=ChannelClass.ENCODER,this.name="Encoder",this.data=this.Ut()}ye(e){switch(e.vpkt){case 56:this.data.enabled=e.entries[0].v,this.he("Enabled",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 65:this.data.IOMode=e.entries[0].v,this.he("IOMode",e);break;case 46:this.data.positionChangeTrigger=e.entries[0].v,this.he("PositionChangeTrigger",e);break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxPositionChangeTrigger:4294967295,minPositionChangeTrigger:4294967295,position:0x8000000000000000,indexPosition:0x8000000000000000,positionChangeTrigger:4294967295,enabled:2,IOMode:2147483647}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 102:case 104:this.data.dataInterval=256,this.data.minDataInterval=8,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=125,this.data.maxPositionChangeTrigger=1e4,this.data.minPositionChangeTrigger=0,this.data.position=0,this.data.indexPosition=0,this.data.positionChangeTrigger=0,this.data.enabled=1;break;case 144:this.data.dataInterval=256,this.data.minDataInterval=8,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=125,this.data.maxPositionChangeTrigger=1e4,this.data.minPositionChangeTrigger=0,this.data.position=0,this.data.indexPosition=0,this.data.positionChangeTrigger=0,this.data.enabled=1,this.data.IOMode=EncoderIOMode.PUSH_PULL;break;case 250:case 255:case 261:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.maxPositionChangeTrigger=6e7,this.data.minPositionChangeTrigger=0,this.data.position=0,this.data.indexPosition=0,this.data.positionChangeTrigger=0,this.data.enabled=1,this.data.IOMode=EncoderIOMode.PUSH_PULL;break;case 289:case 292:case 295:case 298:this.data.dataInterval=250,this.data.minDataInterval=50,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=20,this.data.maxPositionChangeTrigger=6e7,this.data.minPositionChangeTrigger=0,this.data.position=0,this.data.indexPosition=0,this.data.positionChangeTrigger=0,this.data.enabled=1;break;case 333:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=50,this.data.maxPositionChangeTrigger=6e7,this.data.minPositionChangeTrigger=0,this.data.position=0,this.data.indexPosition=0,this.data.positionChangeTrigger=0,this.data.enabled=1,this.data.IOMode=EncoderIOMode.PUSH_PULL;break;case 334:this.data.dataInterval=10,this.data.minDataInterval=1,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=1e3,this.data.maxPositionChangeTrigger=6e7,this.data.minPositionChangeTrigger=0,this.data.position=0,this.data.indexPosition=0,this.data.positionChangeTrigger=0,this.data.enabled=1;break;case 335:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=1e3,this.data.minDataRate=1,this.data.maxDataRate=50,this.data.maxPositionChangeTrigger=6e7,this.data.minPositionChangeTrigger=0,this.data.position=0,this.data.positionChangeTrigger=0,this.data.enabled=1;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 102:case 104:case 334:case 335:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"u",value:this.data.positionChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.enabled}),await e.send(this.Z,56);break;case 144:case 333:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"u",value:this.data.positionChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.enabled}),await e.send(this.Z,56),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.IOMode}),await e.send(this.Z,65);break;case 250:case 255:case 261:break;case 289:case 292:case 295:case 298:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"u",value:this.data.positionChangeTrigger}),await e.send(this.Z,46);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get enabled(){return this.getEnabled()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get indexPosition(){return this.getIndexPosition()}get IOMode(){return this.getIOMode()}get position(){return this.getPosition()}set position(e){this.setPosition(e)}get positionChangeTrigger(){return this.getPositionChangeTrigger()}get minPositionChangeTrigger(){return this.getMinPositionChangeTrigger()}get maxPositionChangeTrigger(){return this.getMaxPositionChangeTrigger()}async setEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,56)}getEnabled(){if(this.le(),2===this.data.enabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.enabled}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getIndexPosition(){if(this.le(),0x8000000000000000===this.data.indexPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.indexPosition}getIOMode(){if(this.le(),2147483647===this.data.IOMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.IOMode}async setIOMode(e){this.le();const t=new BridgePacket;if(!supportedEncoderIOMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified EncoderIOMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,65)}getPosition(){if(this.le(),0x8000000000000000===this.data.position)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.position}getPositionChangeTrigger(){if(this.le(),4294967295===this.data.positionChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.positionChangeTrigger}async setPositionChangeTrigger(e){if(this.le(),e<this.data.minPositionChangeTrigger||e>this.data.maxPositionChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minPositionChangeTrigger+" - "+this.data.maxPositionChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,46)}getMinPositionChangeTrigger(){if(this.le(),4294967295===this.data.minPositionChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPositionChangeTrigger}getMaxPositionChangeTrigger(){if(this.le(),4294967295===this.data.maxPositionChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPositionChangeTrigger}}class Encoder extends EncoderBase{ye(e){switch(e.vpkt){case 10:e.entryCount>1?this.data.dataInterval=e.getNumber(1):this.data.dataInterval=e.getNumber(0),this.he("DataInterval"),this.he("DataRate");break;case 29:{const t=e.getNumber(0),r=e.getNumber(1),i=e.getBoolean(2);let a=0;if(i&&(a=e.getNumber(3),this.data.indexPosition=this.data.position+a),this.data.position+=t,this.ce&&this.onPositionChange)try{this.onPositionChange(t,r,i)}catch(e){logEventException(e)}break}default:super.ye(e)}}setPosition(e){this.le(),0x8000000000000000!=this.data.indexPosition&&(this.data.indexPosition+=e-this.data.position),this.data.position=e}}class FrequencyCounterBase extends PhidgetChannel{constructor(e){super(e),this.onFrequencyChange=null,this.onCountChange=null,this.we=ChannelClass.FREQUENCY_COUNTER,this.name="FrequencyCounter",this.data=this.Ut()}ye(e){switch(e.vpkt){case 56:this.data.enabled=e.entries[0].v,this.he("Enabled",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 59:this.data.filterType=e.entries[0].v,this.he("FilterType",e);break;case 64:this.data.inputMode=e.entries[0].v,this.he("InputMode",e);break;case 74:this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);break;case 7:if(this.ce&&this.onCountChange)try{this.onCountChange(e.entries[0].v,e.entries[1].v)}catch(e){logEventException(e)}break;case 20:if(this.data.frequency=e.entries[0].v,this.ce&&this.onFrequencyChange)try{this.onFrequencyChange(this.data.frequency)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{totalTicksSinceLastCount:0,frequencyPrecision:0,dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxFrequency:1e300,maxFrequencyCutoff:1e300,minFrequencyCutoff:1e300,count:0x10000000000000000,timeElapsed:1e300,frequencyCutoff:1e300,frequency:1e300,filterType:2147483647,powerSupply:2147483647,inputMode:2147483647,enabled:2}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 241:case 245:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxFrequency=1e6,this.data.maxFrequencyCutoff=10,this.data.minFrequencyCutoff=.01,this.data.count=0,this.data.timeElapsed=0,this.data.frequencyCutoff=1,this.data.frequency=0,this.data.filterType=FrequencyFilterType.LOGIC_LEVEL,this.data.powerSupply=PowerSupply.VOLTS_12,this.data.inputMode=InputMode.NPN,this.data.enabled=1;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 241:case 245:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.powerSupply}),await e.send(this.Z,74),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.inputMode}),await e.send(this.Z,64);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.frequency&&!this.ar)}lt(){if(1e300!=this.data.frequency&&this.onFrequencyChange)try{this.onFrequencyChange(this.data.frequency)}catch(e){logEventException(e)}}get count(){return this.getCount()}get enabled(){return this.getEnabled()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get filterType(){return this.getFilterType()}get frequency(){return this.getFrequency()}get maxFrequency(){return this.getMaxFrequency()}get frequencyCutoff(){return this.getFrequencyCutoff()}set frequencyCutoff(e){this.setFrequencyCutoff(e)}get minFrequencyCutoff(){return this.getMinFrequencyCutoff()}get maxFrequencyCutoff(){return this.getMaxFrequencyCutoff()}get inputMode(){return this.getInputMode()}get powerSupply(){return this.getPowerSupply()}get timeElapsed(){return this.getTimeElapsed()}getCount(){if(this.le(),0x10000000000000000===this.data.count)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.count}async setEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,56)}getEnabled(){if(this.le(),2===this.data.enabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.enabled}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getFilterType(){if(this.le(),2147483647===this.data.filterType)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.filterType}async setFilterType(e){this.le();const t=new BridgePacket;if(!supportedFrequencyFilterType(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified FrequencyFilterType is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,59)}getFrequency(){if(this.le(),1e300===this.data.frequency||Number.isNaN(this.data.frequency))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.frequency>this.data.maxFrequency)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);return this.data.frequency}getMaxFrequency(){if(this.le(),1e300===this.data.maxFrequency)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFrequency}getFrequencyCutoff(){if(this.le(),1e300===this.data.frequencyCutoff)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.frequencyCutoff}getMinFrequencyCutoff(){if(this.le(),1e300===this.data.minFrequencyCutoff)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFrequencyCutoff}getMaxFrequencyCutoff(){if(this.le(),1e300===this.data.maxFrequencyCutoff)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFrequencyCutoff}getInputMode(){if(this.le(),2147483647===this.data.inputMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.inputMode}async setInputMode(e){this.le();const t=new BridgePacket;if(!supportedInputMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified InputMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,64)}getPowerSupply(){if(this.le(),2147483647===this.data.powerSupply)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.powerSupply}async setPowerSupply(e){this.le();const t=new BridgePacket;if(!supportedPowerSupply(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified PowerSupply is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,74)}getTimeElapsed(){if(this.le(),1e300===this.data.timeElapsed)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.timeElapsed}}class FrequencyCounter extends FrequencyCounterBase{ye(e){switch(e.vpkt){case 21:{const t=e.getNumber(0),r=e.getNumber(1),i=e.getNumber(2);let a,s,n;if(this.data.timeElapsed+=t,this.data.count+=r,0==r){if(Number.isNaN(this.data.totalTicksSinceLastCount))return;if(this.data.totalTicksSinceLastCount+=t,a=Math.round(1e3/this.data.frequencyCutoff),this.data.totalTicksSinceLastCount>a){if(this.data.frequency=0,this.ce&&this.onCountChange)try{this.onCountChange(0,this.data.totalTicksSinceLastCount)}catch(e){logEventException(e)}if(this.ce&&this.onFrequencyChange)try{this.onFrequencyChange(this.data.frequency)}catch(e){logEventException(e)}this.data.totalTicksSinceLastCount=Number.NaN}return}if(Number.isNaN(this.data.totalTicksSinceLastCount))return void(this.data.totalTicksSinceLastCount=t-i);const o=this.data.totalTicksSinceLastCount+i;for(this.data.totalTicksSinceLastCount=t-i,n=this.data.frequencyCutoff,s=2;n<1;)s++,n*=10;if(this.data.frequency=RoundDouble(r/(o/1e3),s),this.ce&&this.onCountChange)try{this.onCountChange(r,o)}catch(e){logEventException(e)}if(this.ce&&this.onFrequencyChange)try{this.onFrequencyChange(this.data.frequency)}catch(e){logEventException(e)}break}case 56:e.getBoolean(0)||(this.data.frequency=1e300),super.ye(e);break;case 181:this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);break;case 182:this.data.inputMode=e.entries[0].v,this.he("InputMode",e);break;default:super.ye(e)}}setFrequencyCutoff(e){if(this.le(),e<this.data.minFrequencyCutoff||e>this.data.maxFrequencyCutoff)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minFrequencyCutoff+" - "+this.data.maxFrequencyCutoff+".");this.data.frequencyCutoff=e}reset(){this.le(),this.data.count=0,this.data.timeElapsed=0,this.data.frequency=1e300}}class IRBase extends PhidgetChannel{constructor(e){super(e),this.onCode=null,this.onLearn=null,this.onRawData=null,this.we=ChannelClass.IR,this.name="IR",this.data=this.Ut()}static get RAW_DATA_LONG_SPACE(){return 4294967295}static get MAX_CODE_BIT_COUNT(){return 128}static get MAX_CODE_STRING_LENGTH(){return 33}ye(e){switch(e.vpkt){case 97:case 98:case 99:break;case 32:if(this.ce&&this.onRawData)try{this.onRawData(e.entries[0].v)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{lastCodeInfo:null,lastLearnedCodeInfo:null,lastCodeStr:null,lastCodeBitCount:0,lastLearnedCodeStr:null}}dt(){if(this.data=this.Ut(),134!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED)}async ut(){if(134!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED)}fe(){return!0}lt(){}async transmitRepeat(){this.le();const e=new BridgePacket;await e.send(this.Z,99)}}class IR extends IRBase{ye(e){switch(e.vpkt){case 33:if(this.ce&&this.onCode)try{this.onCode(this.data.lastCodeStr,this.data.lastCodeBitCount,!0)}catch(e){logEventException(e)}break;case 5:if(this.data.lastCodeStr=e.getString(0),this.data.lastCodeBitCount=e.getNumber(1),this.ce&&this.onCode)try{this.onCode(this.data.lastCodeStr,this.data.lastCodeBitCount,e.getBoolean(2))}catch(e){logEventException(e)}break;case 25:{const t=String.fromCharCode(...e.getArray("CodeInfo.toggleMask")).replace(/\u0000/g,""),r=e.getArray("CodeInfo.repeat");for(;0===r[r.length-1];)r.pop();if(this.data.lastLearnedCodeStr=e.getString("0"),this.data.lastLearnedCodeInfo={bitCount:e.getNumber("CodeInfo.bitCount"),encoding:e.getNumber("CodeInfo.encoding"),length:e.getNumber("CodeInfo.length"),gap:e.getNumber("CodeInfo.gap"),trail:e.getNumber("CodeInfo.trail"),header:e.getArray("CodeInfo.header"),one:e.getArray("CodeInfo.one"),zero:e.getArray("CodeInfo.zero"),repeat:r,minRepeat:e.getNumber("CodeInfo.minRepeat"),dutyCycle:e.getNumber("CodeInfo.dutyCycle"),carrierFrequency:e.getNumber("CodeInfo.carrierFrequency"),toggleMask:t},this.ce&&this.onLearn)try{this.onLearn(this.data.lastLearnedCodeStr,this.data.lastLearnedCodeInfo)}catch(e){logEventException(e)}break}default:super.ye(e)}}async transmit(e,t){this.le();const r={bitCount:0,encoding:IRCodeEncoding.SPACE,length:IRCodeLength.CONSTANT,gap:0,trail:0,minRepeat:0,dutyCycle:0,carrierFrequency:0,header:[0,0],one:[0,0],zero:[0,0],repeat:[],toggleMask:""};if(void 0!==t.bitCount&&(r.bitCount=t.bitCount),void 0!==t.encoding&&(r.encoding=t.encoding),void 0!==t.length&&(r.length=t.length),void 0!==t.gap&&(r.gap=t.gap),void 0!==t.trail&&(r.trail=t.trail),void 0!==t.minRepeat&&(r.minRepeat=t.minRepeat),void 0!==t.dutyCycle&&(r.dutyCycle=t.dutyCycle),void 0!==t.carrierFrequency&&(r.carrierFrequency=t.carrierFrequency),void 0!==t.header){if(!Array.isArray(t.header))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - header must be Array");if(2!=t.header.length)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - header must have length 2");r.header=t.header}if(void 0!==t.one){if(!Array.isArray(t.one))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - one must be Array");if(2!=t.one.length)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - one must have length 2");r.one=t.one}if(void 0!==t.zero){if(!Array.isArray(t.zero))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - zero must be Array");if(2!=t.zero.length)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - zero must have length 2");r.zero=t.zero}const i=new Array(26).fill(0);if(void 0!==t.repeat){if(!Array.isArray(t.repeat))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - repeat must be Array");if(t.repeat.length>26)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - repeat must have length <= 26");for(let e=0;e<t.repeat.length;e++)i[e]=t.repeat[e]}const a=new Array(33).fill(0);if(void 0!==t.toggleMask){if("string"!=typeof t.toggleMask)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - toggleMask must be a string");if(t.toggleMask.length>33)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid value - toggleMask must have length <= 33");for(let e=0;e<t.toggleMask.length;e++)a[e]=t.toggleMask.charCodeAt(e)}const s=new BridgePacket;s.set({name:"code",type:"s",value:e}),s.set({name:"CodeInfo.bitCount",type:"u",value:r.bitCount}),s.set({name:"CodeInfo.encoding",type:"d",value:r.encoding}),s.set({name:"CodeInfo.length",type:"d",value:r.length}),s.set({name:"CodeInfo.gap",type:"u",value:r.gap}),s.set({name:"CodeInfo.trail",type:"u",value:r.trail}),s.set({name:"CodeInfo.header",type:"U",value:r.header}),s.set({name:"CodeInfo.one",type:"U",value:r.one}),s.set({name:"CodeInfo.zero",type:"U",value:r.zero}),s.set({name:"CodeInfo.repeat",type:"U",value:i}),s.set({name:"CodeInfo.minRepeat",type:"u",value:r.minRepeat}),s.set({name:"CodeInfo.dutyCycle",type:"g",value:r.dutyCycle}),s.set({name:"CodeInfo.carrierFrequency",type:"u",value:r.carrierFrequency}),s.set({name:"CodeInfo.toggleMask",type:"R",value:a}),await s.send(this.Z,97)}async transmitRaw(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;this.le();const a=new BridgePacket;a.set({name:"data",type:"U",value:e}),a.set({name:"carrierFrequency",type:"u",value:t}),a.set({name:"dutyCycle",type:"g",value:r}),a.set({name:"gap",type:"u",value:i}),await a.send(this.Z,98)}getLastCode(){if(this.le(),null==this.data.lastCodeStr)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return{code:this.data.lastCodeStr,bitCount:this.data.lastCodeBitCount}}getLastLearnedCode(){if(this.le(),null==this.data.lastLearnedCodeStr||null==this.data.lastLearnedCodeInfo)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return{code:this.data.lastLearnedCodeStr,codeInfo:this.data.lastLearnedCodeInfo}}}class PHSensorBase extends PhidgetChannel{constructor(e){super(e),this.onPHChange=null,this.we=ChannelClass.PH_SENSOR,this.name="PHSensor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 134:this.data.correctionTemperature=e.entries[0].v,this.he("CorrectionTemperature",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 46:this.data.PHChangeTrigger=e.entries[0].v,this.he("PHChangeTrigger",e);break;case 133:if(this.data.PH=e.entries[0].v,this.ce&&this.onPHChange)try{this.onPHChange(this.data.PH)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxPH:1e300,maxPHChangeTrigger:1e300,minDataInterval:4294967295,minPH:1e300,minPHChangeTrigger:1e300,PH:1e300,PHChangeTrigger:1e300,correctionTemperature:1e300,minCorrectionTemperature:1e300,maxCorrectionTemperature:1e300}}dt(){if(this.data=this.Ut(),201!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=20,this.data.maxPH=14,this.data.maxPHChangeTrigger=14,this.data.minDataInterval=50,this.data.minPH=0,this.data.minPHChangeTrigger=0,this.data.PHChangeTrigger=0,this.data.correctionTemperature=25,this.data.minCorrectionTemperature=0,this.data.maxCorrectionTemperature=100}async ut(){let e;if(201!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.PHChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.correctionTemperature}),await e.send(this.Z,134)}fe(){return!(1e300==this.data.PH&&!this.sr)}lt(){if(1e300!=this.data.PH&&this.onPHChange)try{this.onPHChange(this.data.PH)}catch(e){logEventException(e)}}get correctionTemperature(){return this.getCorrectionTemperature()}get minCorrectionTemperature(){return this.getMinCorrectionTemperature()}get maxCorrectionTemperature(){return this.getMaxCorrectionTemperature()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get PH(){return this.getPH()}get minPH(){return this.getMinPH()}get maxPH(){return this.getMaxPH()}get PHChangeTrigger(){return this.getPHChangeTrigger()}get minPHChangeTrigger(){return this.getMinPHChangeTrigger()}get maxPHChangeTrigger(){return this.getMaxPHChangeTrigger()}getCorrectionTemperature(){if(this.le(),1e300===this.data.correctionTemperature)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.correctionTemperature}async setCorrectionTemperature(e){if(this.le(),e<this.data.minCorrectionTemperature||e>this.data.maxCorrectionTemperature)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCorrectionTemperature+" - "+this.data.maxCorrectionTemperature+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,134)}getMinCorrectionTemperature(){if(this.le(),1e300===this.data.minCorrectionTemperature)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCorrectionTemperature}getMaxCorrectionTemperature(){if(this.le(),1e300===this.data.maxCorrectionTemperature)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCorrectionTemperature}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getPH(){if(this.le(),1e300===this.data.PH||Number.isNaN(this.data.PH))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.PH>this.data.maxPH)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.PH<this.data.minPH)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.PH}getMinPH(){if(this.le(),1e300===this.data.minPH)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPH}getMaxPH(){if(this.le(),1e300===this.data.maxPH)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPH}getPHChangeTrigger(){if(this.le(),1e300===this.data.PHChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.PHChangeTrigger}async setPHChangeTrigger(e){if(this.le(),e<this.data.minPHChangeTrigger||e>this.data.maxPHChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minPHChangeTrigger+" - "+this.data.maxPHChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinPHChangeTrigger(){if(this.le(),1e300===this.data.minPHChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPHChangeTrigger}getMaxPHChangeTrigger(){if(this.le(),1e300===this.data.maxPHChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPHChangeTrigger}}class PHSensor extends PHSensorBase{}class DCMotorBase extends PhidgetChannel{constructor(e){super(e),this.onBrakingStrengthChange=null,this.onVelocityUpdate=null,this.onBackEMFChange=null,this.we=ChannelClass.DC_MOTOR,this.name="DCMotor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 40:this.data.acceleration=e.entries[0].v,this.he("Acceleration",e);break;case 42:this.data.backEMFSensingState=e.entries[0].v,this.he("BackEMFSensingState",e);break;case 51:this.data.currentLimit=e.entries[0].v,this.he("CurrentLimit",e);break;case 119:this.data.currentRegulatorGain=e.entries[0].v,this.he("CurrentRegulatorGain",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 146:case 147:break;case 58:this.data.fanMode=e.entries[0].v,this.he("FanMode",e);break;case 44:this.data.targetBrakingStrength=e.entries[0].v,this.he("TargetBrakingStrength",e);break;case 55:this.data.targetVelocity=e.entries[0].v,this.he("TargetVelocity",e);break;case 3:if(this.data.backEMF=e.entries[0].v,this.ce&&this.onBackEMFChange)try{this.onBackEMFChange(this.data.backEMF)}catch(e){logEventException(e)}break;case 121:if(this.data.brakingStrength=e.entries[0].v,this.ce&&this.onBrakingStrengthChange)try{this.onBrakingStrengthChange(this.data.brakingStrength)}catch(e){logEventException(e)}break;case 16:if(this.data.velocity=e.entries[0].v,this.ce&&this.onVelocityUpdate)try{this.onVelocityUpdate(this.data.velocity)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,currentLimit:1e300,maxCurrentLimit:1e300,minCurrentLimit:1e300,currentRegulatorGain:1e300,maxCurrentRegulatorGain:1e300,minCurrentRegulatorGain:1e300,targetVelocity:1e300,maxVelocity:1e300,minVelocity:1e300,maxAcceleration:1e300,minAcceleration:1e300,acceleration:1e300,targetBrakingStrength:1e300,maxBrakingStrength:1e300,minBrakingStrength:1e300,backEMFSensingState:2,backEMF:1e300,fanMode:2147483647,velocity:1e300,brakingStrength:1e300,maxFailsafeTime:4294967295,minFailsafeTime:4294967295}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 249:case 254:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.currentLimit=2,this.data.maxCurrentLimit=25,this.data.minCurrentLimit=2,this.data.currentRegulatorGain=10,this.data.maxCurrentRegulatorGain=100,this.data.minCurrentRegulatorGain=1,this.data.targetVelocity=0,this.data.maxVelocity=1,this.data.minVelocity=0,this.data.maxAcceleration=100,this.data.minAcceleration=.1,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxBrakingStrength=1,this.data.minBrakingStrength=0,this.data.fanMode=FanMode.AUTO,this.data.velocity=0;break;case 260:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.currentLimit=2,this.data.maxCurrentLimit=25,this.data.minCurrentLimit=2,this.data.currentRegulatorGain=10,this.data.maxCurrentRegulatorGain=100,this.data.minCurrentRegulatorGain=1,this.data.targetVelocity=0,this.data.maxVelocity=1,this.data.minVelocity=0,this.data.maxAcceleration=100,this.data.minAcceleration=.1,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxBrakingStrength=1,this.data.minBrakingStrength=0,this.data.fanMode=FanMode.AUTO,this.data.velocity=0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 288:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.currentLimit=2,this.data.maxCurrentLimit=2,this.data.minCurrentLimit=0,this.data.targetVelocity=0,this.data.maxVelocity=1,this.data.minVelocity=0,this.data.maxAcceleration=100,this.data.minAcceleration=.1,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxBrakingStrength=1,this.data.minBrakingStrength=0,this.data.velocity=0;break;case 291:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.currentLimit=2,this.data.maxCurrentLimit=2,this.data.minCurrentLimit=0,this.data.targetVelocity=0,this.data.maxVelocity=1,this.data.minVelocity=0,this.data.maxAcceleration=100,this.data.minAcceleration=.1,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxBrakingStrength=1,this.data.minBrakingStrength=0,this.data.velocity=0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 294:case 300:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.currentLimit=2,this.data.maxCurrentLimit=4,this.data.minCurrentLimit=0,this.data.targetVelocity=0,this.data.maxVelocity=1,this.data.minVelocity=0,this.data.maxAcceleration=100,this.data.minAcceleration=.1,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxBrakingStrength=1,this.data.minBrakingStrength=0,this.data.velocity=0;break;case 297:case 301:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.currentLimit=2,this.data.maxCurrentLimit=4,this.data.minCurrentLimit=0,this.data.targetVelocity=0,this.data.maxVelocity=1,this.data.minVelocity=0,this.data.maxAcceleration=100,this.data.minAcceleration=.1,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxBrakingStrength=1,this.data.minBrakingStrength=0,this.data.velocity=0,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 249:case 254:case 260:e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.targetVelocity}),await e.send(this.Z,55);break;case 288:case 291:case 294:case 297:case 300:case 301:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.currentLimit}),await e.send(this.Z,51),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.targetVelocity}),await e.send(this.Z,55),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.acceleration}),await e.send(this.Z,40),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.targetBrakingStrength}),await e.send(this.Z,44);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.backEMF&&!this.nr)&&(!(1e300==this.data.brakingStrength&&!this.hr)&&!(1e300==this.data.velocity&&!this.cr))}lt(){if(1e300!=this.data.backEMF&&this.onBackEMFChange)try{this.onBackEMFChange(this.data.backEMF)}catch(e){logEventException(e)}if(1e300!=this.data.brakingStrength&&this.onBrakingStrengthChange)try{this.onBrakingStrengthChange(this.data.brakingStrength)}catch(e){logEventException(e)}if(1e300!=this.data.velocity&&this.onVelocityUpdate)try{this.onVelocityUpdate(this.data.velocity)}catch(e){logEventException(e)}}get acceleration(){return this.getAcceleration()}get minAcceleration(){return this.getMinAcceleration()}get maxAcceleration(){return this.getMaxAcceleration()}get backEMF(){return this.getBackEMF()}get backEMFSensingState(){return this.getBackEMFSensingState()}get brakingStrength(){return this.getBrakingStrength()}get minBrakingStrength(){return this.getMinBrakingStrength()}get maxBrakingStrength(){return this.getMaxBrakingStrength()}get currentLimit(){return this.getCurrentLimit()}get minCurrentLimit(){return this.getMinCurrentLimit()}get maxCurrentLimit(){return this.getMaxCurrentLimit()}get currentRegulatorGain(){return this.getCurrentRegulatorGain()}get minCurrentRegulatorGain(){return this.getMinCurrentRegulatorGain()}get maxCurrentRegulatorGain(){return this.getMaxCurrentRegulatorGain()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get fanMode(){return this.getFanMode()}get targetBrakingStrength(){return this.getTargetBrakingStrength()}get targetVelocity(){return this.getTargetVelocity()}get velocity(){return this.getVelocity()}get minVelocity(){return this.getMinVelocity()}get maxVelocity(){return this.getMaxVelocity()}getAcceleration(){if(this.le(),1e300===this.data.acceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.acceleration}async setAcceleration(e){if(this.le(),e<this.data.minAcceleration||e>this.data.maxAcceleration)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minAcceleration+" - "+this.data.maxAcceleration+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,40)}getMinAcceleration(){if(this.le(),1e300===this.data.minAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAcceleration}getMaxAcceleration(){if(this.le(),1e300===this.data.maxAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAcceleration}getBackEMF(){if(this.le(),1e300===this.data.backEMF)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.backEMF}getBackEMFSensingState(){if(this.le(),2===this.data.backEMFSensingState)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.backEMFSensingState}async setBackEMFSensingState(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,42)}getBrakingStrength(){if(this.le(),1e300===this.data.brakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.brakingStrength}getMinBrakingStrength(){if(this.le(),1e300===this.data.minBrakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minBrakingStrength}getMaxBrakingStrength(){if(this.le(),1e300===this.data.maxBrakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxBrakingStrength}getCurrentLimit(){if(this.le(),1e300===this.data.currentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.currentLimit}async setCurrentLimit(e){if(this.le(),e<this.data.minCurrentLimit||e>this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCurrentLimit+" - "+this.data.maxCurrentLimit+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,51)}getMinCurrentLimit(){if(this.le(),1e300===this.data.minCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrentLimit}getMaxCurrentLimit(){if(this.le(),1e300===this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrentLimit}getCurrentRegulatorGain(){if(this.le(),1e300===this.data.currentRegulatorGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.currentRegulatorGain}async setCurrentRegulatorGain(e){if(this.le(),e<this.data.minCurrentRegulatorGain||e>this.data.maxCurrentRegulatorGain)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCurrentRegulatorGain+" - "+this.data.maxCurrentRegulatorGain+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,119)}getMinCurrentRegulatorGain(){if(this.le(),1e300===this.data.minCurrentRegulatorGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrentRegulatorGain}getMaxCurrentRegulatorGain(){if(this.le(),1e300===this.data.maxCurrentRegulatorGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrentRegulatorGain}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}getFanMode(){if(this.le(),2147483647===this.data.fanMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.fanMode}async setFanMode(e){this.le();const t=new BridgePacket;if(!supportedFanMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified FanMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,58)}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}getTargetBrakingStrength(){if(this.le(),1e300===this.data.targetBrakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.targetBrakingStrength}async setTargetBrakingStrength(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,44)}getTargetVelocity(){if(this.le(),1e300===this.data.targetVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.targetVelocity}async setTargetVelocity(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,55)}getVelocity(){if(this.le(),1e300===this.data.velocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.velocity}getMinVelocity(){if(this.le(),1e300===this.data.minVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVelocity}getMaxVelocity(){if(this.le(),1e300===this.data.maxVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVelocity}}class DCMotor extends DCMotorBase{}class CurrentInputBase extends PhidgetChannel{constructor(e){super(e),this.onCurrentChange=null,this.we=ChannelClass.CURRENT_INPUT,this.name="CurrentInput",this.data=this.Ut()}ye(e){switch(e.vpkt){case 46:this.data.currentChangeTrigger=e.entries[0].v,this.he("CurrentChangeTrigger",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 74:this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);break;case 8:if(this.data.current=e.entries[0].v,this.ce&&this.onCurrentChange)try{this.onCurrentChange(this.data.current)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxCurrent:1e300,maxCurrentChangeTrigger:1e300,minCurrent:1e300,minCurrentChangeTrigger:1e300,current:1e300,currentChangeTrigger:1e300,powerSupply:2147483647}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 239:case 243:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxCurrent=.02,this.data.maxCurrentChangeTrigger=.016,this.data.minCurrent=5e-4,this.data.minCurrentChangeTrigger=0,this.data.currentChangeTrigger=0,this.data.powerSupply=PowerSupply.VOLTS_12;break;case 248:this.data.dataInterval=250,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.maxCurrent=30,this.data.maxCurrentChangeTrigger=60,this.data.minCurrent=-30,this.data.minCurrentChangeTrigger=0,this.data.currentChangeTrigger=0;break;case 253:case 258:case 264:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.maxCurrent=25,this.data.maxCurrentChangeTrigger=25,this.data.minCurrent=-25,this.data.minCurrentChangeTrigger=0,this.data.currentChangeTrigger=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 239:case 243:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.currentChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.powerSupply}),await e.send(this.Z,74);break;case 248:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.currentChangeTrigger}),await e.send(this.Z,46);break;case 253:case 258:case 264:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.current&&!this.dr)}lt(){if(1e300!=this.data.current&&this.onCurrentChange)try{this.onCurrentChange(this.data.current)}catch(e){logEventException(e)}}get current(){return this.getCurrent()}get minCurrent(){return this.getMinCurrent()}get maxCurrent(){return this.getMaxCurrent()}get currentChangeTrigger(){return this.getCurrentChangeTrigger()}get minCurrentChangeTrigger(){return this.getMinCurrentChangeTrigger()}get maxCurrentChangeTrigger(){return this.getMaxCurrentChangeTrigger()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get powerSupply(){return this.getPowerSupply()}getCurrent(){if(this.le(),1e300===this.data.current||Number.isNaN(this.data.current))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.current>this.data.maxCurrent)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.current<this.data.minCurrent)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.current}getMinCurrent(){if(this.le(),1e300===this.data.minCurrent)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrent}getMaxCurrent(){if(this.le(),1e300===this.data.maxCurrent)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrent}getCurrentChangeTrigger(){if(this.le(),1e300===this.data.currentChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.currentChangeTrigger}async setCurrentChangeTrigger(e){if(this.le(),e<this.data.minCurrentChangeTrigger||e>this.data.maxCurrentChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCurrentChangeTrigger+" - "+this.data.maxCurrentChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinCurrentChangeTrigger(){if(this.le(),1e300===this.data.minCurrentChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrentChangeTrigger}getMaxCurrentChangeTrigger(){if(this.le(),1e300===this.data.maxCurrentChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrentChangeTrigger}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getPowerSupply(){if(this.le(),2147483647===this.data.powerSupply)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.powerSupply}async setPowerSupply(e){this.le();const t=new BridgePacket;if(!supportedPowerSupply(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified PowerSupply is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,74)}}class CurrentInput extends CurrentInputBase{Ee(e){if(e===ErrorEventCode.SATURATION)this.data.current=1e300,this.dr=!0}ye(e){if(181===e.vpkt)this.data.powerSupply=e.entries[0].v,this.he("PowerSupply",e);else super.ye(e)}}class StepperBase extends PhidgetChannel{constructor(e){super(e),this.onPositionChange=null,this.onVelocityChange=null,this.onStopped=null,this.we=ChannelClass.STEPPER,this.name="Stepper",this.data=this.Ut()}ye(e){switch(e.vpkt){case 40:this.data.acceleration=e.entries[0].v,this.he("Acceleration",e);break;case 49:this.data.controlMode=e.entries[0].v,this.he("ControlMode",e);break;case 51:this.data.currentLimit=e.entries[0].v,this.he("CurrentLimit",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 57:this.data.engaged=e.entries[0].v,this.he("Engaged",e);break;case 146:case 147:break;case 63:this.data.holdingCurrentLimit=e.entries[0].v,this.he("HoldingCurrentLimit",e);break;case 83:this.data.targetPosition=e.entries[0].v,this.he("TargetPosition",e);break;case 85:this.data.velocityLimit=e.entries[0].v,this.he("VelocityLimit",e);break;case 91:if(this.ce&&this.onStopped)try{this.onStopped()}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{positionOffset:0,dataInterval:1e300,minDataRate:1e300,maxDataRate:1e300,holdingCurrentLimit:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,maxPosition:0x8000000000000000,maxVelocityLimit:1e300,maxAcceleration:1e300,maxCurrentLimit:1e300,minPosition:0x8000000000000000,minVelocityLimit:1e300,minAcceleration:1e300,minCurrentLimit:1e300,controlMode:2147483647,position:0x8000000000000000,targetPosition:0x8000000000000000,velocityLimit:1e300,velocity:1e300,acceleration:1e300,currentLimit:1e300,isMoving:2,engaged:2,rescaleFactor:1e300,maxFailsafeTime:4294967295,minFailsafeTime:4294967295}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 407:case 413:this.data.dataInterval=250,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.maxPosition=1e15,this.data.maxVelocityLimit=115e3,this.data.maxAcceleration=1e7,this.data.maxCurrentLimit=4,this.data.minPosition=-1e15,this.data.minVelocityLimit=0,this.data.minAcceleration=2,this.data.minCurrentLimit=0,this.data.controlMode=StepperControlMode.STEP,this.data.velocityLimit=1e4,this.data.acceleration=1e4,this.data.currentLimit=1,this.data.engaged=0,this.data.rescaleFactor=1;break;case 408:case 414:case 415:case 417:this.data.dataInterval=250,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.maxPosition=1e15,this.data.maxVelocityLimit=115e3,this.data.maxAcceleration=1e7,this.data.maxCurrentLimit=4,this.data.minPosition=-1e15,this.data.minVelocityLimit=0,this.data.minAcceleration=2,this.data.minCurrentLimit=0,this.data.controlMode=StepperControlMode.STEP,this.data.velocityLimit=1e4,this.data.acceleration=1e4,this.data.currentLimit=1,this.data.engaged=0,this.data.rescaleFactor=1,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 409:this.data.dataInterval=250,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.maxPosition=1e15,this.data.maxVelocityLimit=115e3,this.data.maxAcceleration=1e7,this.data.maxCurrentLimit=2.5,this.data.minPosition=-1e15,this.data.minVelocityLimit=0,this.data.minAcceleration=2,this.data.minCurrentLimit=0,this.data.controlMode=StepperControlMode.STEP,this.data.velocityLimit=1e4,this.data.acceleration=1e4,this.data.currentLimit=1,this.data.engaged=0,this.data.rescaleFactor=1;break;case 410:this.data.dataInterval=250,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.maxPosition=1e15,this.data.maxVelocityLimit=115e3,this.data.maxAcceleration=1e7,this.data.maxCurrentLimit=2.5,this.data.minPosition=-1e15,this.data.minVelocityLimit=0,this.data.minAcceleration=2,this.data.minCurrentLimit=0,this.data.controlMode=StepperControlMode.STEP,this.data.velocityLimit=1e4,this.data.acceleration=1e4,this.data.currentLimit=1,this.data.engaged=0,this.data.rescaleFactor=1,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 411:this.data.dataInterval=250,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.maxPosition=1e15,this.data.maxVelocityLimit=115e3,this.data.maxAcceleration=1e7,this.data.maxCurrentLimit=8,this.data.minPosition=-1e15,this.data.minVelocityLimit=0,this.data.minAcceleration=2,this.data.minCurrentLimit=0,this.data.controlMode=StepperControlMode.STEP,this.data.velocityLimit=1e4,this.data.acceleration=1e4,this.data.currentLimit=1,this.data.engaged=0,this.data.rescaleFactor=1;break;case 412:this.data.dataInterval=250,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.maxPosition=1e15,this.data.maxVelocityLimit=115e3,this.data.maxAcceleration=1e7,this.data.maxCurrentLimit=8,this.data.minPosition=-1e15,this.data.minVelocityLimit=0,this.data.minAcceleration=2,this.data.minCurrentLimit=0,this.data.controlMode=StepperControlMode.STEP,this.data.velocityLimit=1e4,this.data.acceleration=1e4,this.data.currentLimit=1,this.data.engaged=0,this.data.rescaleFactor=1,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 419:this.data.dataInterval=250,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=100,this.data.minDataInterval=10,this.data.maxDataInterval=6e4,this.data.maxPosition=1e15,this.data.maxVelocityLimit=115e3,this.data.maxAcceleration=1e7,this.data.maxCurrentLimit=4,this.data.minPosition=-1e15,this.data.minVelocityLimit=0,this.data.minAcceleration=2,this.data.minCurrentLimit=0,this.data.controlMode=StepperControlMode.STEP,this.data.velocityLimit=1e4,this.data.acceleration=1e4,this.data.currentLimit=1,this.data.engaged=0,this.data.rescaleFactor=1,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 407:case 408:case 409:case 410:case 411:case 412:case 413:case 414:case 415:case 417:case 419:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.controlMode}),await e.send(this.Z,49),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.velocityLimit}),await e.send(this.Z,85),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.acceleration}),await e.send(this.Z,40),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.currentLimit}),await e.send(this.Z,51);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get acceleration(){return this.getAcceleration()}get minAcceleration(){return this.getMinAcceleration()}get maxAcceleration(){return this.getMaxAcceleration()}get controlMode(){return this.getControlMode()}get currentLimit(){return this.getCurrentLimit()}get minCurrentLimit(){return this.getMinCurrentLimit()}get maxCurrentLimit(){return this.getMaxCurrentLimit()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get engaged(){return this.getEngaged()}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get holdingCurrentLimit(){return this.getHoldingCurrentLimit()}get isMoving(){return this.getIsMoving()}get position(){return this.getPosition()}get minPosition(){return this.getMinPosition()}get maxPosition(){return this.getMaxPosition()}get rescaleFactor(){return this.getRescaleFactor()}set rescaleFactor(e){this.setRescaleFactor(e)}get targetPosition(){return this.getTargetPosition()}get velocity(){return this.getVelocity()}get velocityLimit(){return this.getVelocityLimit()}get minVelocityLimit(){return this.getMinVelocityLimit()}get maxVelocityLimit(){return this.getMaxVelocityLimit()}getControlMode(){if(this.le(),2147483647===this.data.controlMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.controlMode}async setControlMode(e){this.le();const t=new BridgePacket;if(!supportedStepperControlMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified StepperControlMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,49)}getCurrentLimit(){if(this.le(),1e300===this.data.currentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.currentLimit}async setCurrentLimit(e){if(this.le(),e<this.data.minCurrentLimit||e>this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCurrentLimit+" - "+this.data.maxCurrentLimit+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,51)}getMinCurrentLimit(){if(this.le(),1e300===this.data.minCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrentLimit}getMaxCurrentLimit(){if(this.le(),1e300===this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrentLimit}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getEngaged(){if(this.le(),2===this.data.engaged)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.engaged}async setEngaged(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,57)}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}getHoldingCurrentLimit(){if(this.le(),1e300===this.data.holdingCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.holdingCurrentLimit}async setHoldingCurrentLimit(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,63)}getIsMoving(){if(this.le(),2===this.data.isMoving)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.isMoving}getRescaleFactor(){if(this.le(),1e300===this.data.rescaleFactor)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.rescaleFactor}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}}class Stepper extends StepperBase{ye(e){switch(e.vpkt){case 29:if(this.data.position=e.getNumber(0),this.ce&&this.onPositionChange)try{this.onPositionChange((this.data.position+this.data.positionOffset)*this.data.rescaleFactor)}catch(e){logEventException(e)}break;case 100:if(this.data.velocity=e.getNumber(0),this.ce&&this.onVelocityChange)try{this.onVelocityChange(this.data.velocity*this.data.rescaleFactor)}catch(e){logEventException(e)}break;case 49:switch(e.getNumber(0)){case StepperControlMode.STEP:this.data.minVelocityLimit=0;break;case StepperControlMode.RUN:this.data.minVelocityLimit=-this.data.maxVelocityLimit}super.ye(e);break;case 91:this.data.isMoving=0,super.ye(e);break;case 57:1==e.getBoolean(0)&&0!==this.data.velocityLimit&&this.data.position!==this.data.targetPosition&&(this.data.isMoving=1),super.ye(e);break;case 85:this.data.engaged&&0!==e.getNumber(0)&&this.data.position!==this.data.targetPosition&&(this.data.isMoving=1),super.ye(e);break;case 83:this.data.engaged&&0!==this.data.velocityLimit&&this.data.position!==e.getNumber(0)&&(this.data.isMoving=1),super.ye(e);break;default:super.ye(e)}}dt(){super.dt(),0x8000000000000000==this.data.position&&(this.data.position=0),1e300==this.data.velocity&&(this.data.velocity=0),2==this.data.isMoving&&(this.data.isMoving=0)}getAcceleration(){if(this.le(),1e300===this.data.acceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.acceleration*this.data.rescaleFactor}async setAcceleration(e){this.le();const t=e/this.data.rescaleFactor,r=new BridgePacket;r.set({name:"0",type:"g",value:t}),await r.send(this.Z,40)}getMinAcceleration(){if(this.le(),1e300===this.data.minAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAcceleration*this.data.rescaleFactor}getMaxAcceleration(){if(this.le(),1e300===this.data.maxAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAcceleration*this.data.rescaleFactor}getPosition(){if(this.le(),0x8000000000000000===this.data.position)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.position+this.data.positionOffset)*this.data.rescaleFactor}getMinPosition(){if(this.le(),0x8000000000000000===this.data.minPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.minPosition+this.data.positionOffset)*this.data.rescaleFactor}getMaxPosition(){if(this.le(),0x8000000000000000===this.data.maxPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.maxPosition+this.data.positionOffset)*this.data.rescaleFactor}setRescaleFactor(e){this.le(),this.data.rescaleFactor=e}getTargetPosition(){if(this.le(),0x8000000000000000===this.data.targetPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.targetPosition+this.data.positionOffset)*this.data.rescaleFactor}async setTargetPosition(e){this.le();const t=e/this.data.rescaleFactor-this.data.positionOffset;if(t<this.data.minPosition||t>this.data.maxPosition)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minPosition+" - "+this.maxPosition+".");const r=new BridgePacket;r.set({name:"0",type:"l",value:t}),await r.send(this.Z,83)}getVelocity(){if(this.le(),1e300===this.data.velocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.velocity*this.data.rescaleFactor}getVelocityLimit(){if(this.le(),1e300===this.data.velocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.velocityLimit*this.data.rescaleFactor}async setVelocityLimit(e){this.le();const t=e/this.data.rescaleFactor;if(t<this.data.minVelocityLimit||t>this.data.maxVelocityLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minVelocityLimit+" - "+this.maxVelocityLimit+".");const r=new BridgePacket;r.set({name:"0",type:"g",value:t}),await r.send(this.Z,85)}getMaxVelocityLimit(){if(this.le(),1e300===this.data.maxVelocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVelocityLimit*this.data.rescaleFactor}getMinVelocityLimit(){if(this.le(),1e300===this.data.minVelocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVelocityLimit*this.data.rescaleFactor}addPositionOffset(e){this.le(),this.data.positionOffset+=e/this.data.rescaleFactor}}class LCDBase extends PhidgetChannel{constructor(e){super(e),this.we=ChannelClass.LCD,this.name="LCD",this.data=this.Ut()}ye(e){switch(e.vpkt){case 43:this.data.backlight=e.entries[0].v,this.he("Backlight",e);break;case 47:case 4:case 6:case 13:case 14:case 15:case 19:case 24:case 38:case 104:case 105:break;case 48:this.data.contrast=e.entries[0].v,this.he("Contrast",e);break;case 52:this.data.cursorBlink=e.entries[0].v,this.he("CursorBlink",e);break;case 53:this.data.cursorOn=e.entries[0].v,this.he("CursorOn",e);break;case 62:this.data.frameBuffer=e.entries[0].v,this.he("FrameBuffer",e);break;case 78:this.data.screenSize=e.entries[0].v,this.he("ScreenSize",e);break;case 80:this.data.sleeping=e.entries[0].v,this.he("Sleeping",e);break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{fontWidth:[255,255,255],fontHeight:[255,255,255],backlight:1e300,minBacklight:1e300,maxBacklight:1e300,contrast:1e300,minContrast:1e300,maxContrast:1e300,cursorBlink:2,cursorOn:2,frameBuffer:2147483647,height:2147483647,width:2147483647,screenSize:2147483647,sleeping:2,autoFlush:2}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 346:this.data.backlight=0,this.data.minBacklight=0,this.data.maxBacklight=1,this.data.contrast=.25,this.data.minContrast=0,this.data.maxContrast=1,this.data.frameBuffer=0,this.data.height=64,this.data.width=128,this.data.screenSize=LCDScreenSize.DIMENSIONS_64X128,this.data.sleeping=1,this.data.autoFlush=0;break;case 347:this.data.backlight=0,this.data.minBacklight=0,this.data.maxBacklight=1,this.data.contrast=.55,this.data.minContrast=0,this.data.maxContrast=1,this.data.frameBuffer=0,this.data.height=64,this.data.width=128,this.data.screenSize=LCDScreenSize.DIMENSIONS_64X128,this.data.sleeping=1,this.data.autoFlush=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 346:case 347:e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.contrast}),await e.send(this.Z,48),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.frameBuffer}),await e.send(this.Z,62);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get autoFlush(){return this.getAutoFlush()}set autoFlush(e){this.setAutoFlush(e)}get backlight(){return this.getBacklight()}get minBacklight(){return this.getMinBacklight()}get maxBacklight(){return this.getMaxBacklight()}get contrast(){return this.getContrast()}get minContrast(){return this.getMinContrast()}get maxContrast(){return this.getMaxContrast()}get cursorBlink(){return this.getCursorBlink()}get cursorOn(){return this.getCursorOn()}get frameBuffer(){return this.getFrameBuffer()}get height(){return this.getHeight()}get screenSize(){return this.getScreenSize()}get sleeping(){return this.getSleeping()}get width(){return this.getWidth()}getAutoFlush(){if(this.le(),2===this.data.autoFlush)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.autoFlush}getBacklight(){if(this.le(),1e300===this.data.backlight)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.backlight}async setBacklight(e){if(this.le(),e<this.data.minBacklight||e>this.data.maxBacklight)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minBacklight+" - "+this.data.maxBacklight+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,43)}getMinBacklight(){if(this.le(),1e300===this.data.minBacklight)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minBacklight}getMaxBacklight(){if(this.le(),1e300===this.data.maxBacklight)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxBacklight}async clear(){this.le();const e=new BridgePacket;await e.send(this.Z,4)}getContrast(){if(this.le(),1e300===this.data.contrast)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.contrast}async setContrast(e){if(this.le(),e<this.data.minContrast||e>this.data.maxContrast)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minContrast+" - "+this.data.maxContrast+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,48)}getMinContrast(){if(this.le(),1e300===this.data.minContrast)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minContrast}getMaxContrast(){if(this.le(),1e300===this.data.maxContrast)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxContrast}async copy(e,t,r,i,a,s,n,o,h){this.le();const c=new BridgePacket;if(c.set({name:"0",type:"d",value:e}),c.set({name:"1",type:"d",value:t}),c.set({name:"2",type:"d",value:r}),c.set({name:"3",type:"d",value:i}),c.set({name:"4",type:"d",value:a}),c.set({name:"5",type:"d",value:s}),c.set({name:"6",type:"d",value:n}),c.set({name:"7",type:"d",value:o}),!1!==h&&!0!==h)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");c.set({name:"8",type:"d",value:h?1:0}),await c.send(this.Z,6)}getCursorBlink(){if(this.le(),2===this.data.cursorBlink)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.cursorBlink}async setCursorBlink(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,52)}getCursorOn(){if(this.le(),2===this.data.cursorOn)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.cursorOn}async setCursorOn(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,53)}async drawLine(e,t,r,i){this.le();const a=new BridgePacket;a.set({name:"0",type:"d",value:e}),a.set({name:"1",type:"d",value:t}),a.set({name:"2",type:"d",value:r}),a.set({name:"3",type:"d",value:i}),await a.send(this.Z,13)}async drawPixel(e,t,r){this.le();const i=new BridgePacket;if(i.set({name:"0",type:"d",value:e}),i.set({name:"1",type:"d",value:t}),!supportedLCDPixelState(this.Z,r))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified LCDPixelState is unsupported by this device.");i.set({name:"2",type:"d",value:r}),await i.send(this.Z,14)}async drawRect(e,t,r,i,a,s){this.le();const n=new BridgePacket;if(n.set({name:"0",type:"d",value:e}),n.set({name:"1",type:"d",value:t}),n.set({name:"2",type:"d",value:r}),n.set({name:"3",type:"d",value:i}),!1!==a&&!0!==a)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");if(n.set({name:"4",type:"d",value:a?1:0}),!1!==s&&!0!==s)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");n.set({name:"5",type:"d",value:s?1:0}),await n.send(this.Z,15)}async flush(){this.le();const e=new BridgePacket;await e.send(this.Z,19)}async setFontSize(e,t,r){this.le();const i=new BridgePacket;if(!supportedLCDFont(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified LCDFont is unsupported by this device.");i.set({name:"0",type:"d",value:e}),i.set({name:"1",type:"d",value:t}),i.set({name:"2",type:"d",value:r}),await i.send(this.Z,61)}getFrameBuffer(){if(this.le(),2147483647===this.data.frameBuffer)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.frameBuffer}async setFrameBuffer(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"d",value:e}),await t.send(this.Z,62)}getHeight(){if(this.le(),2147483647===this.data.height)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.height}async initialize(){this.le();const e=new BridgePacket;await e.send(this.Z,24)}async saveFrameBuffer(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"d",value:e}),await t.send(this.Z,38)}getScreenSize(){if(this.le(),2147483647===this.data.screenSize)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.screenSize}async setScreenSize(e){this.le();const t=new BridgePacket;if(!supportedLCDScreenSize(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified LCDScreenSize is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,78)}getSleeping(){if(this.le(),2===this.data.sleeping)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.sleeping}async setSleeping(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,80)}getWidth(){if(this.le(),2147483647===this.data.width)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.width}async writeText(e,t,r,i){this.le();const a=new BridgePacket;if(!supportedLCDFont(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified LCDFont is unsupported by this device.");a.set({name:"0",type:"d",value:e}),a.set({name:"1",type:"d",value:t}),a.set({name:"2",type:"d",value:r}),a.set({name:"3",type:"s",value:i}),await a.send(this.Z,105)}}class LCD extends LCDBase{constructor(e){super(e),this.st=new PhidgetLock}ye(e){switch(e.vpkt){case 61:{const t=e.getNumber(0),r=e.getNumber(1),i=e.getNumber(2);this.data.fontWidth[t]=r,this.data.fontHeight[t]=i,this.he("FontSize",e);break}case 78:this.ur(e.getNumber(0)),super.ye(e);break;case 43:case 48:case 19:this.deviceID===DeviceID.PN_LCD1100&&(this.data.sleeping=0),super.ye(e);break;default:super.ye(e)}}ur(e){switch(e){case LCDScreenSize.NO_SCREEN:this.data.height=0,this.data.width=0;break;case LCDScreenSize.DIMENSIONS_1X8:this.data.height=1,this.data.width=8;break;case LCDScreenSize.DIMENSIONS_2X8:this.data.height=2,this.data.width=8;break;case LCDScreenSize.DIMENSIONS_1X16:this.data.height=1,this.data.width=16;break;case LCDScreenSize.DIMENSIONS_2X16:this.data.height=2,this.data.width=16;break;case LCDScreenSize.DIMENSIONS_4X16:this.data.height=4,this.data.width=16;break;case LCDScreenSize.DIMENSIONS_2X20:this.data.height=2,this.data.width=20;break;case LCDScreenSize.DIMENSIONS_4X20:this.data.height=4,this.data.width=20;break;case LCDScreenSize.DIMENSIONS_2X24:this.data.height=2,this.data.width=24;break;case LCDScreenSize.DIMENSIONS_1X40:this.data.height=1,this.data.width=40;break;case LCDScreenSize.DIMENSIONS_2X40:this.data.height=2,this.data.width=40;break;case LCDScreenSize.DIMENSIONS_4X40:this.data.height=4,this.data.width=40}}setAutoFlush(e){this.le(),this.data.autoFlush=e?1:0}async setCharacterBitmap(e,t,r){this.le();const i=this.getFontSize(e),a=new BridgePacket;if(i.width<=0)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid arg (getFontSize): "+e);if(i.height<=0)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid arg (getFontSize): "+e);a.set({name:"0",type:"d",value:e}),a.set({name:"1",type:"s",value:t}),a.set({name:"2",type:"R",value:r}),await a.send(this.Z,47)}getMaxCharacters(e){let t,r;switch(this.le(),this.deviceID){case DeviceID.PN_LCD1100:if(r=this.getFontSize(e),r.width<=0)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Font width is <= 0.");if(r.height<=0)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Font height is <= 0.");t=Math.floor(Math.min(255,this.data.width/r.width*(this.data.height/r.height)));break;case DeviceID.PN_1202_1203:case DeviceID.PN_1204:case DeviceID.PN_1215__1218:case DeviceID.PN_1219__1222:t=255;break;default:throw new PhidgetError(ErrorCode.UNEXPECTED)}return t}getFontSize(e){this.le();const t={width:0,height:0};switch(e){case LCDFont.DIMENSIONS_6X10:t.width=6,t.height=10;break;case LCDFont.DIMENSIONS_5X8:t.width=5,t.height=8;break;case LCDFont.DIMENSIONS_6X12:t.width=6,t.height=12;break;case LCDFont.USER1:case LCDFont.USER2:t.width=this.data.fontWidth[e],t.height=this.data.fontHeight[e];break;default:throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Invalid font.")}return t}async writeBitmap(e,t,r,i,a){this.le();const s=new BridgePacket;if(r<=0||i<=0)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"invalid arg (size cannot be <=0) "+(r<=0?r:i));s.set({name:"0",type:"d",value:e}),s.set({name:"1",type:"d",value:t}),s.set({name:"2",type:"d",value:r}),s.set({name:"3",type:"d",value:i}),s.set({name:"4",type:"R",value:a}),await s.send(this.Z,104)}}class MotorPositionControllerBase extends PhidgetChannel{constructor(e){super(e),this.onPositionChange=null,this.onDutyCycleUpdate=null,this.we=ChannelClass.MOTOR_POSITION_CONTROLLER,this.name="MotorPositionController",this.data=this.Ut()}ye(e){switch(e.vpkt){case 40:this.data.acceleration=e.entries[0].v,this.he("Acceleration",e);break;case 51:this.data.currentLimit=e.entries[0].v,this.he("CurrentLimit",e);break;case 119:this.data.currentRegulatorGain=e.entries[0].v,this.he("CurrentRegulatorGain",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 120:this.data.deadBand=e.entries[0].v,this.he("DeadBand",e);break;case 57:this.data.engaged=e.entries[0].v,this.he("Engaged",e);break;case 146:case 147:break;case 58:this.data.fanMode=e.entries[0].v,this.he("FanMode",e);break;case 65:this.data.IOMode=e.entries[0].v,this.he("IOMode",e);break;case 136:this.data.kd=e.entries[0].v,this.he("Kd",e);break;case 142:this.data.ki=e.entries[0].v,this.he("Ki",e);break;case 135:this.data.kp=e.entries[0].v,this.he("Kp",e);break;case 141:this.data.stallVelocity=e.entries[0].v,this.he("StallVelocity",e);break;case 83:this.data.targetPosition=e.entries[0].v,this.he("TargetPosition",e);break;case 55:this.data.velocityLimit=e.entries[0].v,this.he("VelocityLimit",e);break;case 16:if(this.data.dutyCycle=e.entries[0].v,this.ce&&this.onDutyCycleUpdate)try{this.onDutyCycleUpdate(this.data.dutyCycle)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{positionOffset:0,dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,currentLimit:1e300,maxCurrentLimit:1e300,minCurrentLimit:1e300,currentRegulatorGain:1e300,dutyCycle:1e300,engaged:2,maxCurrentRegulatorGain:1e300,minCurrentRegulatorGain:1e300,velocityLimit:1e300,minVelocityLimit:1e300,maxVelocityLimit:1e300,maxAcceleration:1e300,minAcceleration:1e300,acceleration:1e300,targetPosition:0x8000000000000000,position:0x8000000000000000,maxPosition:0x8000000000000000,minPosition:0x8000000000000000,rescaleFactor:1e300,fanMode:2147483647,deadBand:4294967295,kp:1e300,kd:1e300,ki:1e300,IOMode:2147483647,stallVelocity:1e300,minStallVelocity:1e300,maxStallVelocity:1e300,maxFailsafeTime:4294967295,minFailsafeTime:4294967295}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 259:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.currentLimit=2,this.data.maxCurrentLimit=25,this.data.minCurrentLimit=2,this.data.currentRegulatorGain=10,this.data.engaged=0,this.data.maxCurrentRegulatorGain=100,this.data.minCurrentRegulatorGain=1,this.data.velocityLimit=2e4,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=25e4,this.data.maxAcceleration=1e7,this.data.minAcceleration=.1,this.data.acceleration=1e4,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.fanMode=FanMode.AUTO,this.data.deadBand=0,this.data.kp=2e3,this.data.kd=25e3,this.data.ki=5,this.data.IOMode=EncoderIOMode.PUSH_PULL;break;case 265:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.currentLimit=2,this.data.maxCurrentLimit=25,this.data.minCurrentLimit=2,this.data.currentRegulatorGain=10,this.data.engaged=0,this.data.maxCurrentRegulatorGain=100,this.data.minCurrentRegulatorGain=1,this.data.velocityLimit=2e4,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=25e4,this.data.maxAcceleration=1e7,this.data.minAcceleration=.1,this.data.acceleration=1e4,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.fanMode=FanMode.AUTO,this.data.deadBand=0,this.data.kp=2e3,this.data.kd=25e3,this.data.ki=5,this.data.IOMode=EncoderIOMode.PUSH_PULL,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 290:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.currentLimit=1,this.data.maxCurrentLimit=2,this.data.minCurrentLimit=0,this.data.engaged=0,this.data.velocityLimit=2e4,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=25e4,this.data.maxAcceleration=1e7,this.data.minAcceleration=.1,this.data.acceleration=1e4,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.deadBand=0,this.data.kp=2e3,this.data.kd=25e3,this.data.ki=5;break;case 293:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.currentLimit=1,this.data.maxCurrentLimit=2,this.data.minCurrentLimit=0,this.data.engaged=0,this.data.velocityLimit=2e4,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=25e4,this.data.maxAcceleration=1e7,this.data.minAcceleration=.1,this.data.acceleration=1e4,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.deadBand=0,this.data.kp=2e3,this.data.kd=25e3,this.data.ki=5,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 296:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.currentLimit=1,this.data.maxCurrentLimit=3.5,this.data.minCurrentLimit=0,this.data.engaged=0,this.data.velocityLimit=2e4,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=25e4,this.data.maxAcceleration=1e7,this.data.minAcceleration=.1,this.data.acceleration=1e4,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.deadBand=0,this.data.kp=2e3,this.data.kd=25e3,this.data.ki=5;break;case 299:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.currentLimit=1,this.data.maxCurrentLimit=4,this.data.minCurrentLimit=0,this.data.engaged=0,this.data.velocityLimit=2e4,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=25e4,this.data.maxAcceleration=1e7,this.data.minAcceleration=.1,this.data.acceleration=1e4,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.deadBand=0,this.data.kp=2e3,this.data.kd=25e3,this.data.ki=5,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;case 304:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.engaged=0,this.data.velocityLimit=1e3,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=1e4,this.data.maxAcceleration=1e5,this.data.minAcceleration=.1,this.data.acceleration=100,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.deadBand=0,this.data.kp=2e4,this.data.kd=4e4,this.data.ki=2,this.data.stallVelocity=400,this.data.minStallVelocity=0,this.data.maxStallVelocity=2e3;break;case 307:this.data.dataInterval=100,this.data.minDataInterval=20,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=50,this.data.engaged=0,this.data.velocityLimit=1e3,this.data.minVelocityLimit=0,this.data.maxVelocityLimit=1e4,this.data.maxAcceleration=1e5,this.data.minAcceleration=.1,this.data.acceleration=100,this.data.targetPosition=0,this.data.maxPosition=1e15,this.data.minPosition=-1e15,this.data.rescaleFactor=1,this.data.deadBand=0,this.data.kp=2e4,this.data.kd=4e4,this.data.ki=2,this.data.stallVelocity=400,this.data.minStallVelocity=0,this.data.maxStallVelocity=2e3,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 259:case 265:break;case 290:case 293:case 296:case 299:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.currentLimit}),await e.send(this.Z,51),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.engaged}),await e.send(this.Z,57),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.velocityLimit}),await e.send(this.Z,55),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.acceleration}),await e.send(this.Z,40),e=new BridgePacket,e.set({name:"0",type:"l",value:this.data.targetPosition}),await e.send(this.Z,83),e=new BridgePacket,e.set({name:"0",type:"u",value:this.data.deadBand}),await e.send(this.Z,120),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.kp}),await e.send(this.Z,135),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.kd}),await e.send(this.Z,136),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.ki}),await e.send(this.Z,142);break;case 304:case 307:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.engaged}),await e.send(this.Z,57),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.velocityLimit}),await e.send(this.Z,55),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.acceleration}),await e.send(this.Z,40),e=new BridgePacket,e.set({name:"0",type:"l",value:this.data.targetPosition}),await e.send(this.Z,83),e=new BridgePacket,e.set({name:"0",type:"u",value:this.data.deadBand}),await e.send(this.Z,120),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.kp}),await e.send(this.Z,135),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.kd}),await e.send(this.Z,136),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.ki}),await e.send(this.Z,142),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.stallVelocity}),await e.send(this.Z,141);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.dutyCycle&&!this.lr)}lt(){if(1e300!=this.data.dutyCycle&&this.onDutyCycleUpdate)try{this.onDutyCycleUpdate(this.data.dutyCycle)}catch(e){logEventException(e)}}get acceleration(){return this.getAcceleration()}get minAcceleration(){return this.getMinAcceleration()}get maxAcceleration(){return this.getMaxAcceleration()}get currentLimit(){return this.getCurrentLimit()}get minCurrentLimit(){return this.getMinCurrentLimit()}get maxCurrentLimit(){return this.getMaxCurrentLimit()}get currentRegulatorGain(){return this.getCurrentRegulatorGain()}get minCurrentRegulatorGain(){return this.getMinCurrentRegulatorGain()}get maxCurrentRegulatorGain(){return this.getMaxCurrentRegulatorGain()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get deadBand(){return this.getDeadBand()}get dutyCycle(){return this.getDutyCycle()}get engaged(){return this.getEngaged()}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get fanMode(){return this.getFanMode()}get IOMode(){return this.getIOMode()}get kd(){return this.getKd()}get ki(){return this.getKi()}get kp(){return this.getKp()}get position(){return this.getPosition()}get minPosition(){return this.getMinPosition()}get maxPosition(){return this.getMaxPosition()}get rescaleFactor(){return this.getRescaleFactor()}set rescaleFactor(e){this.setRescaleFactor(e)}get stallVelocity(){return this.getStallVelocity()}get minStallVelocity(){return this.getMinStallVelocity()}get maxStallVelocity(){return this.getMaxStallVelocity()}get targetPosition(){return this.getTargetPosition()}get velocityLimit(){return this.getVelocityLimit()}get minVelocityLimit(){return this.getMinVelocityLimit()}get maxVelocityLimit(){return this.getMaxVelocityLimit()}getCurrentLimit(){if(this.le(),1e300===this.data.currentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.currentLimit}async setCurrentLimit(e){if(this.le(),e<this.data.minCurrentLimit||e>this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCurrentLimit+" - "+this.data.maxCurrentLimit+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,51)}getMinCurrentLimit(){if(this.le(),1e300===this.data.minCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrentLimit}getMaxCurrentLimit(){if(this.le(),1e300===this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrentLimit}getCurrentRegulatorGain(){if(this.le(),1e300===this.data.currentRegulatorGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.currentRegulatorGain}async setCurrentRegulatorGain(e){if(this.le(),e<this.data.minCurrentRegulatorGain||e>this.data.maxCurrentRegulatorGain)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCurrentRegulatorGain+" - "+this.data.maxCurrentRegulatorGain+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,119)}getMinCurrentRegulatorGain(){if(this.le(),1e300===this.data.minCurrentRegulatorGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrentRegulatorGain}getMaxCurrentRegulatorGain(){if(this.le(),1e300===this.data.maxCurrentRegulatorGain)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrentRegulatorGain}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getDutyCycle(){if(this.le(),1e300===this.data.dutyCycle)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dutyCycle}getEngaged(){if(this.le(),2===this.data.engaged)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.engaged}async setEngaged(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,57)}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}getFanMode(){if(this.le(),2147483647===this.data.fanMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.fanMode}async setFanMode(e){this.le();const t=new BridgePacket;if(!supportedFanMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified FanMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,58)}getIOMode(){if(this.le(),2147483647===this.data.IOMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.IOMode}async setIOMode(e){this.le();const t=new BridgePacket;if(!supportedEncoderIOMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified EncoderIOMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,65)}getRescaleFactor(){if(this.le(),1e300===this.data.rescaleFactor)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.rescaleFactor}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}}class MotorPositionController extends MotorPositionControllerBase{ye(e){if(29===e.vpkt){if(this.data.position=e.getNumber(0),this.ce&&this.onPositionChange)try{this.onPositionChange((this.data.position+this.data.positionOffset)*this.data.rescaleFactor)}catch(e){logEventException(e)}}else super.ye(e)}Ee(e){if(e===ErrorEventCode.MOTOR_STALL_CONDITION)this.data.engaged=0}getAcceleration(){if(this.le(),1e300===this.data.acceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.acceleration*Math.abs(this.data.rescaleFactor)}async setAcceleration(e){this.le();const t=e/Math.abs(this.data.rescaleFactor);if(t<this.data.minAcceleration||t>this.data.maxAcceleration)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minAcceleration+" - "+this.maxAcceleration+".");const r=new BridgePacket;r.set({name:"0",type:"g",value:t}),await r.send(this.Z,40)}getMinAcceleration(){if(this.le(),1e300===this.data.minAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAcceleration*Math.abs(this.data.rescaleFactor)}getMaxAcceleration(){if(this.le(),1e300===this.data.maxAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAcceleration*Math.abs(this.data.rescaleFactor)}addPositionOffset(e){this.le(),this.data.positionOffset+=e/this.data.rescaleFactor}getDeadBand(){if(this.le(),1e300===this.data.deadBand)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.deadBand*Math.abs(this.data.rescaleFactor)}async setDeadBand(e){this.le();const t=e/Math.abs(this.data.rescaleFactor),r=new BridgePacket;r.set({name:"0",type:"u",value:t}),await r.send(this.Z,120)}getPosition(){if(this.le(),0x8000000000000000===this.data.position)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.position+this.data.positionOffset)*this.data.rescaleFactor}getMinPosition(){if(this.le(),0x8000000000000000===this.data.minPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.minPosition+this.data.positionOffset)*Math.abs(this.data.rescaleFactor)}getMaxPosition(){if(this.le(),0x8000000000000000===this.data.maxPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.maxPosition+this.data.positionOffset)*Math.abs(this.data.rescaleFactor)}setRescaleFactor(e){this.le(),this.data.rescaleFactor=e}getTargetPosition(){if(this.le(),0x8000000000000000===this.data.targetPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.targetPosition+this.data.positionOffset)*this.data.rescaleFactor}async setTargetPosition(e){this.le();const t=e/this.data.rescaleFactor-this.data.positionOffset;if(t<this.data.minPosition||t>this.data.maxPosition)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minPosition+" - "+this.maxPosition+".");const r=new BridgePacket;r.set({name:"0",type:"l",value:t}),await r.send(this.Z,83)}getVelocityLimit(){if(this.le(),1e300===this.data.velocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.velocityLimit*Math.abs(this.data.rescaleFactor)}getStallVelocity(){if(this.le(),1e300===this.data.stallVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.stallVelocity*Math.abs(this.data.rescaleFactor)}async setStallVelocity(e){this.le();const t=e/Math.abs(this.data.rescaleFactor);if(t<this.data.minStallVelocity||t>this.data.maxStallVelocity)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minStallVelocity+" - "+this.maxStallVelocity+".");const r=new BridgePacket;r.set({name:"0",type:"g",value:t}),await r.send(this.Z,141)}async setVelocityLimit(e){this.le();const t=e/Math.abs(this.data.rescaleFactor);if(t<this.data.minVelocityLimit||t>this.data.maxVelocityLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minVelocityLimit+" - "+this.maxVelocityLimit+".");const r=new BridgePacket;r.set({name:"0",type:"g",value:t}),await r.send(this.Z,55)}getMinStallVelocity(){if(this.le(),1e300===this.data.minStallVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minStallVelocity*Math.abs(this.data.rescaleFactor)}getMaxStallVelocity(){if(this.le(),1e300===this.data.maxStallVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxStallVelocity*Math.abs(this.data.rescaleFactor)}getMinVelocityLimit(){if(this.le(),1e300===this.data.minVelocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVelocityLimit*Math.abs(this.data.rescaleFactor)}getMaxVelocityLimit(){if(this.le(),1e300===this.data.maxVelocityLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVelocityLimit*Math.abs(this.data.rescaleFactor)}getKd(){if(this.le(),1e300===this.data.kd)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 279===this.Z.chDef.uid?this.data.kd/Math.abs(this.data.rescaleFactor):this.data.kd}async setKd(e){this.le();const t=new BridgePacket;if(279===this.Z.chDef.uid)t.set({name:"0",type:"g",value:e*Math.abs(this.data.rescaleFactor)});else t.set({name:"0",type:"g",value:e});await t.send(this.Z,136)}getKi(){if(this.le(),1e300===this.data.ki)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 279===this.Z.chDef.uid?this.data.ki/Math.abs(this.data.rescaleFactor):this.data.ki}async setKi(e){this.le();const t=new BridgePacket;if(279===this.Z.chDef.uid)t.set({name:"0",type:"g",value:e*Math.abs(this.data.rescaleFactor)});else t.set({name:"0",type:"g",value:e});await t.send(this.Z,142)}getKp(){if(this.le(),1e300===this.data.kp)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 279===this.Z.chDef.uid?this.data.kp/Math.abs(this.data.rescaleFactor):this.data.kp}async setKp(e){this.le();const t=new BridgePacket;if(279===this.Z.chDef.uid)t.set({name:"0",type:"g",value:e*Math.abs(this.data.rescaleFactor)});else t.set({name:"0",type:"g",value:e});await t.send(this.Z,135)}}class BLDCMotorBase extends PhidgetChannel{constructor(e){super(e),this.onBrakingStrengthChange=null,this.onPositionChange=null,this.onVelocityUpdate=null,this.we=ChannelClass.BLDC_MOTOR,this.name="BLDCMotor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 40:this.data.acceleration=e.entries[0].v,this.he("Acceleration",e);break;case 51:this.data.currentLimit=e.entries[0].v,this.he("CurrentLimit",e);break;case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 146:case 147:break;case 141:this.data.stallVelocity=e.entries[0].v,this.he("StallVelocity",e);break;case 44:this.data.targetBrakingStrength=e.entries[0].v,this.he("TargetBrakingStrength",e);break;case 55:this.data.targetVelocity=e.entries[0].v,this.he("TargetVelocity",e);break;case 121:if(this.data.brakingStrength=e.entries[0].v,this.ce&&this.onBrakingStrengthChange)try{this.onBrakingStrengthChange(this.data.brakingStrength)}catch(e){logEventException(e)}break;case 16:if(this.data.velocity=e.entries[0].v,this.ce&&this.onVelocityUpdate)try{this.onVelocityUpdate(this.data.velocity)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{positionOffset:0,dataInterval:1e300,minDataInterval:4294967295,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,currentLimit:1e300,maxCurrentLimit:1e300,minCurrentLimit:1e300,acceleration:1e300,targetBrakingStrength:1e300,maxAcceleration:1e300,maxBrakingStrength:1e300,maxVelocity:1e300,maxPosition:0x8000000000000000,minVelocity:1e300,minAcceleration:1e300,minBrakingStrength:1e300,minPosition:0x8000000000000000,position:0x8000000000000000,rescaleFactor:1e300,targetVelocity:1e300,velocity:1e300,brakingStrength:1e300,stallVelocity:1e300,minStallVelocity:1e300,maxStallVelocity:1e300,maxFailsafeTime:4294967295,minFailsafeTime:4294967295}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 302:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxAcceleration=100,this.data.maxBrakingStrength=1,this.data.maxVelocity=1,this.data.maxPosition=1e15,this.data.minVelocity=0,this.data.minAcceleration=.1,this.data.minBrakingStrength=0,this.data.minPosition=-1e15,this.data.position=0,this.data.rescaleFactor=1,this.data.targetVelocity=0,this.data.stallVelocity=400,this.data.minStallVelocity=0,this.data.maxStallVelocity=2e3;break;case 305:this.data.dataInterval=250,this.data.minDataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.acceleration=1,this.data.targetBrakingStrength=0,this.data.maxAcceleration=100,this.data.maxBrakingStrength=1,this.data.maxVelocity=1,this.data.maxPosition=1e15,this.data.minVelocity=0,this.data.minAcceleration=.1,this.data.minBrakingStrength=0,this.data.minPosition=-1e15,this.data.position=0,this.data.rescaleFactor=1,this.data.targetVelocity=0,this.data.stallVelocity=400,this.data.minStallVelocity=0,this.data.maxStallVelocity=2e3,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 302:case 305:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.acceleration}),await e.send(this.Z,40),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.targetBrakingStrength}),await e.send(this.Z,44),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.targetVelocity}),await e.send(this.Z,55),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.stallVelocity}),await e.send(this.Z,141);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.brakingStrength&&!this.hr)&&!(1e300==this.data.velocity&&!this.cr)}lt(){if(1e300!=this.data.brakingStrength&&this.onBrakingStrengthChange)try{this.onBrakingStrengthChange(this.data.brakingStrength)}catch(e){logEventException(e)}if(1e300!=this.data.velocity&&this.onVelocityUpdate)try{this.onVelocityUpdate(this.data.velocity)}catch(e){logEventException(e)}}get acceleration(){return this.getAcceleration()}get minAcceleration(){return this.getMinAcceleration()}get maxAcceleration(){return this.getMaxAcceleration()}get brakingStrength(){return this.getBrakingStrength()}get minBrakingStrength(){return this.getMinBrakingStrength()}get maxBrakingStrength(){return this.getMaxBrakingStrength()}get currentLimit(){return this.getCurrentLimit()}get minCurrentLimit(){return this.getMinCurrentLimit()}get maxCurrentLimit(){return this.getMaxCurrentLimit()}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get position(){return this.getPosition()}get minPosition(){return this.getMinPosition()}get maxPosition(){return this.getMaxPosition()}get rescaleFactor(){return this.getRescaleFactor()}set rescaleFactor(e){this.setRescaleFactor(e)}get stallVelocity(){return this.getStallVelocity()}get minStallVelocity(){return this.getMinStallVelocity()}get maxStallVelocity(){return this.getMaxStallVelocity()}get targetBrakingStrength(){return this.getTargetBrakingStrength()}get targetVelocity(){return this.getTargetVelocity()}get velocity(){return this.getVelocity()}get minVelocity(){return this.getMinVelocity()}get maxVelocity(){return this.getMaxVelocity()}getAcceleration(){if(this.le(),1e300===this.data.acceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.acceleration}async setAcceleration(e){if(this.le(),e<this.data.minAcceleration||e>this.data.maxAcceleration)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minAcceleration+" - "+this.data.maxAcceleration+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,40)}getMinAcceleration(){if(this.le(),1e300===this.data.minAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minAcceleration}getMaxAcceleration(){if(this.le(),1e300===this.data.maxAcceleration)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxAcceleration}getBrakingStrength(){if(this.le(),1e300===this.data.brakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.brakingStrength}getMinBrakingStrength(){if(this.le(),1e300===this.data.minBrakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minBrakingStrength}getMaxBrakingStrength(){if(this.le(),1e300===this.data.maxBrakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxBrakingStrength}getCurrentLimit(){if(this.le(),1e300===this.data.currentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.currentLimit}async setCurrentLimit(e){if(this.le(),e<this.data.minCurrentLimit||e>this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minCurrentLimit+" - "+this.data.maxCurrentLimit+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,51)}getMinCurrentLimit(){if(this.le(),1e300===this.data.minCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minCurrentLimit}getMaxCurrentLimit(){if(this.le(),1e300===this.data.maxCurrentLimit)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxCurrentLimit}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}getRescaleFactor(){if(this.le(),1e300===this.data.rescaleFactor)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.rescaleFactor}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}getTargetBrakingStrength(){if(this.le(),1e300===this.data.targetBrakingStrength)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.targetBrakingStrength}async setTargetBrakingStrength(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,44)}getTargetVelocity(){if(this.le(),1e300===this.data.targetVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.targetVelocity}async setTargetVelocity(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,55)}getVelocity(){if(this.le(),1e300===this.data.velocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.velocity}getMinVelocity(){if(this.le(),1e300===this.data.minVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minVelocity}getMaxVelocity(){if(this.le(),1e300===this.data.maxVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxVelocity}}class BLDCMotor extends BLDCMotorBase{ye(e){if(29===e.vpkt){if(this.data.position=e.getNumber(0),this.ce&&this.onPositionChange)try{this.onPositionChange((this.data.position+this.data.positionOffset)*this.data.rescaleFactor)}catch(e){logEventException(e)}}else super.ye(e)}setRescaleFactor(e){this.le(),this.data.rescaleFactor=e}getPosition(){if(this.le(),0x8000000000000000===this.data.position)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.position*this.data.rescaleFactor}getMinPosition(){if(this.le(),0x8000000000000000===this.data.minPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.minPosition+this.data.positionOffset)*this.data.rescaleFactor}getMaxPosition(){if(this.le(),0x8000000000000000===this.data.maxPosition)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return(this.data.maxPosition+this.data.positionOffset)*this.data.rescaleFactor}addPositionOffset(e){this.le(),this.data.positionOffset+=e/this.data.rescaleFactor}async setStallVelocity(e){this.le();const t=e/this.data.rescaleFactor;if(t<this.data.minStallVelocity||t>this.data.maxStallVelocity)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.minStallVelocity+" - "+this.maxStallVelocity+".");const r=new BridgePacket;r.set({name:"0",type:"g",value:t}),await r.send(this.Z,141)}getStallVelocity(){if(this.le(),1e300===this.data.stallVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.stallVelocity*this.data.rescaleFactor}getMinStallVelocity(){if(this.le(),1e300===this.data.minStallVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minStallVelocity*this.data.rescaleFactor}getMaxStallVelocity(){if(this.le(),1e300===this.data.maxStallVelocity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxStallVelocity*this.data.rescaleFactor}}class DistanceSensorBase extends PhidgetChannel{constructor(e){super(e),this.onDistanceChange=null,this.onSonarReflectionsUpdate=null,this.we=ChannelClass.DISTANCE_SENSOR,this.name="DistanceSensor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 46:this.data.distanceChangeTrigger=e.entries[0].v,this.he("DistanceChangeTrigger",e);break;case 75:this.data.sonarQuietMode=e.entries[0].v,this.he("SonarQuietMode",e);break;case 12:if(this.data.distance=e.entries[0].v,this.ce&&this.onDistanceChange)try{this.onDistanceChange(this.data.distance)}catch(e){logEventException(e)}break;case 88:if(this.ce&&this.onSonarReflectionsUpdate)try{this.onSonarReflectionsUpdate(e.entries[0].v,e.entries[1].v,e.entries[2].v)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{amplitudes:[4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295],distances:[4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295,4294967295],count:0,dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxDistance:4294967295,maxDistanceChangeTrigger:4294967295,minDataInterval:4294967295,minDistance:4294967295,minDistanceChangeTrigger:4294967295,distance:4294967295,distanceChangeTrigger:4294967295,sonarQuietMode:2}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 329:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.maxDistance=200,this.data.maxDistanceChangeTrigger=200,this.data.minDataInterval=100,this.data.minDistance=0,this.data.minDistanceChangeTrigger=0,this.data.distanceChangeTrigger=0;break;case 330:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=33.333333333333336,this.data.maxDistance=650,this.data.maxDistanceChangeTrigger=650,this.data.minDataInterval=30,this.data.minDistance=0,this.data.minDistanceChangeTrigger=0,this.data.distanceChangeTrigger=0;break;case 331:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=33.333333333333336,this.data.maxDistance=1300,this.data.maxDistanceChangeTrigger=1300,this.data.minDataInterval=30,this.data.minDistance=0,this.data.minDistanceChangeTrigger=0,this.data.distanceChangeTrigger=0;break;case 332:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.maxDistance=1e4,this.data.maxDistanceChangeTrigger=1e4,this.data.minDataInterval=100,this.data.minDistance=40,this.data.minDistanceChangeTrigger=0,this.data.distanceChangeTrigger=0,this.data.sonarQuietMode=1;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 329:case 330:case 331:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"u",value:this.data.distanceChangeTrigger}),await e.send(this.Z,46);break;case 332:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"u",value:this.data.distanceChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.sonarQuietMode}),await e.send(this.Z,75);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(4294967295==this.data.distance&&!this.gr)}lt(){if(4294967295!=this.data.distance&&this.onDistanceChange)try{this.onDistanceChange(this.data.distance)}catch(e){logEventException(e)}}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get distance(){return this.getDistance()}get minDistance(){return this.getMinDistance()}get maxDistance(){return this.getMaxDistance()}get distanceChangeTrigger(){return this.getDistanceChangeTrigger()}get minDistanceChangeTrigger(){return this.getMinDistanceChangeTrigger()}get maxDistanceChangeTrigger(){return this.getMaxDistanceChangeTrigger()}get sonarQuietMode(){return this.getSonarQuietMode()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getDistance(){if(this.le(),4294967295===this.data.distance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.distance>this.data.maxDistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.distance<this.data.minDistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.distance}getMinDistance(){if(this.le(),4294967295===this.data.minDistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDistance}getMaxDistance(){if(this.le(),4294967295===this.data.maxDistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDistance}getDistanceChangeTrigger(){if(this.le(),4294967295===this.data.distanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.distanceChangeTrigger}async setDistanceChangeTrigger(e){if(this.le(),e<this.data.minDistanceChangeTrigger||e>this.data.maxDistanceChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDistanceChangeTrigger+" - "+this.data.maxDistanceChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,46)}getMinDistanceChangeTrigger(){if(this.le(),4294967295===this.data.minDistanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDistanceChangeTrigger}getMaxDistanceChangeTrigger(){if(this.le(),4294967295===this.data.maxDistanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDistanceChangeTrigger}getSonarQuietMode(){if(this.le(),2===this.data.sonarQuietMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.sonarQuietMode}async setSonarQuietMode(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,75)}}class DistanceSensor extends DistanceSensorBase{ye(e){if(88===e.vpkt)this.data.distances=e.getArray(0),this.data.amplitudes=e.getArray(1),this.data.count=e.getNumber(2),super.ye(e);else super.ye(e)}Ee(e){switch(e){case ErrorEventCode.SATURATION:case ErrorEventCode.OUT_OF_RANGE:this.data.distance=4294967295,this.gr=!0}}getSonarReflections(){return this.le(),{distances:this.data.distances,amplitudes:this.data.amplitudes,count:this.data.count}}}class HumiditySensorBase extends PhidgetChannel{constructor(e){super(e),this.onHumidityChange=null,this.we=ChannelClass.HUMIDITY_SENSOR,this.name="HumiditySensor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 46:this.data.humidityChangeTrigger=e.entries[0].v,this.he("HumidityChangeTrigger",e);break;case 22:if(this.data.humidity=e.entries[0].v,this.ce&&this.onHumidityChange)try{this.onHumidityChange(this.data.humidity)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxHumidity:1e300,maxHumidityChangeTrigger:1e300,minDataInterval:4294967295,minHumidity:1e300,minHumidityChangeTrigger:1e300,humidity:1e300,humidityChangeTrigger:1e300}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 342:this.data.dataInterval=500,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=2,this.data.maxHumidity=100,this.data.maxHumidityChangeTrigger=100,this.data.minDataInterval=500,this.data.minHumidity=0,this.data.minHumidityChangeTrigger=0,this.data.humidityChangeTrigger=0;break;case 344:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=20,this.data.maxHumidity=100,this.data.maxHumidityChangeTrigger=100,this.data.minDataInterval=50,this.data.minHumidity=0,this.data.minHumidityChangeTrigger=0,this.data.humidityChangeTrigger=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 342:case 344:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.humidityChangeTrigger}),await e.send(this.Z,46);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.humidity&&!this.wr)}lt(){if(1e300!=this.data.humidity&&this.onHumidityChange)try{this.onHumidityChange(this.data.humidity)}catch(e){logEventException(e)}}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get humidity(){return this.getHumidity()}get minHumidity(){return this.getMinHumidity()}get maxHumidity(){return this.getMaxHumidity()}get humidityChangeTrigger(){return this.getHumidityChangeTrigger()}get minHumidityChangeTrigger(){return this.getMinHumidityChangeTrigger()}get maxHumidityChangeTrigger(){return this.getMaxHumidityChangeTrigger()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getHumidity(){if(this.le(),1e300===this.data.humidity||Number.isNaN(this.data.humidity))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.humidity>this.data.maxHumidity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.humidity<this.data.minHumidity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.humidity}getMinHumidity(){if(this.le(),1e300===this.data.minHumidity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minHumidity}getMaxHumidity(){if(this.le(),1e300===this.data.maxHumidity)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxHumidity}getHumidityChangeTrigger(){if(this.le(),1e300===this.data.humidityChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.humidityChangeTrigger}async setHumidityChangeTrigger(e){if(this.le(),e<this.data.minHumidityChangeTrigger||e>this.data.maxHumidityChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minHumidityChangeTrigger+" - "+this.data.maxHumidityChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinHumidityChangeTrigger(){if(this.le(),1e300===this.data.minHumidityChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minHumidityChangeTrigger}getMaxHumidityChangeTrigger(){if(this.le(),1e300===this.data.maxHumidityChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxHumidityChangeTrigger}}class HumiditySensor extends HumiditySensorBase{Ee(e){if(e===ErrorEventCode.SATURATION)this.data.humidity=1e300,this.wr=!0}}class LightSensorBase extends PhidgetChannel{constructor(e){super(e),this.onIlluminanceChange=null,this.we=ChannelClass.LIGHT_SENSOR,this.name="LightSensor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 46:this.data.illuminanceChangeTrigger=e.entries[0].v,this.he("IlluminanceChangeTrigger",e);break;case 23:if(this.data.illuminance=e.entries[0].v,this.ce&&this.onIlluminanceChange)try{this.onIlluminanceChange(this.data.illuminance)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxIlluminance:1e300,maxIlluminanceChangeTrigger:1e300,minDataInterval:4294967295,minIlluminance:1e300,minIlluminanceChangeTrigger:1e300,illuminance:1e300,illuminanceChangeTrigger:1e300}}dt(){if(this.data=this.Ut(),349!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=8,this.data.maxIlluminance=131072,this.data.maxIlluminanceChangeTrigger=131072,this.data.minDataInterval=125,this.data.minIlluminance=0,this.data.minIlluminanceChangeTrigger=0,this.data.illuminanceChangeTrigger=0}async ut(){let e;if(349!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.illuminanceChangeTrigger}),await e.send(this.Z,46)}fe(){return!(1e300==this.data.illuminance&&!this.pr)}lt(){if(1e300!=this.data.illuminance&&this.onIlluminanceChange)try{this.onIlluminanceChange(this.data.illuminance)}catch(e){logEventException(e)}}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get illuminance(){return this.getIlluminance()}get minIlluminance(){return this.getMinIlluminance()}get maxIlluminance(){return this.getMaxIlluminance()}get illuminanceChangeTrigger(){return this.getIlluminanceChangeTrigger()}get minIlluminanceChangeTrigger(){return this.getMinIlluminanceChangeTrigger()}get maxIlluminanceChangeTrigger(){return this.getMaxIlluminanceChangeTrigger()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getIlluminance(){if(this.le(),1e300===this.data.illuminance||Number.isNaN(this.data.illuminance))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.illuminance>this.data.maxIlluminance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.illuminance<this.data.minIlluminance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.illuminance}getMinIlluminance(){if(this.le(),1e300===this.data.minIlluminance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minIlluminance}getMaxIlluminance(){if(this.le(),1e300===this.data.maxIlluminance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxIlluminance}getIlluminanceChangeTrigger(){if(this.le(),1e300===this.data.illuminanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.illuminanceChangeTrigger}async setIlluminanceChangeTrigger(e){if(this.le(),e<this.data.minIlluminanceChangeTrigger||e>this.data.maxIlluminanceChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minIlluminanceChangeTrigger+" - "+this.data.maxIlluminanceChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinIlluminanceChangeTrigger(){if(this.le(),1e300===this.data.minIlluminanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minIlluminanceChangeTrigger}getMaxIlluminanceChangeTrigger(){if(this.le(),1e300===this.data.maxIlluminanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxIlluminanceChangeTrigger}}class LightSensor extends LightSensorBase{Ee(e){if(e===ErrorEventCode.SATURATION)this.data.illuminance=1e300,this.pr=!0}}class PressureSensorBase extends PhidgetChannel{constructor(e){super(e),this.onPressureChange=null,this.we=ChannelClass.PRESSURE_SENSOR,this.name="PressureSensor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 46:this.data.pressureChangeTrigger=e.entries[0].v,this.he("PressureChangeTrigger",e);break;case 31:if(this.data.pressure=e.entries[0].v,this.ce&&this.onPressureChange)try{this.onPressureChange(this.data.pressure)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxPressure:1e300,maxPressureChangeTrigger:1e300,minDataInterval:4294967295,minPressure:1e300,minPressureChangeTrigger:1e300,pressure:1e300,pressureChangeTrigger:1e300}}dt(){if(this.data=this.Ut(),386!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.maxPressure=110,this.data.maxPressureChangeTrigger=60,this.data.minDataInterval=100,this.data.minPressure=50,this.data.minPressureChangeTrigger=0,this.data.pressureChangeTrigger=0}async ut(){let e;if(386!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.pressureChangeTrigger}),await e.send(this.Z,46)}fe(){return!(1e300==this.data.pressure&&!this.Er)}lt(){if(1e300!=this.data.pressure&&this.onPressureChange)try{this.onPressureChange(this.data.pressure)}catch(e){logEventException(e)}}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get pressure(){return this.getPressure()}get minPressure(){return this.getMinPressure()}get maxPressure(){return this.getMaxPressure()}get pressureChangeTrigger(){return this.getPressureChangeTrigger()}get minPressureChangeTrigger(){return this.getMinPressureChangeTrigger()}get maxPressureChangeTrigger(){return this.getMaxPressureChangeTrigger()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getPressure(){if(this.le(),1e300===this.data.pressure||Number.isNaN(this.data.pressure))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.pressure>this.data.maxPressure)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.pressure<this.data.minPressure)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.pressure}getMinPressure(){if(this.le(),1e300===this.data.minPressure)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPressure}getMaxPressure(){if(this.le(),1e300===this.data.maxPressure)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPressure}getPressureChangeTrigger(){if(this.le(),1e300===this.data.pressureChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.pressureChangeTrigger}async setPressureChangeTrigger(e){if(this.le(),e<this.data.minPressureChangeTrigger||e>this.data.maxPressureChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minPressureChangeTrigger+" - "+this.data.maxPressureChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinPressureChangeTrigger(){if(this.le(),1e300===this.data.minPressureChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minPressureChangeTrigger}getMaxPressureChangeTrigger(){if(this.le(),1e300===this.data.maxPressureChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxPressureChangeTrigger}}class PressureSensor extends PressureSensorBase{Ee(e){if(e===ErrorEventCode.SATURATION)this.data.pressure=1e300,this.Er=!0}}class ResistanceInputBase extends PhidgetChannel{constructor(e){super(e),this.onResistanceChange=null,this.we=ChannelClass.RESISTANCE_INPUT,this.name="ResistanceInput",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 46:this.data.resistanceChangeTrigger=e.entries[0].v,this.he("ResistanceChangeTrigger",e);break;case 77:this.data.RTDWireSetup=e.entries[0].v,this.he("RTDWireSetup",e);break;case 36:if(this.data.resistance=e.entries[0].v,this.ce&&this.onResistanceChange)try{this.onResistanceChange(this.data.resistance)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxResistance:1e300,maxResistanceChangeTrigger:1e300,minDataInterval:4294967295,minResistance:1e300,minResistanceChangeTrigger:1e300,resistance:1e300,resistanceChangeTrigger:1e300,RTDWireSetup:2147483647}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 433:this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=4,this.data.maxResistance=5e4,this.data.maxResistanceChangeTrigger=19e3,this.data.minDataInterval=250,this.data.minResistance=0,this.data.minResistanceChangeTrigger=0,this.data.resistanceChangeTrigger=0,this.data.RTDWireSetup=RTDWireSetup.WIRES_4;break;case 435:this.data.dataInterval=333,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=3.003003003003003,this.data.maxResistance=5e3,this.data.maxResistanceChangeTrigger=5e3,this.data.minDataInterval=333,this.data.minResistance=0,this.data.minResistanceChangeTrigger=0,this.data.resistanceChangeTrigger=0,this.data.RTDWireSetup=RTDWireSetup.WIRES_4;break;case 437:this.data.dataInterval=100,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=20,this.data.maxResistance=5e3,this.data.maxResistanceChangeTrigger=5e3,this.data.minDataInterval=50,this.data.minResistance=0,this.data.minResistanceChangeTrigger=0,this.data.resistanceChangeTrigger=0,this.data.RTDWireSetup=RTDWireSetup.WIRES_4;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 433:case 435:case 437:e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"g",value:this.data.resistanceChangeTrigger}),await e.send(this.Z,46),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.RTDWireSetup}),await e.send(this.Z,77);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.resistance&&!this.yr)}lt(){if(1e300!=this.data.resistance&&this.onResistanceChange)try{this.onResistanceChange(this.data.resistance)}catch(e){logEventException(e)}}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get resistance(){return this.getResistance()}get minResistance(){return this.getMinResistance()}get maxResistance(){return this.getMaxResistance()}get resistanceChangeTrigger(){return this.getResistanceChangeTrigger()}get minResistanceChangeTrigger(){return this.getMinResistanceChangeTrigger()}get maxResistanceChangeTrigger(){return this.getMaxResistanceChangeTrigger()}get RTDWireSetup(){return this.getRTDWireSetup()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getResistance(){if(this.le(),1e300===this.data.resistance||Number.isNaN(this.data.resistance))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.resistance>this.data.maxResistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);if(this.data.resistance<this.data.minResistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_LOW);return this.data.resistance}getMinResistance(){if(this.le(),1e300===this.data.minResistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minResistance}getMaxResistance(){if(this.le(),1e300===this.data.maxResistance)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxResistance}getResistanceChangeTrigger(){if(this.le(),1e300===this.data.resistanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.resistanceChangeTrigger}async setResistanceChangeTrigger(e){if(this.le(),e<this.data.minResistanceChangeTrigger||e>this.data.maxResistanceChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minResistanceChangeTrigger+" - "+this.data.maxResistanceChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinResistanceChangeTrigger(){if(this.le(),1e300===this.data.minResistanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minResistanceChangeTrigger}getMaxResistanceChangeTrigger(){if(this.le(),1e300===this.data.maxResistanceChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxResistanceChangeTrigger}getRTDWireSetup(){if(this.le(),2147483647===this.data.RTDWireSetup)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.RTDWireSetup}async setRTDWireSetup(e){this.le();const t=new BridgePacket;if(!supportedRTDWireSetup(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified RTDWireSetup is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,77)}}class ResistanceInput extends ResistanceInputBase{Ee(e){if(e===ErrorEventCode.SATURATION)this.data.resistance=1e300,this.yr=!0}ye(e){if(180===e.vpkt)this.data.RTDWireSetup=e.entries[0].v,this.he("RTDWireSetup",e);else super.ye(e)}}class PowerGuardBase extends PhidgetChannel{constructor(e){super(e),this.we=ChannelClass.POWER_GUARD,this.name="PowerGuard",this.data=this.Ut()}ye(e){switch(e.vpkt){case 146:case 147:break;case 58:this.data.fanMode=e.entries[0].v,this.he("FanMode",e);break;case 71:this.data.overVoltage=e.entries[0].v,this.he("OverVoltage",e);break;case 56:this.data.powerEnabled=e.entries[0].v,this.he("PowerEnabled",e);break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{powerEnabled:2,overVoltage:1e300,maxOverVoltage:1e300,minOverVoltage:1e300,fanMode:2147483647,maxFailsafeTime:4294967295,minFailsafeTime:4294967295}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 400:this.data.powerEnabled=0,this.data.maxOverVoltage=33,this.data.minOverVoltage=8,this.data.fanMode=FanMode.AUTO;break;case 403:this.data.powerEnabled=0,this.data.maxOverVoltage=33,this.data.minOverVoltage=8,this.data.fanMode=FanMode.AUTO,this.data.maxFailsafeTime=3e4,this.data.minFailsafeTime=500;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){let e;switch(this.Z.chDef.uid){case 400:case 403:e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.powerEnabled}),await e.send(this.Z,56),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.fanMode}),await e.send(this.Z,58);break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}get minFailsafeTime(){return this.getMinFailsafeTime()}get maxFailsafeTime(){return this.getMaxFailsafeTime()}get fanMode(){return this.getFanMode()}get overVoltage(){return this.getOverVoltage()}get minOverVoltage(){return this.getMinOverVoltage()}get maxOverVoltage(){return this.getMaxOverVoltage()}get powerEnabled(){return this.getPowerEnabled()}async enableFailsafe(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,146)}getMinFailsafeTime(){if(this.le(),4294967295===this.data.minFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minFailsafeTime}getMaxFailsafeTime(){if(this.le(),4294967295===this.data.maxFailsafeTime)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxFailsafeTime}getFanMode(){if(this.le(),2147483647===this.data.fanMode)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.fanMode}async setFanMode(e){this.le();const t=new BridgePacket;if(!supportedFanMode(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified FanMode is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,58)}getOverVoltage(){if(this.le(),1e300===this.data.overVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.overVoltage}async setOverVoltage(e){if(this.le(),e<this.data.minOverVoltage||e>this.data.maxOverVoltage)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minOverVoltage+" - "+this.data.maxOverVoltage+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,71)}getMinOverVoltage(){if(this.le(),1e300===this.data.minOverVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minOverVoltage}getMaxOverVoltage(){if(this.le(),1e300===this.data.maxOverVoltage)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxOverVoltage}getPowerEnabled(){if(this.le(),2===this.data.powerEnabled)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return!!this.data.powerEnabled}async setPowerEnabled(e){this.le();const t=new BridgePacket;if(!1!==e&&!0!==e)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");t.set({name:"0",type:"d",value:e?1:0}),await t.send(this.Z,56)}async resetFailsafe(){this.le();const e=new BridgePacket;await e.send(this.Z,147)}}class PowerGuard extends PowerGuardBase{}class SoundSensorBase extends PhidgetChannel{constructor(e){super(e),this.onSPLChange=null,this.we=ChannelClass.SOUND_SENSOR,this.name="SoundSensor",this.data=this.Ut()}ye(e){switch(e.vpkt){case 54:e.entryCount>1?this.data.dataInterval=e.entries[1].v:this.data.dataInterval=e.entries[0].v,this.he("DataInterval",e),this.he("DataRate",e);break;case 46:this.data.SPLChangeTrigger=e.entries[0].v,this.he("SPLChangeTrigger",e);break;case 116:this.data.SPLRange=e.entries[0].v,this.he("SPLRange",e);break;case 11:if(this.data.dB=e.entries[0].v,this.data.dBA=e.entries[1].v,this.data.dBC=e.entries[2].v,this.data.octaves=e.entries[3].v,this.ce&&this.onSPLChange)try{this.onSPLChange(this.data.dB,this.data.dBA,this.data.dBC,this.data.octaves)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{lastdB:0,dataInterval:1e300,maxDataInterval:4294967295,minDataRate:1e300,maxDataRate:1e300,maxdB:1e300,maxSPLChangeTrigger:1e300,minDataInterval:4294967295,noiseFloor:1e300,minSPLChangeTrigger:1e300,dB:1e300,dBA:1e300,dBC:1e300,octaves:[1e300,1e300,1e300,1e300,1e300,1e300,1e300,1e300,1e300,1e300],SPLRange:2147483647,SPLChangeTrigger:1e300}}dt(){if(this.data=this.Ut(),406!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);this.data.dataInterval=250,this.data.maxDataInterval=6e4,this.data.minDataRate=.016666666666666666,this.data.maxDataRate=10,this.data.maxdB=102,this.data.maxSPLChangeTrigger=102,this.data.minDataInterval=100,this.data.noiseFloor=34,this.data.minSPLChangeTrigger=0,this.data.SPLRange=SPLRange.DB_102,this.data.SPLChangeTrigger=0}async ut(){let e;if(406!==this.Z.chDef.uid)throw new PhidgetError(ErrorCode.UNSUPPORTED);e=new BridgePacket,e.set({name:"0",type:"u",value:Math.round(this.data.dataInterval)}),await e.send(this.Z,54),e=new BridgePacket,e.set({name:"0",type:"d",value:this.data.SPLRange}),await e.send(this.Z,116)}fe(){return!0}lt(){}get dataInterval(){return this.getDataInterval()}get minDataInterval(){return this.getMinDataInterval()}get maxDataInterval(){return this.getMaxDataInterval()}get dataRate(){return this.getDataRate()}get minDataRate(){return this.getMinDataRate()}get maxDataRate(){return this.getMaxDataRate()}get dB(){return this.getdB()}get maxdB(){return this.getMaxdB()}get dBA(){return this.getdBA()}get dBC(){return this.getdBC()}get noiseFloor(){return this.getNoiseFloor()}get octaves(){return this.getOctaves()}get SPLChangeTrigger(){return this.getSPLChangeTrigger()}get minSPLChangeTrigger(){return this.getMinSPLChangeTrigger()}get maxSPLChangeTrigger(){return this.getMaxSPLChangeTrigger()}get SPLRange(){return this.getSPLRange()}getDataInterval(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dataInterval}async setDataInterval(e){if(this.le(),e<this.data.minDataInterval||e>this.data.maxDataInterval)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataInterval+" - "+this.data.maxDataInterval+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:e}),await t.send(this.Z,54)}getMinDataInterval(){if(this.le(),4294967295===this.data.minDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataInterval}getMaxDataInterval(){if(this.le(),4294967295===this.data.maxDataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataInterval}getDataRate(){if(this.le(),1e300===this.data.dataInterval)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return 1e3/this.data.dataInterval}async setDataRate(e){if(this.le(),e<this.data.minDataRate||e>this.data.maxDataRate)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minDataRate+" - "+this.data.maxDataRate+".");const t=new BridgePacket;t.set({name:"0",type:"u",value:Math.round(1e3/e)}),t.set({name:"1",type:"g",value:1e3/e}),await t.send(this.Z,54)}getMinDataRate(){if(this.le(),1e300===this.data.minDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minDataRate}getMaxDataRate(){if(this.le(),1e300===this.data.maxDataRate)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxDataRate}getdB(){if(this.le(),1e300===this.data.dB||Number.isNaN(this.data.dB))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);if(this.data.dB>this.data.maxdB)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE_HIGH);return this.data.dB}getMaxdB(){if(this.le(),1e300===this.data.maxdB)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxdB}getdBA(){if(this.le(),1e300===this.data.dBA||Number.isNaN(this.data.dBA))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dBA}getdBC(){if(this.le(),1e300===this.data.dBC||Number.isNaN(this.data.dBC))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.dBC}getNoiseFloor(){if(this.le(),1e300===this.data.noiseFloor)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.noiseFloor}getOctaves(){if(this.le(),this.data.octaves.includes(1e300))throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.octaves}getSPLChangeTrigger(){if(this.le(),1e300===this.data.SPLChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.SPLChangeTrigger}async setSPLChangeTrigger(e){if(this.le(),e<this.data.minSPLChangeTrigger||e>this.data.maxSPLChangeTrigger)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: "+this.data.minSPLChangeTrigger+" - "+this.data.maxSPLChangeTrigger+".");const t=new BridgePacket;t.set({name:"0",type:"g",value:e}),await t.send(this.Z,46)}getMinSPLChangeTrigger(){if(this.le(),1e300===this.data.minSPLChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.minSPLChangeTrigger}getMaxSPLChangeTrigger(){if(this.le(),1e300===this.data.maxSPLChangeTrigger)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.maxSPLChangeTrigger}getSPLRange(){if(this.le(),2147483647===this.data.SPLRange)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.SPLRange}async setSPLRange(e){this.le();const t=new BridgePacket;if(!supportedSPLRange(this.Z,e))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified SPLRange is unsupported by this device.");t.set({name:"0",type:"d",value:e}),await t.send(this.Z,116)}}class SoundSensor extends SoundSensorBase{fe(){return 1e300!=this.data.dB}lt(){if(1e300!=this.data.dB&&this.onSPLChange)try{this.onSPLChange(this.data.dB,this.data.dBA,this.data.dBC,this.data.octaves)}catch(e){logEventException(e)}}}class HubBase extends PhidgetChannel{constructor(e){super(e),this.we=ChannelClass.HUB,this.name="Hub",this.data=this.Ut()}ye(e){switch(e.vpkt){case 60:case 183:case 72:case 73:break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 447:case 448:case 449:case 450:case 451:case 452:case 459:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){switch(this.Z.chDef.uid){case 447:case 448:case 449:case 450:case 451:case 452:case 459:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!0}lt(){}async setFirmwareUpgradeFlag(e,t){this.le();const r=new BridgePacket;r.set({name:"0",type:"d",value:e}),r.set({name:"1",type:"u",value:t}),await r.send(this.Z,60)}async setPortAutoSetSpeed(e,t){this.le();const r=new BridgePacket;if(r.set({name:"0",type:"d",value:e}),!1!==t&&!0!==t)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");r.set({name:"1",type:"d",value:t?1:0}),await r.send(this.Z,183)}async setPortMode(e,t){this.le();const r=new BridgePacket;if(r.set({name:"0",type:"d",value:e}),!supportedHubPortMode(this.Z,t))throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Specified HubPortMode is unsupported by this device.");r.set({name:"1",type:"d",value:t}),await r.send(this.Z,72)}async setPortPower(e,t){this.le();const r=new BridgePacket;if(r.set({name:"0",type:"d",value:e}),!1!==t&&!0!==t)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be a boolean.");r.set({name:"1",type:"d",value:t?1:0}),await r.send(this.Z,73)}}class Hub extends HubBase{async getPortMode(e){var t;if(this.ue(),!this.Z.conn.h)throw new PhidgetError(ErrorCode.UNSUPPORTED);if(e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");await this.hub.pe.openAndUpdatePortProperties(e);const r=null===(t=this.hub.pe.hubPortProps)||void 0===t?void 0:t[e].portMode;if(null==r)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return r}async getPortPower(e){var t;if(this.ue(),!this.Z.conn.h)throw new PhidgetError(ErrorCode.UNSUPPORTED);if(e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");await this.hub.pe.openAndUpdatePortProperties(e);const r=null===(t=this.hub.pe.hubPortProps)||void 0===t?void 0:t[e].portPowered;if(null==r)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return r}getPortMaxSpeed(e){var t;if(this.ue(),!this.Z.conn.h)throw new PhidgetError(ErrorCode.UNSUPPORTED);if(e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");const r=null===(t=this.hub.pe.hubPortProps)||void 0===t?void 0:t[e].portMaxSpeed;if(null==r)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return r}getPortSupportsAutoSetSpeed(e){var t;if(this.ue(),!this.Z.conn.h)throw new PhidgetError(ErrorCode.UNSUPPORTED);if(e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");const r=null===(t=this.hub.pe.hubPortProps)||void 0===t?void 0:t[e].portSuppAutoSetSpeed;if(null==r)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return r}getPortSupportsSetSpeed(e){var t;if(this.ue(),!this.Z.conn.h)throw new PhidgetError(ErrorCode.UNSUPPORTED);if(e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");const r=null===(t=this.hub.pe.hubPortProps)||void 0===t?void 0:t[e].portSuppSetSpeed;if(null==r)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return r}async setFirmwareUpgradeFlag(e,t){if(this.ue(),e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");await super.setFirmwareUpgradeFlag(e,t)}async setPortMode(e,t){if(this.ue(),e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");await super.setPortMode(e,t)}async setPortPower(e,t){if(this.ue(),e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");await super.setPortPower(e,t)}async setPortAutoSetSpeed(e,t){if(this.ue(),e<0||e>this.hubPortCount-1)throw new PhidgetError(ErrorCode.INVALID_ARGUMENT,"Value must be in range: 0 - "+(this.hubPortCount-1)+".");await super.setPortAutoSetSpeed(e,t)}}class FirmwareUpgradeBase extends PhidgetChannel{constructor(e){super(e),this.onProgressChange=null,this.we=ChannelClass.FIRMWARE_UPGRADE,this.name="FirmwareUpgrade",this.data=this.Ut()}ye(e){switch(e.vpkt){case 112:break;case 113:if(this.data.progress=e.entries[0].v,this.ce&&this.onProgressChange)try{this.onProgressChange(this.data.progress)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{actualDeviceID:2147483647,actualDeviceVINTID:4294967295,actualDeviceSKU:null,actualDeviceVersion:2147483647,actualDeviceName:null,progress:1e300}}dt(){switch(this.data=this.Ut(),this.Z.chDef.uid){case 462:case 463:case 464:case 465:case 466:case 467:case 468:this.data.progress=0;break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}async ut(){switch(this.Z.chDef.uid){case 462:case 463:case 464:case 465:case 466:case 467:case 468:break;default:throw new PhidgetError(ErrorCode.UNSUPPORTED)}}fe(){return!(1e300==this.data.progress&&!this.Pr)}lt(){if(1e300!=this.data.progress&&this.onProgressChange)try{this.onProgressChange(this.data.progress)}catch(e){logEventException(e)}}get actualDeviceID(){return this.getActualDeviceID()}get actualDeviceName(){return this.getActualDeviceName()}get actualDeviceSKU(){return this.getActualDeviceSKU()}get actualDeviceVersion(){return this.getActualDeviceVersion()}get actualDeviceVINTID(){return this.getActualDeviceVINTID()}get progress(){return this.getProgress()}getActualDeviceID(){if(this.le(),2147483647===this.data.actualDeviceID)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.actualDeviceID}getActualDeviceName(){if(this.le(),null===this.data.actualDeviceName)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.actualDeviceName}getActualDeviceSKU(){if(this.le(),null===this.data.actualDeviceSKU)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.actualDeviceSKU}getActualDeviceVersion(){if(this.le(),2147483647===this.data.actualDeviceVersion)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.actualDeviceVersion}getActualDeviceVINTID(){if(this.le(),4294967295===this.data.actualDeviceVINTID)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.actualDeviceVINTID}getProgress(){if(this.le(),1e300===this.data.progress)throw new PhidgetError(ErrorCode.UNKNOWN_VALUE);return this.data.progress}}class FirmwareUpgrade extends FirmwareUpgradeBase{ye(e){if(114===e.vpkt);else super.ye(e)}sendFirmware(e){throw new Error("Method not implemented.")}}var whitespaces$2="\t\n\v\f\r Â áââââââââââââ¯âã\u2028\u2029\ufeff",uncurryThis=functionUncurryThis,requireObjectCoercible=requireObjectCoercible$4,toString=toString$5,whitespaces$1=whitespaces$2,replace=uncurryThis("".replace),whitespace="["+whitespaces$1+"]",ltrim=RegExp("^"+whitespace+whitespace+"*"),rtrim=RegExp(whitespace+whitespace+"*$"),createMethod=function(e){return function(t){var r=toString(requireObjectCoercible(t));return 1&e&&(r=replace(r,ltrim,"")),2&e&&(r=replace(r,rtrim,"")),r}},stringTrim={start:createMethod(1),end:createMethod(2),trim:createMethod(3)},PROPER_FUNCTION_NAME=functionName.PROPER,fails=fails$f,whitespaces=whitespaces$2,non="âÂá ",stringTrimForced=function(e){return fails((function(){return!!whitespaces[e]()||non[e]()!==non||PROPER_FUNCTION_NAME&&whitespaces[e].name!==e}))},$=_export,$trim=stringTrim.trim,forcedStringTrimMethod=stringTrimForced;$({target:"String",proto:!0,forced:forcedStringTrimMethod("trim")},{trim:function(){return $trim(this)}});var entryVirtual=entryVirtual$4,trim$3=entryVirtual("String").trim,isPrototypeOf=objectIsPrototypeOf,method=trim$3,StringPrototype=String.prototype,trim$2=function(e){var t=e.trim;return"string"==typeof e||e===StringPrototype||isPrototypeOf(StringPrototype,e)&&t===StringPrototype.trim?method:t},parent=trim$2,trim$1=parent,trim=trim$1;class DictionaryBase extends PhidgetChannel{constructor(e){super(e),this.onAdd=null,this.onUpdate=null,this.onRemove=null,this.we=ChannelClass.DICTIONARY,this.name="Dictionary",this.data=this.Ut()}ye(e){switch(e.vpkt){case 123:case 131:case 129:case 127:case 132:case 130:case 125:break;case 124:if(this.ce&&this.onAdd)try{this.onAdd(e.entries[0].v,e.entries[1].v)}catch(e){logEventException(e)}break;case 128:if(this.ce&&this.onRemove)try{this.onRemove(e.entries[0].v)}catch(e){logEventException(e)}break;case 126:if(this.ce&&this.onUpdate)try{this.onUpdate(e.entries[0].v,e.entries[1].v)}catch(e){logEventException(e)}break;default:throw new PhidgetError(ErrorCode.INVALID_PACKET,"Unsupported bridge packet: 0x"+e.vpkt.toString(16))}}Ut(){return{}}dt(){throw new PhidgetError(ErrorCode.UNEXPECTED)}async ut(){throw new PhidgetError(ErrorCode.UNEXPECTED)}fe(){return!0}lt(){}async add(e,t){this.le();const r=new BridgePacket;r.set({name:"0",type:"s",value:e}),r.set({name:"1",type:"s",value:t}),await r.send(this.Z,123)}async removeAll(){this.le();const e=new BridgePacket;await e.send(this.Z,131)}async remove(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"s",value:e}),await t.send(this.Z,127)}async set(e,t){this.le();const r=new BridgePacket;r.set({name:"0",type:"s",value:e}),r.set({name:"1",type:"s",value:t}),await r.send(this.Z,130)}async update(e,t){this.le();const r=new BridgePacket;r.set({name:"0",type:"s",value:e}),r.set({name:"1",type:"s",value:t}),await r.send(this.Z,125)}}class Dictionary extends DictionaryBase{async get(e,t){this.le();const r=new BridgePacket;r.set({name:"0",type:"s",value:e});try{return await r.send(this.Z,129)}catch(e){if(void 0!==t)return t;if(e instanceof PhidgetError&&e.errorCode===ErrorCode.NO_SUCH_ENTITY)return null;throw e}}async scan(e){this.le();const t=new BridgePacket;t.set({name:"0",type:"s",value:null!=e?e:""});const r=await t.send(this.Z,132);return 0==r.length?[]:trim(r).call(r).split("\n")}}function CreatePhidgetChannel(e){switch(e.class){case ChannelClass.ACCELEROMETER:return new Accelerometer(e);case ChannelClass.BLDC_MOTOR:return new BLDCMotor(e);case ChannelClass.CAPACITIVE_TOUCH:return new CapacitiveTouch(e);case ChannelClass.CURRENT_INPUT:return new CurrentInput(e);case ChannelClass.DC_MOTOR:return new DCMotor(e);case ChannelClass.DICTIONARY:return new Dictionary(e);case ChannelClass.DIGITAL_INPUT:return new DigitalInput(e);case ChannelClass.DIGITAL_OUTPUT:return new DigitalOutput(e);case ChannelClass.DISTANCE_SENSOR:return new DistanceSensor(e);case ChannelClass.ENCODER:return new Encoder(e);case ChannelClass.FIRMWARE_UPGRADE:return new FirmwareUpgrade(e);case ChannelClass.FREQUENCY_COUNTER:return new FrequencyCounter(e);case ChannelClass.GENERIC:return new Generic(e);case ChannelClass.GPS:return new GPS(e);case ChannelClass.GYROSCOPE:return new Gyroscope(e);case ChannelClass.HUB:return new Hub(e);case ChannelClass.HUMIDITY_SENSOR:return new HumiditySensor(e);case ChannelClass.IR:return new IR(e);case ChannelClass.LCD:return new LCD(e);case ChannelClass.LIGHT_SENSOR:return new LightSensor(e);case ChannelClass.MAGNETOMETER:return new Magnetometer(e);case ChannelClass.MOTOR_POSITION_CONTROLLER:return new MotorPositionController(e);case ChannelClass.PH_SENSOR:return new PHSensor(e);case ChannelClass.POWER_GUARD:return new PowerGuard(e);case ChannelClass.PRESSURE_SENSOR:return new PressureSensor(e);case ChannelClass.RC_SERVO:return new RCServo(e);case ChannelClass.RESISTANCE_INPUT:return new ResistanceInput(e);case ChannelClass.RFID:return new RFID(e);case ChannelClass.SOUND_SENSOR:return new SoundSensor(e);case ChannelClass.SPATIAL:return new Spatial(e);case ChannelClass.STEPPER:return new Stepper(e);case ChannelClass.TEMPERATURE_SENSOR:return new TemperatureSensor(e);case ChannelClass.VOLTAGE_INPUT:return new VoltageInput(e);case ChannelClass.VOLTAGE_OUTPUT:return new VoltageOutput(e);case ChannelClass.VOLTAGE_RATIO_INPUT:return new VoltageRatioInput(e);default:throw new Error("Invalid Channel Class")}}class Manager{constructor(e){this.onDeviceAttach=null,this.onDeviceDetach=null,this.onAttach=null,this.onDetach=null,this.P=!1,"object"==typeof e&&("onDeviceAttach"in e&&"function"==typeof e.onDeviceAttach&&(this.onDeviceAttach=e.onDeviceAttach),"onDeviceDetach"in e&&"function"==typeof e.onDeviceDetach&&(this.onDeviceDetach=e.onDeviceDetach),"onAttach"in e&&"function"==typeof e.onAttach&&(this.onAttach=e.onAttach),"onDetach"in e&&"function"==typeof e.onDetach&&(this.onDetach=e.onDetach))}open(){if(!this.P){Managers.push(this);for(const r of Connections){if(this.onDeviceAttach)for(const t of values(e=r.U).call(e)){var e;const r=new PhidgetDevice(t);try{this.onDeviceAttach(r)}catch(e){logEventException(e)}}if(this.onAttach)for(const e of values(t=r.A).call(t)){var t;const r=CreatePhidgetChannel(e);try{this.onAttach(r)}catch(e){logEventException(e)}}}this.P=!0}}close(){this.P=!1,Managers.includes(this)&&Managers.splice(Managers.indexOf(this),1)}C(e){if(this.P&&this.onDeviceAttach){const t=new PhidgetDevice(e);try{this.onDeviceAttach(t)}catch(e){logEventException(e)}}}m(e){if(this.P&&this.onDeviceDetach){const t=new PhidgetDevice(e);try{this.onDeviceDetach(t)}catch(e){logEventException(e)}}}k(e){if(this.P&&this.onAttach){const t=CreatePhidgetChannel(e);try{this.onAttach(t)}catch(e){logEventException(e)}}}S(e){if(this.P&&this.onDetach){const t=CreatePhidgetChannel(e);try{this.onDetach(t)}catch(e){logEventException(e)}}}}export{Accelerometer,BLDCMotor,BridgeGain,CapacitiveTouch,ChannelClass,ChannelSubclass,NetworkConnection as Connection,CurrentInput,DCMotor,DataAdapterEndianness,DataAdapterHandshakeMode,DataAdapterIOVoltage,DataAdapterParity,DataAdapterProtocol,DataAdapterSPIMode,DataAdapterStopBits,DecelerationType,DeviceClass,DeviceID,Dictionary,DigitalInput,DigitalOutput,DistanceSensor,Encoder,EncoderIOMode,ErrorCode,ErrorEventCode,FanMode,FirmwareUpgrade,FrequencyCounter,FrequencyFilterType,GPS,Generic,Gyroscope,Hub,HubPortMode,HumiditySensor,IR,IRCodeEncoding,IRCodeLength,InputMode,JSLibraryVersion,LCD,LCDFont,LCDPixelState,LCDScreenSize,LEDForwardVoltage,LibraryVersion,LightSensor,Log,LogLevel,Magnetometer,Manager,MeshMode,MotorPositionController,NetworkConnection,PHSensor,PacketErrorCode,Phidget,PhidgetConnection,PhidgetError,PositionType,PowerGuard,PowerSupply,PressureSensor,RCServo,RCServoVoltage,RFID,RFIDProtocol,RTDType,RTDWireSetup,ResistanceInput,SPLRange,SoundSensor,Spatial,SpatialAlgorithm,SpatialPrecision,Stepper,StepperControlMode,TemperatureSensor,ThermocoupleType,USBConnection,Unit,VoltageInput,VoltageOutput,VoltageOutputRange,VoltageRange,VoltageRatioInput,VoltageRatioSensorType,VoltageSensorType};